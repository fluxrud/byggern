
byggern_proj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000162  00800100  00001708  0000179c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001708  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800262  00800262  000018fe  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000018fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000195c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000288  00000000  00000000  00001998  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000308f  00000000  00000000  00001c20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000db4  00000000  00000000  00004caf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013e9  00000000  00000000  00005a63  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000720  00000000  00000000  00006e4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a78  00000000  00000000  0000756c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012d6  00000000  00000000  00007fe4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000260  00000000  00000000  000092ba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__ctors_end>
       4:	0c 94 ab 03 	jmp	0x756	; 0x756 <__vector_1>
       8:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
       c:	0c 94 3d 04 	jmp	0x87a	; 0x87a <__vector_3>
      10:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      14:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      18:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      1c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      20:	0c 94 85 04 	jmp	0x90a	; 0x90a <__vector_8>
      24:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      28:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      2c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      30:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      34:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      38:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      3c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      40:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      44:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      48:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      4c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      50:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      54:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      58:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      5c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      60:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      64:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      68:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      6c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 5c       	subi	r16, 0xC0	; 192
      76:	00 00       	nop
      78:	0c 00       	.word	0x000c	; ????
      7a:	0c 00       	.word	0x000c	; ????
      7c:	7c 28       	or	r7, r12
      7e:	7c 28       	or	r7, r12
      80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
      82:	68 00       	.word	0x0068	; ????
      84:	24 10       	cpse	r2, r4
      86:	48 00       	.word	0x0048	; ????
      88:	28 54       	subi	r18, 0x48	; 72
      8a:	28 40       	sbci	r18, 0x08	; 8
      8c:	00 0c       	add	r0, r0
      8e:	00 00       	nop
      90:	00 78       	andi	r16, 0x80	; 128
      92:	84 00       	.word	0x0084	; ????
      94:	84 78       	andi	r24, 0x84	; 132
      96:	00 00       	nop
      98:	54 38       	cpi	r21, 0x84	; 132
      9a:	54 00       	.word	0x0054	; ????
      9c:	10 7c       	andi	r17, 0xC0	; 192
      9e:	10 00       	.word	0x0010	; ????
      a0:	80 40       	sbci	r24, 0x00	; 0
      a2:	00 00       	nop
      a4:	10 10       	cpse	r1, r0
      a6:	10 00       	.word	0x0010	; ????
      a8:	00 40       	sbci	r16, 0x00	; 0
      aa:	00 00       	nop
      ac:	60 10       	cpse	r6, r0
      ae:	0c 00       	.word	0x000c	; ????
      b0:	38 54       	subi	r19, 0x48	; 72
      b2:	38 00       	.word	0x0038	; ????
      b4:	48 7c       	andi	r20, 0xC8	; 200
      b6:	40 00       	.word	0x0040	; ????
      b8:	48 64       	ori	r20, 0x48	; 72
      ba:	58 00       	.word	0x0058	; ????
      bc:	44 54       	subi	r20, 0x44	; 68
      be:	2c 00       	.word	0x002c	; ????
      c0:	1c 10       	cpse	r1, r12
      c2:	7c 00       	.word	0x007c	; ????
      c4:	5c 54       	subi	r21, 0x4C	; 76
      c6:	24 00       	.word	0x0024	; ????
      c8:	38 54       	subi	r19, 0x48	; 72
      ca:	24 00       	.word	0x0024	; ????
      cc:	64 14       	cp	r6, r4
      ce:	0c 00       	.word	0x000c	; ????
      d0:	68 54       	subi	r22, 0x48	; 72
      d2:	2c 00       	.word	0x002c	; ????
      d4:	48 54       	subi	r20, 0x48	; 72
      d6:	38 00       	.word	0x0038	; ????
      d8:	00 48       	sbci	r16, 0x80	; 128
      da:	00 00       	nop
      dc:	80 48       	sbci	r24, 0x80	; 128
      de:	00 00       	nop
      e0:	10 28       	or	r1, r0
      e2:	44 00       	.word	0x0044	; ????
      e4:	28 28       	or	r2, r8
      e6:	28 00       	.word	0x0028	; ????
      e8:	44 28       	or	r4, r4
      ea:	10 00       	.word	0x0010	; ????
      ec:	04 54       	subi	r16, 0x44	; 68
      ee:	08 00       	.word	0x0008	; ????
      f0:	38 44       	sbci	r19, 0x48	; 72
      f2:	5c 00       	.word	0x005c	; ????
      f4:	78 14       	cp	r7, r8
      f6:	78 00       	.word	0x0078	; ????
      f8:	7c 54       	subi	r23, 0x4C	; 76
      fa:	28 00       	.word	0x0028	; ????
      fc:	38 44       	sbci	r19, 0x48	; 72
      fe:	28 00       	.word	0x0028	; ????
     100:	7c 44       	sbci	r23, 0x4C	; 76
     102:	38 00       	.word	0x0038	; ????
     104:	7c 54       	subi	r23, 0x4C	; 76
     106:	44 00       	.word	0x0044	; ????
     108:	7c 14       	cp	r7, r12
     10a:	04 00       	.word	0x0004	; ????
     10c:	38 44       	sbci	r19, 0x48	; 72
     10e:	74 00       	.word	0x0074	; ????
     110:	7c 10       	cpse	r7, r12
     112:	7c 00       	.word	0x007c	; ????
     114:	44 7c       	andi	r20, 0xC4	; 196
     116:	44 00       	.word	0x0044	; ????
     118:	20 40       	sbci	r18, 0x00	; 0
     11a:	3c 00       	.word	0x003c	; ????
     11c:	7c 10       	cpse	r7, r12
     11e:	6c 00       	.word	0x006c	; ????
     120:	7c 40       	sbci	r23, 0x0C	; 12
     122:	40 00       	.word	0x0040	; ????
     124:	7c 18       	sub	r7, r12
     126:	7c 00       	.word	0x007c	; ????
     128:	78 10       	cpse	r7, r8
     12a:	3c 00       	.word	0x003c	; ????
     12c:	38 44       	sbci	r19, 0x48	; 72
     12e:	38 00       	.word	0x0038	; ????
     130:	7c 14       	cp	r7, r12
     132:	08 00       	.word	0x0008	; ????
     134:	38 44       	sbci	r19, 0x48	; 72
     136:	b8 00       	.word	0x00b8	; ????
     138:	7c 14       	cp	r7, r12
     13a:	68 00       	.word	0x0068	; ????
     13c:	48 54       	subi	r20, 0x48	; 72
     13e:	24 00       	.word	0x0024	; ????
     140:	04 7c       	andi	r16, 0xC4	; 196
     142:	04 00       	.word	0x0004	; ????
     144:	7c 40       	sbci	r23, 0x0C	; 12
     146:	7c 00       	.word	0x007c	; ????
     148:	3c 60       	ori	r19, 0x0C	; 12
     14a:	3c 00       	.word	0x003c	; ????
     14c:	7c 30       	cpi	r23, 0x0C	; 12
     14e:	7c 00       	.word	0x007c	; ????
     150:	6c 10       	cpse	r6, r12
     152:	6c 00       	.word	0x006c	; ????
     154:	0c 70       	andi	r16, 0x0C	; 12
     156:	0c 00       	.word	0x000c	; ????
     158:	64 54       	subi	r22, 0x44	; 68
     15a:	4c 00       	.word	0x004c	; ????
     15c:	00 7c       	andi	r16, 0xC0	; 192
     15e:	44 00       	.word	0x0044	; ????
     160:	0c 10       	cpse	r0, r12
     162:	60 00       	.word	0x0060	; ????
     164:	44 7c       	andi	r20, 0xC4	; 196
     166:	00 00       	nop
     168:	08 04       	cpc	r0, r8
     16a:	08 00       	.word	0x0008	; ????
     16c:	80 80       	ld	r8, Z
     16e:	80 00       	.word	0x0080	; ????
     170:	00 04       	cpc	r0, r0
     172:	08 00       	.word	0x0008	; ????
     174:	30 48       	sbci	r19, 0x80	; 128
     176:	78 00       	.word	0x0078	; ????
     178:	7c 48       	sbci	r23, 0x8C	; 140
     17a:	30 00       	.word	0x0030	; ????
     17c:	30 48       	sbci	r19, 0x80	; 128
     17e:	48 00       	.word	0x0048	; ????
     180:	30 48       	sbci	r19, 0x80	; 128
     182:	7c 00       	.word	0x007c	; ????
     184:	30 68       	ori	r19, 0x80	; 128
     186:	50 00       	.word	0x0050	; ????
     188:	10 78       	andi	r17, 0x80	; 128
     18a:	14 00       	.word	0x0014	; ????
     18c:	90 a8       	ldd	r9, Z+48	; 0x30
     18e:	78 00       	.word	0x0078	; ????
     190:	7c 08       	sbc	r7, r12
     192:	70 00       	.word	0x0070	; ????
     194:	50 74       	andi	r21, 0x40	; 64
     196:	40 00       	.word	0x0040	; ????
     198:	80 80       	ld	r8, Z
     19a:	74 00       	.word	0x0074	; ????
     19c:	7c 10       	cpse	r7, r12
     19e:	68 00       	.word	0x0068	; ????
     1a0:	44 7c       	andi	r20, 0xC4	; 196
     1a2:	40 00       	.word	0x0040	; ????
     1a4:	78 10       	cpse	r7, r8
     1a6:	78 00       	.word	0x0078	; ????
     1a8:	78 08       	sbc	r7, r8
     1aa:	70 00       	.word	0x0070	; ????
     1ac:	30 48       	sbci	r19, 0x80	; 128
     1ae:	30 00       	.word	0x0030	; ????
     1b0:	f8 28       	or	r15, r8
     1b2:	10 00       	.word	0x0010	; ????
     1b4:	30 48       	sbci	r19, 0x80	; 128
     1b6:	f8 00       	.word	0x00f8	; ????
     1b8:	78 10       	cpse	r7, r8
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	50 58       	subi	r21, 0x80	; 128
     1be:	28 00       	.word	0x0028	; ????
     1c0:	08 3c       	cpi	r16, 0xC8	; 200
     1c2:	48 00       	.word	0x0048	; ????
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	78 00       	.word	0x0078	; ????
     1c8:	38 40       	sbci	r19, 0x08	; 8
     1ca:	38 00       	.word	0x0038	; ????
     1cc:	78 20       	and	r7, r8
     1ce:	78 00       	.word	0x0078	; ????
     1d0:	48 30       	cpi	r20, 0x08	; 8
     1d2:	48 00       	.word	0x0048	; ????
     1d4:	98 a0       	ldd	r9, Y+32	; 0x20
     1d6:	78 00       	.word	0x0078	; ????
     1d8:	48 68       	ori	r20, 0x88	; 136
     1da:	58 00       	.word	0x0058	; ????
     1dc:	10 78       	andi	r17, 0x80	; 128
     1de:	84 00       	.word	0x0084	; ????
     1e0:	00 7c       	andi	r16, 0xC0	; 192
     1e2:	00 00       	nop
     1e4:	84 78       	andi	r24, 0x84	; 132
     1e6:	10 00       	.word	0x0010	; ????
     1e8:	08 04       	cpc	r0, r8
     1ea:	08 04       	cpc	r0, r8

000001ec <__ctors_end>:
     1ec:	11 24       	eor	r1, r1
     1ee:	1f be       	out	0x3f, r1	; 63
     1f0:	cf ef       	ldi	r28, 0xFF	; 255
     1f2:	d4 e0       	ldi	r29, 0x04	; 4
     1f4:	de bf       	out	0x3e, r29	; 62
     1f6:	cd bf       	out	0x3d, r28	; 61

000001f8 <__do_copy_data>:
     1f8:	12 e0       	ldi	r17, 0x02	; 2
     1fa:	a0 e0       	ldi	r26, 0x00	; 0
     1fc:	b1 e0       	ldi	r27, 0x01	; 1
     1fe:	e8 e0       	ldi	r30, 0x08	; 8
     200:	f7 e1       	ldi	r31, 0x17	; 23
     202:	02 c0       	rjmp	.+4      	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
     204:	05 90       	lpm	r0, Z+
     206:	0d 92       	st	X+, r0
     208:	a2 36       	cpi	r26, 0x62	; 98
     20a:	b1 07       	cpc	r27, r17
     20c:	d9 f7       	brne	.-10     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>

0000020e <__do_clear_bss>:
     20e:	22 e0       	ldi	r18, 0x02	; 2
     210:	a2 e6       	ldi	r26, 0x62	; 98
     212:	b2 e0       	ldi	r27, 0x02	; 2
     214:	01 c0       	rjmp	.+2      	; 0x218 <.do_clear_bss_start>

00000216 <.do_clear_bss_loop>:
     216:	1d 92       	st	X+, r1

00000218 <.do_clear_bss_start>:
     218:	a4 37       	cpi	r26, 0x74	; 116
     21a:	b2 07       	cpc	r27, r18
     21c:	e1 f7       	brne	.-8      	; 0x216 <.do_clear_bss_loop>
     21e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <main>
     222:	0c 94 82 0b 	jmp	0x1704	; 0x1704 <_exit>

00000226 <__bad_interrupt>:
     226:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000022a <set_ctc_mode>:
	i = TCNTn;
	/* Restore Global Interrupt Flag */
	//SREG = sreg;
	sei();
	return i;
}
     22a:	eb e8       	ldi	r30, 0x8B	; 139
     22c:	f0 e0       	ldi	r31, 0x00	; 0
     22e:	80 81       	ld	r24, Z
     230:	8e 7f       	andi	r24, 0xFE	; 254
     232:	80 83       	st	Z, r24
     234:	80 81       	ld	r24, Z
     236:	8d 7f       	andi	r24, 0xFD	; 253
     238:	80 83       	st	Z, r24
     23a:	ea e8       	ldi	r30, 0x8A	; 138
     23c:	f0 e0       	ldi	r31, 0x00	; 0
     23e:	80 81       	ld	r24, Z
     240:	88 60       	ori	r24, 0x08	; 8
     242:	80 83       	st	Z, r24
     244:	80 81       	ld	r24, Z
     246:	8f 7e       	andi	r24, 0xEF	; 239
     248:	80 83       	st	Z, r24
     24a:	08 95       	ret

0000024c <set_selected_clock>:
     24c:	ea e8       	ldi	r30, 0x8A	; 138
     24e:	f0 e0       	ldi	r31, 0x00	; 0
     250:	80 81       	ld	r24, Z
     252:	81 60       	ori	r24, 0x01	; 1
     254:	80 83       	st	Z, r24
     256:	80 81       	ld	r24, Z
     258:	8d 7f       	andi	r24, 0xFD	; 253
     25a:	80 83       	st	Z, r24
     25c:	80 81       	ld	r24, Z
     25e:	8b 7f       	andi	r24, 0xFB	; 251
     260:	80 83       	st	Z, r24
     262:	08 95       	ret

00000264 <set_compare_match_mode>:
     264:	eb e8       	ldi	r30, 0x8B	; 139
     266:	f0 e0       	ldi	r31, 0x00	; 0
     268:	80 81       	ld	r24, Z
     26a:	80 64       	ori	r24, 0x40	; 64
     26c:	80 83       	st	Z, r24
     26e:	80 81       	ld	r24, Z
     270:	8f 77       	andi	r24, 0x7F	; 127
     272:	80 83       	st	Z, r24
     274:	08 95       	ret

00000276 <init_pwm>:
     276:	81 b3       	in	r24, 0x11	; 17
     278:	80 61       	ori	r24, 0x10	; 16
     27a:	81 bb       	out	0x11, r24	; 17
     27c:	0e 94 15 01 	call	0x22a	; 0x22a <set_ctc_mode>
     280:	0e 94 26 01 	call	0x24c	; 0x24c <set_selected_clock>
     284:	0e 94 32 01 	call	0x264	; 0x264 <set_compare_match_mode>
     288:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     28c:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
     290:	08 95       	ret

00000292 <read_adc>:
     292:	e0 e0       	ldi	r30, 0x00	; 0
     294:	f4 e1       	ldi	r31, 0x14	; 20
     296:	10 82       	st	Z, r1
     298:	82 e6       	ldi	r24, 0x62	; 98
     29a:	8a 95       	dec	r24
     29c:	f1 f7       	brne	.-4      	; 0x29a <read_adc+0x8>
     29e:	00 00       	nop
     2a0:	60 81       	ld	r22, Z
     2a2:	70 91 01 14 	lds	r23, 0x1401	; 0x801401 <__bss_end+0x118d>
     2a6:	80 91 02 14 	lds	r24, 0x1402	; 0x801402 <__bss_end+0x118e>
     2aa:	90 91 03 14 	lds	r25, 0x1403	; 0x801403 <__bss_end+0x118f>
     2ae:	08 95       	ret

000002b0 <init_adc>:
     2b0:	80 e0       	ldi	r24, 0x00	; 0
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	05 c0       	rjmp	.+10     	; 0x2c0 <init_adc+0x10>
     2b6:	20 e1       	ldi	r18, 0x10	; 16
     2b8:	28 0f       	add	r18, r24
     2ba:	20 93 00 14 	sts	0x1400, r18	; 0x801400 <__bss_end+0x118c>
     2be:	01 96       	adiw	r24, 0x01	; 1
     2c0:	88 30       	cpi	r24, 0x08	; 8
     2c2:	91 05       	cpc	r25, r1
     2c4:	c4 f3       	brlt	.-16     	; 0x2b6 <init_adc+0x6>
     2c6:	08 95       	ret

000002c8 <get_joystick_analog>:
     2c8:	0e 94 49 01 	call	0x292	; 0x292 <read_adc>
     2cc:	96 2f       	mov	r25, r22
     2ce:	87 2f       	mov	r24, r23
     2d0:	08 95       	ret

000002d2 <get_joystick_direction>:
     2d2:	0e 94 64 01 	call	0x2c8	; 0x2c8 <get_joystick_analog>
     2d6:	84 31       	cpi	r24, 0x14	; 20
     2d8:	78 f0       	brcs	.+30     	; 0x2f8 <get_joystick_direction+0x26>
     2da:	28 2f       	mov	r18, r24
     2dc:	30 e0       	ldi	r19, 0x00	; 0
     2de:	2c 3e       	cpi	r18, 0xEC	; 236
     2e0:	31 05       	cpc	r19, r1
     2e2:	6c f4       	brge	.+26     	; 0x2fe <get_joystick_direction+0x2c>
     2e4:	94 31       	cpi	r25, 0x14	; 20
     2e6:	70 f0       	brcs	.+28     	; 0x304 <get_joystick_direction+0x32>
     2e8:	89 2f       	mov	r24, r25
     2ea:	90 e0       	ldi	r25, 0x00	; 0
     2ec:	8c 3e       	cpi	r24, 0xEC	; 236
     2ee:	91 05       	cpc	r25, r1
     2f0:	64 f4       	brge	.+24     	; 0x30a <get_joystick_direction+0x38>
     2f2:	80 e0       	ldi	r24, 0x00	; 0
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	08 95       	ret
     2f8:	84 e0       	ldi	r24, 0x04	; 4
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	08 95       	ret
     2fe:	83 e0       	ldi	r24, 0x03	; 3
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	08 95       	ret
     304:	81 e0       	ldi	r24, 0x01	; 1
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	08 95       	ret
     30a:	82 e0       	ldi	r24, 0x02	; 2
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	08 95       	ret

00000310 <get_slider_right_analog>:
     310:	0e 94 49 01 	call	0x292	; 0x292 <read_adc>
     314:	08 95       	ret

00000316 <get_slider_left_analog>:
     316:	0e 94 49 01 	call	0x292	; 0x292 <read_adc>
     31a:	89 2f       	mov	r24, r25
     31c:	08 95       	ret

0000031e <goal>:
     31e:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <num_goals>
     322:	8f 5f       	subi	r24, 0xFF	; 255
     324:	80 93 66 02 	sts	0x0266, r24	; 0x800266 <num_goals>
     328:	08 95       	ret

0000032a <display_game>:
     32a:	0f 93       	push	r16
     32c:	1f 93       	push	r17
     32e:	cf 93       	push	r28
     330:	df 93       	push	r29
     332:	cd b7       	in	r28, 0x3d	; 61
     334:	de b7       	in	r29, 0x3e	; 62
     336:	69 97       	sbiw	r28, 0x19	; 25
     338:	0f b6       	in	r0, 0x3f	; 63
     33a:	f8 94       	cli
     33c:	de bf       	out	0x3e, r29	; 62
     33e:	0f be       	out	0x3f, r0	; 63
     340:	cd bf       	out	0x3d, r28	; 61
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	0e 94 87 05 	call	0xb0e	; 0xb0e <oled_fill_entire>
     348:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <title>
     34c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <title+0x1>
     350:	fc 01       	movw	r30, r24
     352:	01 90       	ld	r0, Z+
     354:	00 20       	and	r0, r0
     356:	e9 f7       	brne	.-6      	; 0x352 <display_game+0x28>
     358:	31 97       	sbiw	r30, 0x01	; 1
     35a:	bf 01       	movw	r22, r30
     35c:	68 1b       	sub	r22, r24
     35e:	79 0b       	sbc	r23, r25
     360:	41 e0       	ldi	r20, 0x01	; 1
     362:	0e 94 de 05 	call	0xbbc	; 0xbbc <oled_write_string_on_line>
     366:	81 e1       	ldi	r24, 0x11	; 17
     368:	e8 e0       	ldi	r30, 0x08	; 8
     36a:	f1 e0       	ldi	r31, 0x01	; 1
     36c:	8e 01       	movw	r16, r28
     36e:	0f 5f       	subi	r16, 0xFF	; 255
     370:	1f 4f       	sbci	r17, 0xFF	; 255
     372:	d8 01       	movw	r26, r16
     374:	01 90       	ld	r0, Z+
     376:	0d 92       	st	X+, r0
     378:	8a 95       	dec	r24
     37a:	e1 f7       	brne	.-8      	; 0x374 <display_game+0x4a>
     37c:	fe 01       	movw	r30, r28
     37e:	72 96       	adiw	r30, 0x12	; 18
     380:	83 e0       	ldi	r24, 0x03	; 3
     382:	df 01       	movw	r26, r30
     384:	1d 92       	st	X+, r1
     386:	8a 95       	dec	r24
     388:	e9 f7       	brne	.-6      	; 0x384 <display_game+0x5a>
     38a:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <num_goals>
     38e:	4a e0       	ldi	r20, 0x0A	; 10
     390:	be 01       	movw	r22, r28
     392:	6b 5e       	subi	r22, 0xEB	; 235
     394:	7f 4f       	sbci	r23, 0xFF	; 255
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	0e 94 01 08 	call	0x1002	; 0x1002 <__itoa_ncheck>
     39c:	be 01       	movw	r22, r28
     39e:	6b 5e       	subi	r22, 0xEB	; 235
     3a0:	7f 4f       	sbci	r23, 0xFF	; 255
     3a2:	c8 01       	movw	r24, r16
     3a4:	0e 94 f6 07 	call	0xfec	; 0xfec <strcat>
     3a8:	f8 01       	movw	r30, r16
     3aa:	01 90       	ld	r0, Z+
     3ac:	00 20       	and	r0, r0
     3ae:	e9 f7       	brne	.-6      	; 0x3aa <display_game+0x80>
     3b0:	31 97       	sbiw	r30, 0x01	; 1
     3b2:	bf 01       	movw	r22, r30
     3b4:	60 1b       	sub	r22, r16
     3b6:	71 0b       	sbc	r23, r17
     3b8:	42 e0       	ldi	r20, 0x02	; 2
     3ba:	c8 01       	movw	r24, r16
     3bc:	0e 94 de 05 	call	0xbbc	; 0xbbc <oled_write_string_on_line>
     3c0:	69 96       	adiw	r28, 0x19	; 25
     3c2:	0f b6       	in	r0, 0x3f	; 63
     3c4:	f8 94       	cli
     3c6:	de bf       	out	0x3e, r29	; 62
     3c8:	0f be       	out	0x3f, r0	; 63
     3ca:	cd bf       	out	0x3d, r28	; 61
     3cc:	df 91       	pop	r29
     3ce:	cf 91       	pop	r28
     3d0:	1f 91       	pop	r17
     3d2:	0f 91       	pop	r16
     3d4:	08 95       	ret

000003d6 <draw_selected_arrow>:
     3d6:	cf 93       	push	r28
     3d8:	df 93       	push	r29
     3da:	0e 94 57 05 	call	0xaae	; 0xaae <oled_goto_page>
     3de:	8a e7       	ldi	r24, 0x7A	; 122
     3e0:	0e 94 62 05 	call	0xac4	; 0xac4 <oled_goto_col>
     3e4:	c0 e0       	ldi	r28, 0x00	; 0
     3e6:	d0 e0       	ldi	r29, 0x00	; 0
     3e8:	07 c0       	rjmp	.+14     	; 0x3f8 <draw_selected_arrow+0x22>
     3ea:	fe 01       	movw	r30, r28
     3ec:	eb 5b       	subi	r30, 0xBB	; 187
     3ee:	fd 4f       	sbci	r31, 0xFD	; 253
     3f0:	80 81       	ld	r24, Z
     3f2:	0e 94 78 05 	call	0xaf0	; 0xaf0 <oled_write>
     3f6:	21 96       	adiw	r28, 0x01	; 1
     3f8:	c6 30       	cpi	r28, 0x06	; 6
     3fa:	d1 05       	cpc	r29, r1
     3fc:	b4 f3       	brlt	.-20     	; 0x3ea <draw_selected_arrow+0x14>
     3fe:	df 91       	pop	r29
     400:	cf 91       	pop	r28
     402:	08 95       	ret

00000404 <oled_menu_display>:
     404:	cf 93       	push	r28
     406:	80 e0       	ldi	r24, 0x00	; 0
     408:	0e 94 87 05 	call	0xb0e	; 0xb0e <oled_fill_entire>
     40c:	c0 e0       	ldi	r28, 0x00	; 0
     40e:	1f c0       	rjmp	.+62     	; 0x44e <oled_menu_display+0x4a>
     410:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <top_item>
     414:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <top_item+0x1>
     418:	82 0f       	add	r24, r18
     41a:	93 1f       	adc	r25, r19
     41c:	83 30       	cpi	r24, 0x03	; 3
     41e:	91 05       	cpc	r25, r1
     420:	44 f4       	brge	.+16     	; 0x432 <oled_menu_display+0x2e>
     422:	88 0f       	add	r24, r24
     424:	99 1f       	adc	r25, r25
     426:	fc 01       	movw	r30, r24
     428:	e1 5c       	subi	r30, 0xC1	; 193
     42a:	fd 4f       	sbci	r31, 0xFD	; 253
     42c:	80 81       	ld	r24, Z
     42e:	91 81       	ldd	r25, Z+1	; 0x01
     430:	02 c0       	rjmp	.+4      	; 0x436 <oled_menu_display+0x32>
     432:	8b e4       	ldi	r24, 0x4B	; 75
     434:	91 e0       	ldi	r25, 0x01	; 1
     436:	cf 5f       	subi	r28, 0xFF	; 255
     438:	fc 01       	movw	r30, r24
     43a:	01 90       	ld	r0, Z+
     43c:	00 20       	and	r0, r0
     43e:	e9 f7       	brne	.-6      	; 0x43a <oled_menu_display+0x36>
     440:	31 97       	sbiw	r30, 0x01	; 1
     442:	bf 01       	movw	r22, r30
     444:	68 1b       	sub	r22, r24
     446:	79 0b       	sbc	r23, r25
     448:	4c 2f       	mov	r20, r28
     44a:	0e 94 de 05 	call	0xbbc	; 0xbbc <oled_write_string_on_line>
     44e:	2c 2f       	mov	r18, r28
     450:	30 e0       	ldi	r19, 0x00	; 0
     452:	26 30       	cpi	r18, 0x06	; 6
     454:	31 05       	cpc	r19, r1
     456:	e4 f2       	brlt	.-72     	; 0x410 <oled_menu_display+0xc>
     458:	80 91 62 02 	lds	r24, 0x0262	; 0x800262 <__data_end>
     45c:	8f 5f       	subi	r24, 0xFF	; 255
     45e:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <draw_selected_arrow>
     462:	cf 91       	pop	r28
     464:	08 95       	ret

00000466 <oled_menu_scroll_up>:
     466:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <top_item>
     46a:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <top_item+0x1>
     46e:	01 97       	sbiw	r24, 0x01	; 1
     470:	90 93 65 02 	sts	0x0265, r25	; 0x800265 <top_item+0x1>
     474:	80 93 64 02 	sts	0x0264, r24	; 0x800264 <top_item>
     478:	99 23       	and	r25, r25
     47a:	24 f4       	brge	.+8      	; 0x484 <oled_menu_scroll_up+0x1e>
     47c:	10 92 65 02 	sts	0x0265, r1	; 0x800265 <top_item+0x1>
     480:	10 92 64 02 	sts	0x0264, r1	; 0x800264 <top_item>
     484:	08 95       	ret

00000486 <oled_menu_scroll_down>:
     486:	80 91 64 02 	lds	r24, 0x0264	; 0x800264 <top_item>
     48a:	90 91 65 02 	lds	r25, 0x0265	; 0x800265 <top_item+0x1>
     48e:	01 96       	adiw	r24, 0x01	; 1
     490:	90 93 65 02 	sts	0x0265, r25	; 0x800265 <top_item+0x1>
     494:	80 93 64 02 	sts	0x0264, r24	; 0x800264 <top_item>
     498:	02 97       	sbiw	r24, 0x02	; 2
     49a:	34 f0       	brlt	.+12     	; 0x4a8 <oled_menu_scroll_down+0x22>
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	90 93 65 02 	sts	0x0265, r25	; 0x800265 <top_item+0x1>
     4a4:	80 93 64 02 	sts	0x0264, r24	; 0x800264 <top_item>
     4a8:	08 95       	ret

000004aa <oled_menu_sel_down>:
     4aa:	80 91 62 02 	lds	r24, 0x0262	; 0x800262 <__data_end>
     4ae:	90 91 63 02 	lds	r25, 0x0263	; 0x800263 <__data_end+0x1>
     4b2:	01 96       	adiw	r24, 0x01	; 1
     4b4:	90 93 63 02 	sts	0x0263, r25	; 0x800263 <__data_end+0x1>
     4b8:	80 93 62 02 	sts	0x0262, r24	; 0x800262 <__data_end>
     4bc:	06 97       	sbiw	r24, 0x06	; 6
     4be:	44 f0       	brlt	.+16     	; 0x4d0 <oled_menu_sel_down+0x26>
     4c0:	0e 94 43 02 	call	0x486	; 0x486 <oled_menu_scroll_down>
     4c4:	85 e0       	ldi	r24, 0x05	; 5
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	90 93 63 02 	sts	0x0263, r25	; 0x800263 <__data_end+0x1>
     4cc:	80 93 62 02 	sts	0x0262, r24	; 0x800262 <__data_end>
     4d0:	08 95       	ret

000004d2 <oled_menu_sel_up>:
     4d2:	80 91 62 02 	lds	r24, 0x0262	; 0x800262 <__data_end>
     4d6:	90 91 63 02 	lds	r25, 0x0263	; 0x800263 <__data_end+0x1>
     4da:	01 97       	sbiw	r24, 0x01	; 1
     4dc:	90 93 63 02 	sts	0x0263, r25	; 0x800263 <__data_end+0x1>
     4e0:	80 93 62 02 	sts	0x0262, r24	; 0x800262 <__data_end>
     4e4:	18 16       	cp	r1, r24
     4e6:	19 06       	cpc	r1, r25
     4e8:	34 f0       	brlt	.+12     	; 0x4f6 <oled_menu_sel_up+0x24>
     4ea:	0e 94 33 02 	call	0x466	; 0x466 <oled_menu_scroll_up>
     4ee:	10 92 63 02 	sts	0x0263, r1	; 0x800263 <__data_end+0x1>
     4f2:	10 92 62 02 	sts	0x0262, r1	; 0x800262 <__data_end>
     4f6:	08 95       	ret

000004f8 <SPI_MasterTransmit>:
     4f8:	8f b9       	out	0x0f, r24	; 15
     4fa:	77 9b       	sbis	0x0e, 7	; 14
     4fc:	fe cf       	rjmp	.-4      	; 0x4fa <SPI_MasterTransmit+0x2>
     4fe:	08 95       	ret

00000500 <SPI_MasterTrancieve>:
     500:	8f b9       	out	0x0f, r24	; 15
     502:	77 9b       	sbis	0x0e, 7	; 14
     504:	fe cf       	rjmp	.-4      	; 0x502 <SPI_MasterTrancieve+0x2>
     506:	8f b1       	in	r24, 0x0f	; 15
     508:	08 95       	ret

0000050a <SPI_set_slave_select>:
     50a:	86 b3       	in	r24, 0x16	; 22
     50c:	8f 7e       	andi	r24, 0xEF	; 239
     50e:	88 bb       	out	0x18, r24	; 24
     510:	08 95       	ret

00000512 <SPI_clear_slave_select>:
     512:	86 b3       	in	r24, 0x16	; 22
     514:	80 61       	ori	r24, 0x10	; 16
     516:	88 bb       	out	0x18, r24	; 24
     518:	08 95       	ret

0000051a <SPI_MasterInit>:
     51a:	87 b3       	in	r24, 0x17	; 23
     51c:	80 62       	ori	r24, 0x20	; 32
     51e:	87 bb       	out	0x17, r24	; 23
     520:	87 b3       	in	r24, 0x17	; 23
     522:	80 68       	ori	r24, 0x80	; 128
     524:	87 bb       	out	0x17, r24	; 23
     526:	87 b3       	in	r24, 0x17	; 23
     528:	80 61       	ori	r24, 0x10	; 16
     52a:	87 bb       	out	0x17, r24	; 23
     52c:	87 b3       	in	r24, 0x17	; 23
     52e:	8f 7b       	andi	r24, 0xBF	; 191
     530:	87 bb       	out	0x17, r24	; 23
     532:	0e 94 89 02 	call	0x512	; 0x512 <SPI_clear_slave_select>
     536:	83 e5       	ldi	r24, 0x53	; 83
     538:	8d b9       	out	0x0d, r24	; 13
     53a:	0e 94 89 02 	call	0x512	; 0x512 <SPI_clear_slave_select>
     53e:	08 95       	ret

00000540 <mcp2515_read>:
     540:	cf 93       	push	r28
     542:	c8 2f       	mov	r28, r24
     544:	0e 94 85 02 	call	0x50a	; 0x50a <SPI_set_slave_select>
     548:	83 e0       	ldi	r24, 0x03	; 3
     54a:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <SPI_MasterTransmit>
     54e:	8c 2f       	mov	r24, r28
     550:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <SPI_MasterTransmit>
     554:	8f e0       	ldi	r24, 0x0F	; 15
     556:	0e 94 80 02 	call	0x500	; 0x500 <SPI_MasterTrancieve>
     55a:	c8 2f       	mov	r28, r24
     55c:	0e 94 89 02 	call	0x512	; 0x512 <SPI_clear_slave_select>
     560:	8c 2f       	mov	r24, r28
     562:	cf 91       	pop	r28
     564:	08 95       	ret

00000566 <mcp2515_write>:
     566:	cf 93       	push	r28
     568:	df 93       	push	r29
     56a:	d8 2f       	mov	r29, r24
     56c:	c6 2f       	mov	r28, r22
     56e:	0e 94 85 02 	call	0x50a	; 0x50a <SPI_set_slave_select>
     572:	82 e0       	ldi	r24, 0x02	; 2
     574:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <SPI_MasterTransmit>
     578:	8d 2f       	mov	r24, r29
     57a:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <SPI_MasterTransmit>
     57e:	8c 2f       	mov	r24, r28
     580:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <SPI_MasterTransmit>
     584:	0e 94 89 02 	call	0x512	; 0x512 <SPI_clear_slave_select>
     588:	df 91       	pop	r29
     58a:	cf 91       	pop	r28
     58c:	08 95       	ret

0000058e <mcp2515_send_req>:
     58e:	cf 93       	push	r28
     590:	c8 2f       	mov	r28, r24
     592:	0e 94 85 02 	call	0x50a	; 0x50a <SPI_set_slave_select>
     596:	c8 30       	cpi	r28, 0x08	; 8
     598:	30 f4       	brcc	.+12     	; 0x5a6 <mcp2515_send_req+0x18>
     59a:	80 e8       	ldi	r24, 0x80	; 128
     59c:	8c 0f       	add	r24, r28
     59e:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <SPI_MasterTransmit>
     5a2:	0e 94 89 02 	call	0x512	; 0x512 <SPI_clear_slave_select>
     5a6:	cf 91       	pop	r28
     5a8:	08 95       	ret

000005aa <mcp2515_bit_mod>:
     5aa:	1f 93       	push	r17
     5ac:	cf 93       	push	r28
     5ae:	df 93       	push	r29
     5b0:	18 2f       	mov	r17, r24
     5b2:	d6 2f       	mov	r29, r22
     5b4:	c4 2f       	mov	r28, r20
     5b6:	0e 94 85 02 	call	0x50a	; 0x50a <SPI_set_slave_select>
     5ba:	85 e0       	ldi	r24, 0x05	; 5
     5bc:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <SPI_MasterTransmit>
     5c0:	81 2f       	mov	r24, r17
     5c2:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <SPI_MasterTransmit>
     5c6:	8d 2f       	mov	r24, r29
     5c8:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <SPI_MasterTransmit>
     5cc:	8c 2f       	mov	r24, r28
     5ce:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <SPI_MasterTransmit>
     5d2:	0e 94 89 02 	call	0x512	; 0x512 <SPI_clear_slave_select>
     5d6:	df 91       	pop	r29
     5d8:	cf 91       	pop	r28
     5da:	1f 91       	pop	r17
     5dc:	08 95       	ret

000005de <mcp2515_reset>:
     5de:	0e 94 85 02 	call	0x50a	; 0x50a <SPI_set_slave_select>
     5e2:	80 ec       	ldi	r24, 0xC0	; 192
     5e4:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <SPI_MasterTransmit>
     5e8:	0e 94 89 02 	call	0x512	; 0x512 <SPI_clear_slave_select>
     5ec:	08 95       	ret

000005ee <can_interrupt_enable>:
     5ee:	8a b7       	in	r24, 0x3a	; 58
     5f0:	80 64       	ori	r24, 0x40	; 64
     5f2:	8a bf       	out	0x3a, r24	; 58
     5f4:	8b b7       	in	r24, 0x3b	; 59
     5f6:	80 64       	ori	r24, 0x40	; 64
     5f8:	8b bf       	out	0x3b, r24	; 59
     5fa:	85 b7       	in	r24, 0x35	; 53
     5fc:	82 60       	ori	r24, 0x02	; 2
     5fe:	85 bf       	out	0x35, r24	; 53
     600:	85 b7       	in	r24, 0x35	; 53
     602:	8e 7f       	andi	r24, 0xFE	; 254
     604:	85 bf       	out	0x35, r24	; 53
     606:	78 94       	sei
     608:	08 95       	ret

0000060a <can_set_config_mode>:
     60a:	48 2f       	mov	r20, r24
     60c:	60 ee       	ldi	r22, 0xE0	; 224
     60e:	8f e0       	ldi	r24, 0x0F	; 15
     610:	0e 94 d5 02 	call	0x5aa	; 0x5aa <mcp2515_bit_mod>
     614:	08 95       	ret

00000616 <init_can>:
     616:	0e 94 f7 02 	call	0x5ee	; 0x5ee <can_interrupt_enable>
     61a:	43 e0       	ldi	r20, 0x03	; 3
     61c:	6f ef       	ldi	r22, 0xFF	; 255
     61e:	8a e2       	ldi	r24, 0x2A	; 42
     620:	0e 94 d5 02 	call	0x5aa	; 0x5aa <mcp2515_bit_mod>
     624:	41 eb       	ldi	r20, 0xB1	; 177
     626:	6f ef       	ldi	r22, 0xFF	; 255
     628:	89 e2       	ldi	r24, 0x29	; 41
     62a:	0e 94 d5 02 	call	0x5aa	; 0x5aa <mcp2515_bit_mod>
     62e:	45 e0       	ldi	r20, 0x05	; 5
     630:	6f ef       	ldi	r22, 0xFF	; 255
     632:	88 e2       	ldi	r24, 0x28	; 40
     634:	0e 94 d5 02 	call	0x5aa	; 0x5aa <mcp2515_bit_mod>
     638:	48 e0       	ldi	r20, 0x08	; 8
     63a:	68 e0       	ldi	r22, 0x08	; 8
     63c:	8f e0       	ldi	r24, 0x0F	; 15
     63e:	0e 94 d5 02 	call	0x5aa	; 0x5aa <mcp2515_bit_mod>
     642:	80 e0       	ldi	r24, 0x00	; 0
     644:	0e 94 05 03 	call	0x60a	; 0x60a <can_set_config_mode>
     648:	43 e0       	ldi	r20, 0x03	; 3
     64a:	63 e0       	ldi	r22, 0x03	; 3
     64c:	8b e2       	ldi	r24, 0x2B	; 43
     64e:	0e 94 d5 02 	call	0x5aa	; 0x5aa <mcp2515_bit_mod>
     652:	40 e2       	ldi	r20, 0x20	; 32
     654:	60 e2       	ldi	r22, 0x20	; 32
     656:	8b e2       	ldi	r24, 0x2B	; 43
     658:	0e 94 d5 02 	call	0x5aa	; 0x5aa <mcp2515_bit_mod>
     65c:	40 e6       	ldi	r20, 0x60	; 96
     65e:	60 e6       	ldi	r22, 0x60	; 96
     660:	80 e6       	ldi	r24, 0x60	; 96
     662:	0e 94 d5 02 	call	0x5aa	; 0x5aa <mcp2515_bit_mod>
     666:	08 95       	ret

00000668 <can_transmit_tx_buf0>:
     668:	ff 92       	push	r15
     66a:	0f 93       	push	r16
     66c:	1f 93       	push	r17
     66e:	cf 93       	push	r28
     670:	df 93       	push	r29
     672:	c6 2f       	mov	r28, r22
     674:	f7 2e       	mov	r15, r23
     676:	08 2f       	mov	r16, r24
     678:	19 2f       	mov	r17, r25
     67a:	66 95       	lsr	r22
     67c:	66 95       	lsr	r22
     67e:	66 95       	lsr	r22
     680:	81 e3       	ldi	r24, 0x31	; 49
     682:	0e 94 b3 02 	call	0x566	; 0x566 <mcp2515_write>
     686:	6c 2f       	mov	r22, r28
     688:	62 95       	swap	r22
     68a:	66 0f       	add	r22, r22
     68c:	60 7e       	andi	r22, 0xE0	; 224
     68e:	68 5f       	subi	r22, 0xF8	; 248
     690:	82 e3       	ldi	r24, 0x32	; 50
     692:	0e 94 b3 02 	call	0x566	; 0x566 <mcp2515_write>
     696:	6f ef       	ldi	r22, 0xFF	; 255
     698:	84 e3       	ldi	r24, 0x34	; 52
     69a:	0e 94 b3 02 	call	0x566	; 0x566 <mcp2515_write>
     69e:	6f ef       	ldi	r22, 0xFF	; 255
     6a0:	83 e3       	ldi	r24, 0x33	; 51
     6a2:	0e 94 b3 02 	call	0x566	; 0x566 <mcp2515_write>
     6a6:	df 2d       	mov	r29, r15
     6a8:	6f 2d       	mov	r22, r15
     6aa:	85 e3       	ldi	r24, 0x35	; 53
     6ac:	0e 94 b3 02 	call	0x566	; 0x566 <mcp2515_write>
     6b0:	c0 e0       	ldi	r28, 0x00	; 0
     6b2:	0b c0       	rjmp	.+22     	; 0x6ca <can_transmit_tx_buf0+0x62>
     6b4:	80 2f       	mov	r24, r16
     6b6:	91 2f       	mov	r25, r17
     6b8:	fc 01       	movw	r30, r24
     6ba:	ec 0f       	add	r30, r28
     6bc:	f1 1d       	adc	r31, r1
     6be:	60 81       	ld	r22, Z
     6c0:	86 e3       	ldi	r24, 0x36	; 54
     6c2:	8c 0f       	add	r24, r28
     6c4:	0e 94 b3 02 	call	0x566	; 0x566 <mcp2515_write>
     6c8:	cf 5f       	subi	r28, 0xFF	; 255
     6ca:	cd 17       	cp	r28, r29
     6cc:	10 f4       	brcc	.+4      	; 0x6d2 <can_transmit_tx_buf0+0x6a>
     6ce:	c8 30       	cpi	r28, 0x08	; 8
     6d0:	88 f3       	brcs	.-30     	; 0x6b4 <can_transmit_tx_buf0+0x4c>
     6d2:	81 e0       	ldi	r24, 0x01	; 1
     6d4:	0e 94 c7 02 	call	0x58e	; 0x58e <mcp2515_send_req>
     6d8:	df 91       	pop	r29
     6da:	cf 91       	pop	r28
     6dc:	1f 91       	pop	r17
     6de:	0f 91       	pop	r16
     6e0:	ff 90       	pop	r15
     6e2:	08 95       	ret

000006e4 <can_read_rx_buf0>:
     6e4:	df 92       	push	r13
     6e6:	ef 92       	push	r14
     6e8:	ff 92       	push	r15
     6ea:	0f 93       	push	r16
     6ec:	1f 93       	push	r17
     6ee:	cf 93       	push	r28
     6f0:	df 93       	push	r29
     6f2:	81 e6       	ldi	r24, 0x61	; 97
     6f4:	0e 94 a0 02 	call	0x540	; 0x540 <mcp2515_read>
     6f8:	d8 2e       	mov	r13, r24
     6fa:	dd 0c       	add	r13, r13
     6fc:	dd 0c       	add	r13, r13
     6fe:	dd 0c       	add	r13, r13
     700:	82 e6       	ldi	r24, 0x62	; 98
     702:	0e 94 a0 02 	call	0x540	; 0x540 <mcp2515_read>
     706:	82 95       	swap	r24
     708:	86 95       	lsr	r24
     70a:	87 70       	andi	r24, 0x07	; 7
     70c:	d8 0e       	add	r13, r24
     70e:	85 e6       	ldi	r24, 0x65	; 101
     710:	0e 94 a0 02 	call	0x540	; 0x540 <mcp2515_read>
     714:	d8 2f       	mov	r29, r24
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	0e 94 d5 06 	call	0xdaa	; 0xdaa <malloc>
     71c:	7c 01       	movw	r14, r24
     71e:	c0 e0       	ldi	r28, 0x00	; 0
     720:	0a c0       	rjmp	.+20     	; 0x736 <can_read_rx_buf0+0x52>
     722:	87 01       	movw	r16, r14
     724:	0c 0f       	add	r16, r28
     726:	11 1d       	adc	r17, r1
     728:	86 e6       	ldi	r24, 0x66	; 102
     72a:	8c 0f       	add	r24, r28
     72c:	0e 94 a0 02 	call	0x540	; 0x540 <mcp2515_read>
     730:	f8 01       	movw	r30, r16
     732:	80 83       	st	Z, r24
     734:	cf 5f       	subi	r28, 0xFF	; 255
     736:	cd 17       	cp	r28, r29
     738:	10 f4       	brcc	.+4      	; 0x73e <can_read_rx_buf0+0x5a>
     73a:	c8 30       	cpi	r28, 0x08	; 8
     73c:	90 f3       	brcs	.-28     	; 0x722 <can_read_rx_buf0+0x3e>
     73e:	6d 2d       	mov	r22, r13
     740:	7d 2f       	mov	r23, r29
     742:	8e 2d       	mov	r24, r14
     744:	9f 2d       	mov	r25, r15
     746:	df 91       	pop	r29
     748:	cf 91       	pop	r28
     74a:	1f 91       	pop	r17
     74c:	0f 91       	pop	r16
     74e:	ff 90       	pop	r15
     750:	ef 90       	pop	r14
     752:	df 90       	pop	r13
     754:	08 95       	ret

00000756 <__vector_1>:
     756:	1f 92       	push	r1
     758:	0f 92       	push	r0
     75a:	0f b6       	in	r0, 0x3f	; 63
     75c:	0f 92       	push	r0
     75e:	11 24       	eor	r1, r1
     760:	2f 93       	push	r18
     762:	3f 93       	push	r19
     764:	4f 93       	push	r20
     766:	5f 93       	push	r21
     768:	6f 93       	push	r22
     76a:	7f 93       	push	r23
     76c:	8f 93       	push	r24
     76e:	9f 93       	push	r25
     770:	af 93       	push	r26
     772:	bf 93       	push	r27
     774:	cf 93       	push	r28
     776:	ef 93       	push	r30
     778:	ff 93       	push	r31
     77a:	8e e0       	ldi	r24, 0x0E	; 14
     77c:	0e 94 a0 02 	call	0x540	; 0x540 <mcp2515_read>
     780:	8e 70       	andi	r24, 0x0E	; 14
     782:	c8 2f       	mov	r28, r24
     784:	c6 95       	lsr	r28
     786:	1f 92       	push	r1
     788:	cf 93       	push	r28
     78a:	80 e5       	ldi	r24, 0x50	; 80
     78c:	91 e0       	ldi	r25, 0x01	; 1
     78e:	9f 93       	push	r25
     790:	8f 93       	push	r24
     792:	0e 94 71 08 	call	0x10e2	; 0x10e2 <printf>
     796:	0f 90       	pop	r0
     798:	0f 90       	pop	r0
     79a:	0f 90       	pop	r0
     79c:	0f 90       	pop	r0
     79e:	c1 30       	cpi	r28, 0x01	; 1
     7a0:	a9 f4       	brne	.+42     	; 0x7cc <__vector_1+0x76>
     7a2:	8d e2       	ldi	r24, 0x2D	; 45
     7a4:	0e 94 a0 02 	call	0x540	; 0x540 <mcp2515_read>
     7a8:	1f 92       	push	r1
     7aa:	8f 93       	push	r24
     7ac:	86 e6       	ldi	r24, 0x66	; 102
     7ae:	91 e0       	ldi	r25, 0x01	; 1
     7b0:	9f 93       	push	r25
     7b2:	8f 93       	push	r24
     7b4:	0e 94 71 08 	call	0x10e2	; 0x10e2 <printf>
     7b8:	40 e0       	ldi	r20, 0x00	; 0
     7ba:	61 e2       	ldi	r22, 0x21	; 33
     7bc:	8c e2       	ldi	r24, 0x2C	; 44
     7be:	0e 94 d5 02 	call	0x5aa	; 0x5aa <mcp2515_bit_mod>
     7c2:	0f 90       	pop	r0
     7c4:	0f 90       	pop	r0
     7c6:	0f 90       	pop	r0
     7c8:	0f 90       	pop	r0
     7ca:	1a c0       	rjmp	.+52     	; 0x800 <__vector_1+0xaa>
     7cc:	c6 30       	cpi	r28, 0x06	; 6
     7ce:	61 f4       	brne	.+24     	; 0x7e8 <__vector_1+0x92>
     7d0:	0e 94 72 03 	call	0x6e4	; 0x6e4 <can_read_rx_buf0>
     7d4:	62 30       	cpi	r22, 0x02	; 2
     7d6:	11 f4       	brne	.+4      	; 0x7dc <__vector_1+0x86>
     7d8:	0e 94 8f 01 	call	0x31e	; 0x31e <goal>
     7dc:	40 e0       	ldi	r20, 0x00	; 0
     7de:	61 e0       	ldi	r22, 0x01	; 1
     7e0:	8c e2       	ldi	r24, 0x2C	; 44
     7e2:	0e 94 d5 02 	call	0x5aa	; 0x5aa <mcp2515_bit_mod>
     7e6:	0c c0       	rjmp	.+24     	; 0x800 <__vector_1+0xaa>
     7e8:	c7 30       	cpi	r28, 0x07	; 7
     7ea:	41 f4       	brne	.+16     	; 0x7fc <__vector_1+0xa6>
     7ec:	0e 94 72 03 	call	0x6e4	; 0x6e4 <can_read_rx_buf0>
     7f0:	40 e0       	ldi	r20, 0x00	; 0
     7f2:	62 e0       	ldi	r22, 0x02	; 2
     7f4:	8c e2       	ldi	r24, 0x2C	; 44
     7f6:	0e 94 d5 02 	call	0x5aa	; 0x5aa <mcp2515_bit_mod>
     7fa:	02 c0       	rjmp	.+4      	; 0x800 <__vector_1+0xaa>
     7fc:	0e 94 72 03 	call	0x6e4	; 0x6e4 <can_read_rx_buf0>
     800:	40 e0       	ldi	r20, 0x00	; 0
     802:	63 e0       	ldi	r22, 0x03	; 3
     804:	8c e2       	ldi	r24, 0x2C	; 44
     806:	0e 94 d5 02 	call	0x5aa	; 0x5aa <mcp2515_bit_mod>
     80a:	40 e0       	ldi	r20, 0x00	; 0
     80c:	64 e0       	ldi	r22, 0x04	; 4
     80e:	8c e2       	ldi	r24, 0x2C	; 44
     810:	0e 94 d5 02 	call	0x5aa	; 0x5aa <mcp2515_bit_mod>
     814:	8a b7       	in	r24, 0x3a	; 58
     816:	80 64       	ori	r24, 0x40	; 64
     818:	8a bf       	out	0x3a, r24	; 58
     81a:	ff 91       	pop	r31
     81c:	ef 91       	pop	r30
     81e:	cf 91       	pop	r28
     820:	bf 91       	pop	r27
     822:	af 91       	pop	r26
     824:	9f 91       	pop	r25
     826:	8f 91       	pop	r24
     828:	7f 91       	pop	r23
     82a:	6f 91       	pop	r22
     82c:	5f 91       	pop	r21
     82e:	4f 91       	pop	r20
     830:	3f 91       	pop	r19
     832:	2f 91       	pop	r18
     834:	0f 90       	pop	r0
     836:	0f be       	out	0x3f, r0	; 63
     838:	0f 90       	pop	r0
     83a:	1f 90       	pop	r1
     83c:	18 95       	reti

0000083e <can_transmit>:
     83e:	ff 92       	push	r15
     840:	0f 93       	push	r16
     842:	1f 93       	push	r17
     844:	cf 93       	push	r28
     846:	df 93       	push	r29
     848:	f8 2e       	mov	r15, r24
     84a:	06 2f       	mov	r16, r22
     84c:	14 2f       	mov	r17, r20
     84e:	83 e0       	ldi	r24, 0x03	; 3
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	0e 94 d5 06 	call	0xdaa	; 0xdaa <malloc>
     856:	ec 01       	movw	r28, r24
     858:	f8 82       	st	Y, r15
     85a:	09 83       	std	Y+1, r16	; 0x01
     85c:	1a 83       	std	Y+2, r17	; 0x02
     85e:	61 e0       	ldi	r22, 0x01	; 1
     860:	73 e0       	ldi	r23, 0x03	; 3
     862:	9d 2f       	mov	r25, r29
     864:	0e 94 34 03 	call	0x668	; 0x668 <can_transmit_tx_buf0>
     868:	ce 01       	movw	r24, r28
     86a:	0e 94 6d 07 	call	0xeda	; 0xeda <free>
     86e:	df 91       	pop	r29
     870:	cf 91       	pop	r28
     872:	1f 91       	pop	r17
     874:	0f 91       	pop	r16
     876:	ff 90       	pop	r15
     878:	08 95       	ret

0000087a <__vector_3>:
     87a:	1f 92       	push	r1
     87c:	0f 92       	push	r0
     87e:	0f b6       	in	r0, 0x3f	; 63
     880:	0f 92       	push	r0
     882:	11 24       	eor	r1, r1
     884:	2f 93       	push	r18
     886:	3f 93       	push	r19
     888:	4f 93       	push	r20
     88a:	5f 93       	push	r21
     88c:	6f 93       	push	r22
     88e:	7f 93       	push	r23
     890:	8f 93       	push	r24
     892:	9f 93       	push	r25
     894:	af 93       	push	r26
     896:	bf 93       	push	r27
     898:	ef 93       	push	r30
     89a:	ff 93       	push	r31
     89c:	0e 94 35 05 	call	0xa6a	; 0xa6a <init_oled>
     8a0:	10 92 66 02 	sts	0x0266, r1	; 0x800266 <num_goals>
     8a4:	80 91 62 02 	lds	r24, 0x0262	; 0x800262 <__data_end>
     8a8:	90 91 63 02 	lds	r25, 0x0263	; 0x800263 <__data_end+0x1>
     8ac:	89 2b       	or	r24, r25
     8ae:	41 f4       	brne	.+16     	; 0x8c0 <__vector_3+0x46>
     8b0:	80 91 67 02 	lds	r24, 0x0267	; 0x800267 <game_has_started>
     8b4:	81 11       	cpse	r24, r1
     8b6:	04 c0       	rjmp	.+8      	; 0x8c0 <__vector_3+0x46>
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	80 93 67 02 	sts	0x0267, r24	; 0x800267 <game_has_started>
     8be:	06 c0       	rjmp	.+12     	; 0x8cc <__vector_3+0x52>
     8c0:	80 91 67 02 	lds	r24, 0x0267	; 0x800267 <game_has_started>
     8c4:	81 30       	cpi	r24, 0x01	; 1
     8c6:	11 f4       	brne	.+4      	; 0x8cc <__vector_3+0x52>
     8c8:	10 92 67 02 	sts	0x0267, r1	; 0x800267 <game_has_started>
     8cc:	ff 91       	pop	r31
     8ce:	ef 91       	pop	r30
     8d0:	bf 91       	pop	r27
     8d2:	af 91       	pop	r26
     8d4:	9f 91       	pop	r25
     8d6:	8f 91       	pop	r24
     8d8:	7f 91       	pop	r23
     8da:	6f 91       	pop	r22
     8dc:	5f 91       	pop	r21
     8de:	4f 91       	pop	r20
     8e0:	3f 91       	pop	r19
     8e2:	2f 91       	pop	r18
     8e4:	0f 90       	pop	r0
     8e6:	0f be       	out	0x3f, r0	; 63
     8e8:	0f 90       	pop	r0
     8ea:	1f 90       	pop	r1
     8ec:	18 95       	reti

000008ee <init_interrupt>:
     8ee:	8b b7       	in	r24, 0x3b	; 59
     8f0:	8f 7d       	andi	r24, 0xDF	; 223
     8f2:	8b bf       	out	0x3b, r24	; 59
     8f4:	86 b7       	in	r24, 0x36	; 54
     8f6:	8e 7f       	andi	r24, 0xFE	; 254
     8f8:	86 bf       	out	0x36, r24	; 54
     8fa:	8a b7       	in	r24, 0x3a	; 58
     8fc:	80 62       	ori	r24, 0x20	; 32
     8fe:	8a bf       	out	0x3a, r24	; 58
     900:	8b b7       	in	r24, 0x3b	; 59
     902:	80 62       	ori	r24, 0x20	; 32
     904:	8b bf       	out	0x3b, r24	; 59
     906:	78 94       	sei
     908:	08 95       	ret

0000090a <__vector_8>:
     90a:	1f 92       	push	r1
     90c:	0f 92       	push	r0
     90e:	0f b6       	in	r0, 0x3f	; 63
     910:	0f 92       	push	r0
     912:	11 24       	eor	r1, r1
     914:	2f 93       	push	r18
     916:	3f 93       	push	r19
     918:	4f 93       	push	r20
     91a:	5f 93       	push	r21
     91c:	6f 93       	push	r22
     91e:	7f 93       	push	r23
     920:	8f 93       	push	r24
     922:	9f 93       	push	r25
     924:	af 93       	push	r26
     926:	bf 93       	push	r27
     928:	cf 93       	push	r28
     92a:	df 93       	push	r29
     92c:	ef 93       	push	r30
     92e:	ff 93       	push	r31
     930:	0e 94 8b 01 	call	0x316	; 0x316 <get_slider_left_analog>
     934:	d8 2f       	mov	r29, r24
     936:	0e 94 88 01 	call	0x310	; 0x310 <get_slider_right_analog>
     93a:	c8 2f       	mov	r28, r24
     93c:	0e 94 69 01 	call	0x2d2	; 0x2d2 <get_joystick_direction>
     940:	4d 2f       	mov	r20, r29
     942:	6c 2f       	mov	r22, r28
     944:	0e 94 1f 04 	call	0x83e	; 0x83e <can_transmit>
     948:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
     94c:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
     950:	ff 91       	pop	r31
     952:	ef 91       	pop	r30
     954:	df 91       	pop	r29
     956:	cf 91       	pop	r28
     958:	bf 91       	pop	r27
     95a:	af 91       	pop	r26
     95c:	9f 91       	pop	r25
     95e:	8f 91       	pop	r24
     960:	7f 91       	pop	r23
     962:	6f 91       	pop	r22
     964:	5f 91       	pop	r21
     966:	4f 91       	pop	r20
     968:	3f 91       	pop	r19
     96a:	2f 91       	pop	r18
     96c:	0f 90       	pop	r0
     96e:	0f be       	out	0x3f, r0	; 63
     970:	0f 90       	pop	r0
     972:	1f 90       	pop	r1
     974:	18 95       	reti

00000976 <init_pin_directions>:
#include "game.h"

void init_pin_directions()
{
	// set PORTB PIN0 direction as output
	set_bit(DDRB, DDB0);
     976:	87 b3       	in	r24, 0x17	; 23
     978:	81 60       	ori	r24, 0x01	; 1
     97a:	87 bb       	out	0x17, r24	; 23
	// mcp transistor
	set_bit(DDRB, DDB1);
     97c:	87 b3       	in	r24, 0x17	; 23
     97e:	82 60       	ori	r24, 0x02	; 2
     980:	87 bb       	out	0x17, r24	; 23
	char reg = PINB;
     982:	86 b3       	in	r24, 0x16	; 22
	set_bit(reg, DDB1);
     984:	82 60       	ori	r24, 0x02	; 2
	PORTB = reg;
     986:	88 bb       	out	0x18, r24	; 24
     988:	08 95       	ret

0000098a <init_ext_mem>:
}

void init_ext_mem()
{
	// enable XMEM
	set_bit(MCUCR, SRE);
     98a:	85 b7       	in	r24, 0x35	; 53
     98c:	80 68       	ori	r24, 0x80	; 128
     98e:	85 bf       	out	0x35, r24	; 53
	// release 4 msb to jtag
	set_bit(SFIOR, XMM2);
     990:	80 b7       	in	r24, 0x30	; 48
     992:	80 62       	ori	r24, 0x20	; 32
     994:	80 bf       	out	0x30, r24	; 48
	clear_bit(SFIOR, XMM1);
     996:	80 b7       	in	r24, 0x30	; 48
     998:	8f 7e       	andi	r24, 0xEF	; 239
     99a:	80 bf       	out	0x30, r24	; 48
	clear_bit(SFIOR, XMM0);
     99c:	80 b7       	in	r24, 0x30	; 48
     99e:	87 7f       	andi	r24, 0xF7	; 247
     9a0:	80 bf       	out	0x30, r24	; 48
     9a2:	08 95       	ret

000009a4 <main>:

void test_static_address();

int main(void)
{
    init_pin_directions();
     9a4:	0e 94 bb 04 	call	0x976	; 0x976 <init_pin_directions>
	init_ext_mem();
     9a8:	0e 94 c5 04 	call	0x98a	; 0x98a <init_ext_mem>
	init_pwm();
     9ac:	0e 94 3b 01 	call	0x276	; 0x276 <init_pwm>
	USART_Init(MYUBRR);
     9b0:	8f e1       	ldi	r24, 0x1F	; 31
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	0e 94 c3 06 	call	0xd86	; 0xd86 <USART_Init>
	init_adc();
     9b8:	0e 94 58 01 	call	0x2b0	; 0x2b0 <init_adc>
	init_oled();
     9bc:	0e 94 35 05 	call	0xa6a	; 0xa6a <init_oled>
	
	//init_can();
	init_interrupt();
     9c0:	0e 94 77 04 	call	0x8ee	; 0x8ee <init_interrupt>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9c4:	23 e0       	ldi	r18, 0x03	; 3
     9c6:	2a 95       	dec	r18
     9c8:	f1 f7       	brne	.-4      	; 0x9c6 <main+0x22>
     9ca:	00 00       	nop
	
	
	_delay_us(2); // the MCP takes a maximum of 2 us to be ready for a reset
	SPI_MasterInit();
     9cc:	0e 94 8d 02 	call	0x51a	; 0x51a <SPI_MasterInit>
	mcp2515_reset();
     9d0:	0e 94 ef 02 	call	0x5de	; 0x5de <mcp2515_reset>
	
	// todo: change transmit and receive to int return, error handling?
	fdevopen(USART_Transmit, USART_Receive);
     9d4:	60 ed       	ldi	r22, 0xD0	; 208
     9d6:	76 e0       	ldi	r23, 0x06	; 6
     9d8:	8a ec       	ldi	r24, 0xCA	; 202
     9da:	96 e0       	ldi	r25, 0x06	; 6
     9dc:	0e 94 26 08 	call	0x104c	; 0x104c <fdevopen>
	
	// test functions
	//test_static_address();
	//SRAM_test();
	
	oled_fill_entire(0x0F);
     9e0:	8f e0       	ldi	r24, 0x0F	; 15
     9e2:	0e 94 87 05 	call	0xb0e	; 0xb0e <oled_fill_entire>
	// oled_goto_page(0);
	//printf("\n\r arrow = ");
	//oled_draw_arrow();
	
	//_delay_ms(10000);
	toggle_pin('B', 1);
     9e6:	61 e0       	ldi	r22, 0x01	; 1
     9e8:	82 e4       	ldi	r24, 0x42	; 66
     9ea:	0e 94 37 06 	call	0xc6e	; 0xc6e <toggle_pin>
	//_delay_ms(2000);
	//toggle_pin('B', 1);
	
	oled_write_string_on_line("string test", strlen("string test"), 0);
     9ee:	40 e0       	ldi	r20, 0x00	; 0
     9f0:	6b e0       	ldi	r22, 0x0B	; 11
     9f2:	8f ea       	ldi	r24, 0xAF	; 175
     9f4:	91 e0       	ldi	r25, 0x01	; 1
     9f6:	0e 94 de 05 	call	0xbbc	; 0xbbc <oled_write_string_on_line>
	
	//mcp2515_reset();
	//_delay_ms(1000);
	
	//init_timer();
	init_can();
     9fa:	0e 94 0b 03 	call	0x616	; 0x616 <init_can>
	
	//can_set_config_mode(MODE_LOOPBACK);
	
	uint8_t slider_value = get_slider_right_analog();
     9fe:	0e 94 88 01 	call	0x310	; 0x310 <get_slider_right_analog>
		//oled_write_char((unsigned char)'a', 8);
		//oled_fill_entire();
		//display_adc_info(); // using printf
		
		/* OLED */
		if (game_has_started == 0){
     a02:	80 91 67 02 	lds	r24, 0x0267	; 0x800267 <game_has_started>
     a06:	81 11       	cpse	r24, r1
     a08:	03 c0       	rjmp	.+6      	; 0xa10 <main+0x6c>
			oled_menu_display();
     a0a:	0e 94 02 02 	call	0x404	; 0x404 <oled_menu_display>
     a0e:	02 c0       	rjmp	.+4      	; 0xa14 <main+0x70>
		} else {
			display_game();
     a10:	0e 94 95 01 	call	0x32a	; 0x32a <display_game>
		}
		
		
		/* JOYSTICK TX */
		switch (get_joystick_direction())
     a14:	0e 94 69 01 	call	0x2d2	; 0x2d2 <get_joystick_direction>
     a18:	81 30       	cpi	r24, 0x01	; 1
     a1a:	91 05       	cpc	r25, r1
     a1c:	19 f0       	breq	.+6      	; 0xa24 <main+0x80>
     a1e:	02 97       	sbiw	r24, 0x02	; 2
     a20:	21 f0       	breq	.+8      	; 0xa2a <main+0x86>
     a22:	05 c0       	rjmp	.+10     	; 0xa2e <main+0x8a>
		{
			case DOWN:
				oled_menu_sel_down();
     a24:	0e 94 55 02 	call	0x4aa	; 0x4aa <oled_menu_sel_down>
				//can_transmit(0x1f, 1);
				break;
     a28:	02 c0       	rjmp	.+4      	; 0xa2e <main+0x8a>
			case UP:
				oled_menu_sel_up();
     a2a:	0e 94 69 02 	call	0x4d2	; 0x4d2 <oled_menu_sel_up>
				break;
			default:
				break;
		}
		
		can_transmit((uint8_t)get_joystick_direction(), (uint8_t)get_slider_right_analog(), (uint8_t)get_slider_left_analog());
     a2e:	0e 94 8b 01 	call	0x316	; 0x316 <get_slider_left_analog>
     a32:	d8 2f       	mov	r29, r24
     a34:	0e 94 88 01 	call	0x310	; 0x310 <get_slider_right_analog>
     a38:	c8 2f       	mov	r28, r24
     a3a:	0e 94 69 01 	call	0x2d2	; 0x2d2 <get_joystick_direction>
     a3e:	4d 2f       	mov	r20, r29
     a40:	6c 2f       	mov	r22, r28
     a42:	0e 94 1f 04 	call	0x83e	; 0x83e <can_transmit>
		
		/* RIGHT SLIDER TX */
		uint8_t n_slider_value = get_slider_right_analog();
     a46:	0e 94 88 01 	call	0x310	; 0x310 <get_slider_right_analog>
			can_transmit(0x3f, l_slider_val);
		}
		slider_value = n_slider_value;
		*/
		/* OLED RENDER */
		oled_render();
     a4a:	0e 94 0f 06 	call	0xc1e	; 0xc1e <oled_render>
		
		//print_game();
		//display_can_frame(msg);
		
		/* LOOP PERIOD AND LED */
		toggle_pin('B', 0);
     a4e:	60 e0       	ldi	r22, 0x00	; 0
     a50:	82 e4       	ldi	r24, 0x42	; 66
     a52:	0e 94 37 06 	call	0xc6e	; 0xc6e <toggle_pin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a56:	8f ef       	ldi	r24, 0xFF	; 255
     a58:	9f e7       	ldi	r25, 0x7F	; 127
     a5a:	21 e0       	ldi	r18, 0x01	; 1
     a5c:	81 50       	subi	r24, 0x01	; 1
     a5e:	90 40       	sbci	r25, 0x00	; 0
     a60:	20 40       	sbci	r18, 0x00	; 0
     a62:	e1 f7       	brne	.-8      	; 0xa5c <main+0xb8>
     a64:	00 c0       	rjmp	.+0      	; 0xa66 <main+0xc2>
     a66:	00 c0       	rjmp	.+0      	; 0xa68 <main+0xc4>
     a68:	cc cf       	rjmp	.-104    	; 0xa02 <main+0x5e>

00000a6a <init_oled>:

static unsigned char init_data[22] = {0xae, 0xa1, 0xda, 0x12, 0xc8, 0xa8, 0x3f, 0xd5, 0x80, 0x81, 0x50, 0xd9, 0x21, 0x20, 0x02, 0xdb, 0x30, 0xad, 0x00, 0xa4, 0xa6, 0xaf};

void init_oled()
{
	for(int i = 0; i < 22; i++) {
     a6a:	80 e0       	ldi	r24, 0x00	; 0
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	07 c0       	rjmp	.+14     	; 0xa7e <init_oled+0x14>
		oled_c_base[0] = init_data[i];
     a70:	fc 01       	movw	r30, r24
     a72:	e5 5b       	subi	r30, 0xB5	; 181
     a74:	fd 4f       	sbci	r31, 0xFD	; 253
     a76:	20 81       	ld	r18, Z
     a78:	20 93 00 10 	sts	0x1000, r18	; 0x801000 <__bss_end+0xd8c>

static unsigned char init_data[22] = {0xae, 0xa1, 0xda, 0x12, 0xc8, 0xa8, 0x3f, 0xd5, 0x80, 0x81, 0x50, 0xd9, 0x21, 0x20, 0x02, 0xdb, 0x30, 0xad, 0x00, 0xa4, 0xa6, 0xaf};

void init_oled()
{
	for(int i = 0; i < 22; i++) {
     a7c:	01 96       	adiw	r24, 0x01	; 1
     a7e:	86 31       	cpi	r24, 0x16	; 22
     a80:	91 05       	cpc	r25, r1
     a82:	b4 f3       	brlt	.-20     	; 0xa70 <init_oled+0x6>
		oled_c_base[0] = init_data[i];
		//printf("\n\r%x", init_data[i]);
	}
	*oled_c_base = 0x20;
     a84:	e0 e0       	ldi	r30, 0x00	; 0
     a86:	f0 e1       	ldi	r31, 0x10	; 16
     a88:	80 e2       	ldi	r24, 0x20	; 32
     a8a:	80 83       	st	Z, r24
	*oled_c_base = 0x02;
     a8c:	82 e0       	ldi	r24, 0x02	; 2
     a8e:	80 83       	st	Z, r24
     a90:	08 95       	ret

00000a92 <oled_goto_page_direct>:
}

void oled_goto_page_direct(uint8_t p)
{
	if (p > 7) {
     a92:	88 30       	cpi	r24, 0x08	; 8
     a94:	18 f4       	brcc	.+6      	; 0xa9c <oled_goto_page_direct+0xa>
		return;
	}
	*oled_c_base = 0xb0 + p;
     a96:	80 55       	subi	r24, 0x50	; 80
     a98:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xd8c>
     a9c:	08 95       	ret

00000a9e <oled_goto_col_direct>:
}

void oled_goto_col_direct(uint8_t col)
{
	*oled_c_base = 0x21;
     a9e:	e0 e0       	ldi	r30, 0x00	; 0
     aa0:	f0 e1       	ldi	r31, 0x10	; 16
     aa2:	91 e2       	ldi	r25, 0x21	; 33
     aa4:	90 83       	st	Z, r25
	*oled_c_base = 0x00 + col;
     aa6:	80 83       	st	Z, r24
	*oled_c_base = 0xFF;
     aa8:	8f ef       	ldi	r24, 0xFF	; 255
     aaa:	80 83       	st	Z, r24
     aac:	08 95       	ret

00000aae <oled_goto_page>:
}

void oled_goto_page(uint8_t p)
{
	if (p > 7) {
     aae:	88 30       	cpi	r24, 0x08	; 8
     ab0:	40 f4       	brcc	.+16     	; 0xac2 <oled_goto_page+0x14>
		return;
	}
	current_adr = 128 * p;
     ab2:	20 e8       	ldi	r18, 0x80	; 128
     ab4:	82 9f       	mul	r24, r18
     ab6:	c0 01       	movw	r24, r0
     ab8:	11 24       	eor	r1, r1
     aba:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <current_adr+0x1>
     abe:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <current_adr>
     ac2:	08 95       	ret

00000ac4 <oled_goto_col>:
}

void oled_goto_col(uint8_t col)
{
	uint8_t page = current_adr / 128;
     ac4:	20 91 68 02 	lds	r18, 0x0268	; 0x800268 <current_adr>
     ac8:	30 91 69 02 	lds	r19, 0x0269	; 0x800269 <current_adr+0x1>
     acc:	22 0f       	add	r18, r18
     ace:	23 2f       	mov	r18, r19
     ad0:	22 1f       	adc	r18, r18
     ad2:	33 0b       	sbc	r19, r19
     ad4:	31 95       	neg	r19
	current_adr = page * 128 + col;
     ad6:	33 27       	eor	r19, r19
     ad8:	36 95       	lsr	r19
     ada:	32 2f       	mov	r19, r18
     adc:	22 27       	eor	r18, r18
     ade:	37 95       	ror	r19
     ae0:	27 95       	ror	r18
     ae2:	28 0f       	add	r18, r24
     ae4:	31 1d       	adc	r19, r1
     ae6:	30 93 69 02 	sts	0x0269, r19	; 0x800269 <current_adr+0x1>
     aea:	20 93 68 02 	sts	0x0268, r18	; 0x800268 <current_adr>
     aee:	08 95       	ret

00000af0 <oled_write>:
}


void oled_write(unsigned char c){
	oled_sram_base[current_adr] = c;
     af0:	20 91 68 02 	lds	r18, 0x0268	; 0x800268 <current_adr>
     af4:	30 91 69 02 	lds	r19, 0x0269	; 0x800269 <current_adr+0x1>
     af8:	f9 01       	movw	r30, r18
     afa:	f4 5e       	subi	r31, 0xE4	; 228
     afc:	80 83       	st	Z, r24
	current_adr++;
     afe:	2f 5f       	subi	r18, 0xFF	; 255
     b00:	3f 4f       	sbci	r19, 0xFF	; 255
	current_adr %= 1024;
     b02:	33 70       	andi	r19, 0x03	; 3
     b04:	30 93 69 02 	sts	0x0269, r19	; 0x800269 <current_adr+0x1>
     b08:	20 93 68 02 	sts	0x0268, r18	; 0x800268 <current_adr>
     b0c:	08 95       	ret

00000b0e <oled_fill_entire>:
}

void oled_fill_entire(unsigned char c)
{	
	for(int i = 0; i < 1024; i++) {
     b0e:	20 e0       	ldi	r18, 0x00	; 0
     b10:	30 e0       	ldi	r19, 0x00	; 0
     b12:	05 c0       	rjmp	.+10     	; 0xb1e <oled_fill_entire+0x10>
		//if (i % 128 == 0) *oled_c_base = 0xb0 + i / 128;
		oled_sram_base[i] = c;
     b14:	f9 01       	movw	r30, r18
     b16:	f4 5e       	subi	r31, 0xE4	; 228
     b18:	80 83       	st	Z, r24
	current_adr %= 1024;
}

void oled_fill_entire(unsigned char c)
{	
	for(int i = 0; i < 1024; i++) {
     b1a:	2f 5f       	subi	r18, 0xFF	; 255
     b1c:	3f 4f       	sbci	r19, 0xFF	; 255
     b1e:	21 15       	cp	r18, r1
     b20:	94 e0       	ldi	r25, 0x04	; 4
     b22:	39 07       	cpc	r19, r25
     b24:	bc f3       	brlt	.-18     	; 0xb14 <oled_fill_entire+0x6>
		//if (i % 128 == 0) *oled_c_base = 0xb0 + i / 128;
		oled_sram_base[i] = c;
	}
	current_adr = 0;
     b26:	10 92 69 02 	sts	0x0269, r1	; 0x800269 <current_adr+0x1>
     b2a:	10 92 68 02 	sts	0x0268, r1	; 0x800268 <current_adr>
     b2e:	08 95       	ret

00000b30 <oled_write_char>:
}

int oled_write_char(char c, FILE* file)
{
	if (c == '\n'){
     b30:	8a 30       	cpi	r24, 0x0A	; 10
     b32:	69 f4       	brne	.+26     	; 0xb4e <oled_write_char+0x1e>
		//current_page++;
		//current_page %= 8;
		//*oled_c_base = 0xb0 + current_page;
		current_adr += 128;
     b34:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <current_adr>
     b38:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <current_adr+0x1>
     b3c:	80 58       	subi	r24, 0x80	; 128
     b3e:	9f 4f       	sbci	r25, 0xFF	; 255
     b40:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <current_adr+0x1>
     b44:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <current_adr>
		return 0;
     b48:	80 e0       	ldi	r24, 0x00	; 0
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	08 95       	ret
	} else if (c == '\r') {
     b4e:	8d 30       	cpi	r24, 0x0D	; 13
     b50:	49 f4       	brne	.+18     	; 0xb64 <oled_write_char+0x34>
		//*oled_c_base = 0x21;
		//*oled_c_base = 0x00;
		//*oled_c_base = 0xFF;
		current_adr = current_adr - (current_adr % 128);
     b52:	20 91 68 02 	lds	r18, 0x0268	; 0x800268 <current_adr>
     b56:	30 91 69 02 	lds	r19, 0x0269	; 0x800269 <current_adr+0x1>
     b5a:	20 78       	andi	r18, 0x80	; 128
     b5c:	30 93 69 02 	sts	0x0269, r19	; 0x800269 <current_adr+0x1>
     b60:	20 93 68 02 	sts	0x0268, r18	; 0x800268 <current_adr>
	}
	int size = 4;
	if (c < 32 || c > 127) return 1;
     b64:	90 ee       	ldi	r25, 0xE0	; 224
     b66:	98 0f       	add	r25, r24
     b68:	90 36       	cpi	r25, 0x60	; 96
     b6a:	28 f5       	brcc	.+74     	; 0xbb6 <oled_write_char+0x86>
     b6c:	40 e0       	ldi	r20, 0x00	; 0
     b6e:	50 e0       	ldi	r21, 0x00	; 0
     b70:	1c c0       	rjmp	.+56     	; 0xbaa <oled_write_char+0x7a>
	switch(size){
		case 4:
			for(int i = 0; i < size; i++){
				oled_sram_base[current_adr] = pgm_read_byte(&(font4[c - 32][i]));
     b72:	20 91 68 02 	lds	r18, 0x0268	; 0x800268 <current_adr>
     b76:	30 91 69 02 	lds	r19, 0x0269	; 0x800269 <current_adr+0x1>
     b7a:	d9 01       	movw	r26, r18
     b7c:	b4 5e       	subi	r27, 0xE4	; 228
     b7e:	e8 2f       	mov	r30, r24
     b80:	f0 e0       	ldi	r31, 0x00	; 0
     b82:	b0 97       	sbiw	r30, 0x20	; 32
     b84:	ee 0f       	add	r30, r30
     b86:	ff 1f       	adc	r31, r31
     b88:	ee 0f       	add	r30, r30
     b8a:	ff 1f       	adc	r31, r31
     b8c:	e4 0f       	add	r30, r20
     b8e:	f5 1f       	adc	r31, r21
     b90:	e0 59       	subi	r30, 0x90	; 144
     b92:	ff 4f       	sbci	r31, 0xFF	; 255
     b94:	e4 91       	lpm	r30, Z
     b96:	ec 93       	st	X, r30
				current_adr++;
     b98:	2f 5f       	subi	r18, 0xFF	; 255
     b9a:	3f 4f       	sbci	r19, 0xFF	; 255
				current_adr %= 1024;
     b9c:	33 70       	andi	r19, 0x03	; 3
     b9e:	30 93 69 02 	sts	0x0269, r19	; 0x800269 <current_adr+0x1>
     ba2:	20 93 68 02 	sts	0x0268, r18	; 0x800268 <current_adr>
	}
	int size = 4;
	if (c < 32 || c > 127) return 1;
	switch(size){
		case 4:
			for(int i = 0; i < size; i++){
     ba6:	4f 5f       	subi	r20, 0xFF	; 255
     ba8:	5f 4f       	sbci	r21, 0xFF	; 255
     baa:	44 30       	cpi	r20, 0x04	; 4
     bac:	51 05       	cpc	r21, r1
     bae:	0c f3       	brlt	.-62     	; 0xb72 <oled_write_char+0x42>
			}
			break;
		default: 
			return 1;
	}
	return 0;
     bb0:	80 e0       	ldi	r24, 0x00	; 0
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	08 95       	ret
		//*oled_c_base = 0x00;
		//*oled_c_base = 0xFF;
		current_adr = current_adr - (current_adr % 128);
	}
	int size = 4;
	if (c < 32 || c > 127) return 1;
     bb6:	81 e0       	ldi	r24, 0x01	; 1
     bb8:	90 e0       	ldi	r25, 0x00	; 0
			break;
		default: 
			return 1;
	}
	return 0;
}
     bba:	08 95       	ret

00000bbc <oled_write_string_on_line>:

void oled_write_string_on_line(char* s, uint8_t len, uint8_t line)
{
     bbc:	ef 92       	push	r14
     bbe:	ff 92       	push	r15
     bc0:	1f 93       	push	r17
     bc2:	cf 93       	push	r28
     bc4:	df 93       	push	r29
	if (line > 7) return;
     bc6:	48 30       	cpi	r20, 0x08	; 8
     bc8:	20 f5       	brcc	.+72     	; 0xc12 <oled_write_string_on_line+0x56>
     bca:	16 2f       	mov	r17, r22
     bcc:	7c 01       	movw	r14, r24
	current_adr = 128 * line;
     bce:	20 e8       	ldi	r18, 0x80	; 128
     bd0:	42 9f       	mul	r20, r18
     bd2:	c0 01       	movw	r24, r0
     bd4:	11 24       	eor	r1, r1
     bd6:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <current_adr+0x1>
     bda:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <current_adr>
	for (int i = 0; i < 128 / 4; i++)
     bde:	c0 e0       	ldi	r28, 0x00	; 0
     be0:	d0 e0       	ldi	r29, 0x00	; 0
     be2:	14 c0       	rjmp	.+40     	; 0xc0c <oled_write_string_on_line+0x50>
	{
		if(i < len) oled_write_char(s[i], NULL);
     be4:	21 2f       	mov	r18, r17
     be6:	30 e0       	ldi	r19, 0x00	; 0
     be8:	c2 17       	cp	r28, r18
     bea:	d3 07       	cpc	r29, r19
     bec:	4c f4       	brge	.+18     	; 0xc00 <oled_write_string_on_line+0x44>
     bee:	60 e0       	ldi	r22, 0x00	; 0
     bf0:	70 e0       	ldi	r23, 0x00	; 0
     bf2:	f7 01       	movw	r30, r14
     bf4:	ec 0f       	add	r30, r28
     bf6:	fd 1f       	adc	r31, r29
     bf8:	80 81       	ld	r24, Z
     bfa:	0e 94 98 05 	call	0xb30	; 0xb30 <oled_write_char>
     bfe:	05 c0       	rjmp	.+10     	; 0xc0a <oled_write_string_on_line+0x4e>
		else		oled_write_char(' ', NULL);
     c00:	60 e0       	ldi	r22, 0x00	; 0
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	80 e2       	ldi	r24, 0x20	; 32
     c06:	0e 94 98 05 	call	0xb30	; 0xb30 <oled_write_char>

void oled_write_string_on_line(char* s, uint8_t len, uint8_t line)
{
	if (line > 7) return;
	current_adr = 128 * line;
	for (int i = 0; i < 128 / 4; i++)
     c0a:	21 96       	adiw	r28, 0x01	; 1
     c0c:	c0 32       	cpi	r28, 0x20	; 32
     c0e:	d1 05       	cpc	r29, r1
     c10:	4c f3       	brlt	.-46     	; 0xbe4 <oled_write_string_on_line+0x28>
	{
		if(i < len) oled_write_char(s[i], NULL);
		else		oled_write_char(' ', NULL);
	}
}
     c12:	df 91       	pop	r29
     c14:	cf 91       	pop	r28
     c16:	1f 91       	pop	r17
     c18:	ff 90       	pop	r15
     c1a:	ef 90       	pop	r14
     c1c:	08 95       	ret

00000c1e <oled_render>:

void oled_render()
{
     c1e:	cf 93       	push	r28
     c20:	df 93       	push	r29
	/*
	SRAM 0x1800 - 0x1FFF
	*/
	//oled_fill_entire(0xff);
	// current_adr = 0;
	oled_goto_page_direct(0);
     c22:	80 e0       	ldi	r24, 0x00	; 0
     c24:	0e 94 49 05 	call	0xa92	; 0xa92 <oled_goto_page_direct>
	oled_goto_col_direct(0);
     c28:	80 e0       	ldi	r24, 0x00	; 0
     c2a:	0e 94 4f 05 	call	0xa9e	; 0xa9e <oled_goto_col_direct>
	for(int i = 0; i < 1024; i++){
     c2e:	c0 e0       	ldi	r28, 0x00	; 0
     c30:	d0 e0       	ldi	r29, 0x00	; 0
     c32:	16 c0       	rjmp	.+44     	; 0xc60 <oled_render+0x42>
		*oled_d_base = oled_sram_base[i];
     c34:	fe 01       	movw	r30, r28
     c36:	f4 5e       	subi	r31, 0xE4	; 228
     c38:	80 81       	ld	r24, Z
     c3a:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xf8c>
		if (i % 128 == 0) oled_goto_page_direct(i / 128);
     c3e:	ce 01       	movw	r24, r28
     c40:	8f 77       	andi	r24, 0x7F	; 127
     c42:	99 27       	eor	r25, r25
     c44:	89 2b       	or	r24, r25
     c46:	59 f4       	brne	.+22     	; 0xc5e <oled_render+0x40>
     c48:	ce 01       	movw	r24, r28
     c4a:	dd 23       	and	r29, r29
     c4c:	14 f4       	brge	.+4      	; 0xc52 <oled_render+0x34>
     c4e:	81 58       	subi	r24, 0x81	; 129
     c50:	9f 4f       	sbci	r25, 0xFF	; 255
     c52:	88 0f       	add	r24, r24
     c54:	89 2f       	mov	r24, r25
     c56:	88 1f       	adc	r24, r24
     c58:	99 0b       	sbc	r25, r25
     c5a:	0e 94 49 05 	call	0xa92	; 0xa92 <oled_goto_page_direct>
	*/
	//oled_fill_entire(0xff);
	// current_adr = 0;
	oled_goto_page_direct(0);
	oled_goto_col_direct(0);
	for(int i = 0; i < 1024; i++){
     c5e:	21 96       	adiw	r28, 0x01	; 1
     c60:	c1 15       	cp	r28, r1
     c62:	84 e0       	ldi	r24, 0x04	; 4
     c64:	d8 07       	cpc	r29, r24
     c66:	34 f3       	brlt	.-52     	; 0xc34 <oled_render+0x16>
		*oled_d_base = oled_sram_base[i];
		if (i % 128 == 0) oled_goto_page_direct(i / 128);
	}
     c68:	df 91       	pop	r29
     c6a:	cf 91       	pop	r28
     c6c:	08 95       	ret

00000c6e <toggle_pin>:

#include "pin_util.h"

void toggle_pin(char port, uint8_t pin)
{
	if(pin > 7){
     c6e:	68 30       	cpi	r22, 0x08	; 8
     c70:	08 f0       	brcs	.+2      	; 0xc74 <toggle_pin+0x6>
     c72:	88 c0       	rjmp	.+272    	; 0xd84 <toggle_pin+0x116>
		// too high pin number
		return;
	}
	
	switch (port)
     c74:	82 34       	cpi	r24, 0x42	; 66
     c76:	51 f1       	breq	.+84     	; 0xccc <toggle_pin+0x5e>
     c78:	18 f4       	brcc	.+6      	; 0xc80 <toggle_pin+0x12>
     c7a:	81 34       	cpi	r24, 0x41	; 65
     c7c:	41 f0       	breq	.+16     	; 0xc8e <toggle_pin+0x20>
     c7e:	08 95       	ret
     c80:	83 34       	cpi	r24, 0x43	; 67
     c82:	09 f4       	brne	.+2      	; 0xc86 <toggle_pin+0x18>
     c84:	42 c0       	rjmp	.+132    	; 0xd0a <toggle_pin+0x9c>
     c86:	84 34       	cpi	r24, 0x44	; 68
     c88:	09 f4       	brne	.+2      	; 0xc8c <toggle_pin+0x1e>
     c8a:	5e c0       	rjmp	.+188    	; 0xd48 <toggle_pin+0xda>
     c8c:	08 95       	ret
	{
		unsigned char reg;
		uint8_t pin_value;
		case 'A':
			reg = PINA;
     c8e:	89 b3       	in	r24, 0x19	; 25
			// 0000x000
			// 0000000x & 00000001
			pin_value = (reg>>pin)&1;
     c90:	28 2f       	mov	r18, r24
     c92:	30 e0       	ldi	r19, 0x00	; 0
     c94:	06 2e       	mov	r0, r22
     c96:	02 c0       	rjmp	.+4      	; 0xc9c <toggle_pin+0x2e>
     c98:	35 95       	asr	r19
     c9a:	27 95       	ror	r18
     c9c:	0a 94       	dec	r0
     c9e:	e2 f7       	brpl	.-8      	; 0xc98 <toggle_pin+0x2a>
			// reg = xxxxxxxx
			// set_bit(reg, 2)
			// reg = xxxxx1xx
			if (pin_value){
     ca0:	20 ff       	sbrs	r18, 0
     ca2:	0a c0       	rjmp	.+20     	; 0xcb8 <toggle_pin+0x4a>
				clear_bit(reg, pin);
     ca4:	21 e0       	ldi	r18, 0x01	; 1
     ca6:	30 e0       	ldi	r19, 0x00	; 0
     ca8:	02 c0       	rjmp	.+4      	; 0xcae <toggle_pin+0x40>
     caa:	22 0f       	add	r18, r18
     cac:	33 1f       	adc	r19, r19
     cae:	6a 95       	dec	r22
     cb0:	e2 f7       	brpl	.-8      	; 0xcaa <toggle_pin+0x3c>
     cb2:	20 95       	com	r18
     cb4:	82 23       	and	r24, r18
     cb6:	08 c0       	rjmp	.+16     	; 0xcc8 <toggle_pin+0x5a>
			} else {
				set_bit(reg, pin);
     cb8:	21 e0       	ldi	r18, 0x01	; 1
     cba:	30 e0       	ldi	r19, 0x00	; 0
     cbc:	02 c0       	rjmp	.+4      	; 0xcc2 <toggle_pin+0x54>
     cbe:	22 0f       	add	r18, r18
     cc0:	33 1f       	adc	r19, r19
     cc2:	6a 95       	dec	r22
     cc4:	e2 f7       	brpl	.-8      	; 0xcbe <toggle_pin+0x50>
     cc6:	82 2b       	or	r24, r18
			}
			PORTA = reg;
     cc8:	8b bb       	out	0x1b, r24	; 27
			break;
     cca:	08 95       	ret
		case 'B':
			reg = PINB;
     ccc:	86 b3       	in	r24, 0x16	; 22
			pin_value = (reg>>pin)&1;
     cce:	28 2f       	mov	r18, r24
     cd0:	30 e0       	ldi	r19, 0x00	; 0
     cd2:	06 2e       	mov	r0, r22
     cd4:	02 c0       	rjmp	.+4      	; 0xcda <toggle_pin+0x6c>
     cd6:	35 95       	asr	r19
     cd8:	27 95       	ror	r18
     cda:	0a 94       	dec	r0
     cdc:	e2 f7       	brpl	.-8      	; 0xcd6 <toggle_pin+0x68>
			if (pin_value){
     cde:	20 ff       	sbrs	r18, 0
     ce0:	0a c0       	rjmp	.+20     	; 0xcf6 <toggle_pin+0x88>
				clear_bit(reg, pin);
     ce2:	21 e0       	ldi	r18, 0x01	; 1
     ce4:	30 e0       	ldi	r19, 0x00	; 0
     ce6:	02 c0       	rjmp	.+4      	; 0xcec <toggle_pin+0x7e>
     ce8:	22 0f       	add	r18, r18
     cea:	33 1f       	adc	r19, r19
     cec:	6a 95       	dec	r22
     cee:	e2 f7       	brpl	.-8      	; 0xce8 <toggle_pin+0x7a>
     cf0:	20 95       	com	r18
     cf2:	82 23       	and	r24, r18
     cf4:	08 c0       	rjmp	.+16     	; 0xd06 <toggle_pin+0x98>
			} else {
				set_bit(reg, pin);
     cf6:	21 e0       	ldi	r18, 0x01	; 1
     cf8:	30 e0       	ldi	r19, 0x00	; 0
     cfa:	02 c0       	rjmp	.+4      	; 0xd00 <toggle_pin+0x92>
     cfc:	22 0f       	add	r18, r18
     cfe:	33 1f       	adc	r19, r19
     d00:	6a 95       	dec	r22
     d02:	e2 f7       	brpl	.-8      	; 0xcfc <toggle_pin+0x8e>
     d04:	82 2b       	or	r24, r18
			}
			PORTB = reg;
     d06:	88 bb       	out	0x18, r24	; 24
			break;
     d08:	08 95       	ret
		case 'C':
			reg = PINC;
     d0a:	83 b3       	in	r24, 0x13	; 19
			pin_value = (reg>>pin)&1;
     d0c:	28 2f       	mov	r18, r24
     d0e:	30 e0       	ldi	r19, 0x00	; 0
     d10:	06 2e       	mov	r0, r22
     d12:	02 c0       	rjmp	.+4      	; 0xd18 <toggle_pin+0xaa>
     d14:	35 95       	asr	r19
     d16:	27 95       	ror	r18
     d18:	0a 94       	dec	r0
     d1a:	e2 f7       	brpl	.-8      	; 0xd14 <toggle_pin+0xa6>
			if (pin_value){
     d1c:	20 ff       	sbrs	r18, 0
     d1e:	0a c0       	rjmp	.+20     	; 0xd34 <toggle_pin+0xc6>
				clear_bit(reg, pin);
     d20:	21 e0       	ldi	r18, 0x01	; 1
     d22:	30 e0       	ldi	r19, 0x00	; 0
     d24:	02 c0       	rjmp	.+4      	; 0xd2a <toggle_pin+0xbc>
     d26:	22 0f       	add	r18, r18
     d28:	33 1f       	adc	r19, r19
     d2a:	6a 95       	dec	r22
     d2c:	e2 f7       	brpl	.-8      	; 0xd26 <toggle_pin+0xb8>
     d2e:	20 95       	com	r18
     d30:	82 23       	and	r24, r18
     d32:	08 c0       	rjmp	.+16     	; 0xd44 <toggle_pin+0xd6>
			} else {
				set_bit(reg, pin);
     d34:	21 e0       	ldi	r18, 0x01	; 1
     d36:	30 e0       	ldi	r19, 0x00	; 0
     d38:	02 c0       	rjmp	.+4      	; 0xd3e <toggle_pin+0xd0>
     d3a:	22 0f       	add	r18, r18
     d3c:	33 1f       	adc	r19, r19
     d3e:	6a 95       	dec	r22
     d40:	e2 f7       	brpl	.-8      	; 0xd3a <toggle_pin+0xcc>
     d42:	82 2b       	or	r24, r18
			}
			PORTC = reg;
     d44:	85 bb       	out	0x15, r24	; 21
			break;
     d46:	08 95       	ret
		case 'D':
			reg = PIND;
     d48:	80 b3       	in	r24, 0x10	; 16
			pin_value = (reg>>pin)&1;
     d4a:	28 2f       	mov	r18, r24
     d4c:	30 e0       	ldi	r19, 0x00	; 0
     d4e:	06 2e       	mov	r0, r22
     d50:	02 c0       	rjmp	.+4      	; 0xd56 <toggle_pin+0xe8>
     d52:	35 95       	asr	r19
     d54:	27 95       	ror	r18
     d56:	0a 94       	dec	r0
     d58:	e2 f7       	brpl	.-8      	; 0xd52 <toggle_pin+0xe4>
			if (pin_value){
     d5a:	20 ff       	sbrs	r18, 0
     d5c:	0a c0       	rjmp	.+20     	; 0xd72 <toggle_pin+0x104>
				clear_bit(reg, pin);
     d5e:	21 e0       	ldi	r18, 0x01	; 1
     d60:	30 e0       	ldi	r19, 0x00	; 0
     d62:	02 c0       	rjmp	.+4      	; 0xd68 <toggle_pin+0xfa>
     d64:	22 0f       	add	r18, r18
     d66:	33 1f       	adc	r19, r19
     d68:	6a 95       	dec	r22
     d6a:	e2 f7       	brpl	.-8      	; 0xd64 <toggle_pin+0xf6>
     d6c:	20 95       	com	r18
     d6e:	82 23       	and	r24, r18
     d70:	08 c0       	rjmp	.+16     	; 0xd82 <toggle_pin+0x114>
			} else {
				set_bit(reg, pin);
     d72:	21 e0       	ldi	r18, 0x01	; 1
     d74:	30 e0       	ldi	r19, 0x00	; 0
     d76:	02 c0       	rjmp	.+4      	; 0xd7c <toggle_pin+0x10e>
     d78:	22 0f       	add	r18, r18
     d7a:	33 1f       	adc	r19, r19
     d7c:	6a 95       	dec	r22
     d7e:	e2 f7       	brpl	.-8      	; 0xd78 <toggle_pin+0x10a>
     d80:	82 2b       	or	r24, r18
			}
			PORTD = reg;
     d82:	82 bb       	out	0x12, r24	; 18
     d84:	08 95       	ret

00000d86 <USART_Init>:
// Following functions are taken from "Atmel AVR ATmega162 datasheet"

void USART_Init(unsigned int ubrr)
{
	/* set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     d86:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
     d88:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
     d8a:	88 e1       	ldi	r24, 0x18	; 24
     d8c:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0) | (1<<USBS0) | (3<<UCSZ00);
     d8e:	8e e8       	ldi	r24, 0x8E	; 142
     d90:	80 bd       	out	0x20, r24	; 32
     d92:	08 95       	ret

00000d94 <USART_Transmit>:
}

int USART_Transmit (char data, FILE* file)
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0) ));
     d94:	5d 9b       	sbis	0x0b, 5	; 11
     d96:	fe cf       	rjmp	.-4      	; 0xd94 <USART_Transmit>
	
	/* Put data into buffer, sends the data */
	UDR0 = data;
     d98:	8c b9       	out	0x0c, r24	; 12
	return 0;
}
     d9a:	80 e0       	ldi	r24, 0x00	; 0
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	08 95       	ret

00000da0 <USART_Receive>:

int USART_Receive ( FILE* file )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) );
     da0:	5f 9b       	sbis	0x0b, 7	; 11
     da2:	fe cf       	rjmp	.-4      	; 0xda0 <USART_Receive>
	
	/* Get and return received data from buffer */
	return UDR0;
     da4:	8c b1       	in	r24, 0x0c	; 12
}
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	08 95       	ret

00000daa <malloc>:
     daa:	0f 93       	push	r16
     dac:	1f 93       	push	r17
     dae:	cf 93       	push	r28
     db0:	df 93       	push	r29
     db2:	82 30       	cpi	r24, 0x02	; 2
     db4:	91 05       	cpc	r25, r1
     db6:	10 f4       	brcc	.+4      	; 0xdbc <malloc+0x12>
     db8:	82 e0       	ldi	r24, 0x02	; 2
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	e0 91 6c 02 	lds	r30, 0x026C	; 0x80026c <__flp>
     dc0:	f0 91 6d 02 	lds	r31, 0x026D	; 0x80026d <__flp+0x1>
     dc4:	20 e0       	ldi	r18, 0x00	; 0
     dc6:	30 e0       	ldi	r19, 0x00	; 0
     dc8:	a0 e0       	ldi	r26, 0x00	; 0
     dca:	b0 e0       	ldi	r27, 0x00	; 0
     dcc:	30 97       	sbiw	r30, 0x00	; 0
     dce:	19 f1       	breq	.+70     	; 0xe16 <malloc+0x6c>
     dd0:	40 81       	ld	r20, Z
     dd2:	51 81       	ldd	r21, Z+1	; 0x01
     dd4:	02 81       	ldd	r16, Z+2	; 0x02
     dd6:	13 81       	ldd	r17, Z+3	; 0x03
     dd8:	48 17       	cp	r20, r24
     dda:	59 07       	cpc	r21, r25
     ddc:	c8 f0       	brcs	.+50     	; 0xe10 <malloc+0x66>
     dde:	84 17       	cp	r24, r20
     de0:	95 07       	cpc	r25, r21
     de2:	69 f4       	brne	.+26     	; 0xdfe <malloc+0x54>
     de4:	10 97       	sbiw	r26, 0x00	; 0
     de6:	31 f0       	breq	.+12     	; 0xdf4 <malloc+0x4a>
     de8:	12 96       	adiw	r26, 0x02	; 2
     dea:	0c 93       	st	X, r16
     dec:	12 97       	sbiw	r26, 0x02	; 2
     dee:	13 96       	adiw	r26, 0x03	; 3
     df0:	1c 93       	st	X, r17
     df2:	27 c0       	rjmp	.+78     	; 0xe42 <malloc+0x98>
     df4:	00 93 6c 02 	sts	0x026C, r16	; 0x80026c <__flp>
     df8:	10 93 6d 02 	sts	0x026D, r17	; 0x80026d <__flp+0x1>
     dfc:	22 c0       	rjmp	.+68     	; 0xe42 <malloc+0x98>
     dfe:	21 15       	cp	r18, r1
     e00:	31 05       	cpc	r19, r1
     e02:	19 f0       	breq	.+6      	; 0xe0a <malloc+0x60>
     e04:	42 17       	cp	r20, r18
     e06:	53 07       	cpc	r21, r19
     e08:	18 f4       	brcc	.+6      	; 0xe10 <malloc+0x66>
     e0a:	9a 01       	movw	r18, r20
     e0c:	bd 01       	movw	r22, r26
     e0e:	ef 01       	movw	r28, r30
     e10:	df 01       	movw	r26, r30
     e12:	f8 01       	movw	r30, r16
     e14:	db cf       	rjmp	.-74     	; 0xdcc <malloc+0x22>
     e16:	21 15       	cp	r18, r1
     e18:	31 05       	cpc	r19, r1
     e1a:	f9 f0       	breq	.+62     	; 0xe5a <malloc+0xb0>
     e1c:	28 1b       	sub	r18, r24
     e1e:	39 0b       	sbc	r19, r25
     e20:	24 30       	cpi	r18, 0x04	; 4
     e22:	31 05       	cpc	r19, r1
     e24:	80 f4       	brcc	.+32     	; 0xe46 <malloc+0x9c>
     e26:	8a 81       	ldd	r24, Y+2	; 0x02
     e28:	9b 81       	ldd	r25, Y+3	; 0x03
     e2a:	61 15       	cp	r22, r1
     e2c:	71 05       	cpc	r23, r1
     e2e:	21 f0       	breq	.+8      	; 0xe38 <malloc+0x8e>
     e30:	fb 01       	movw	r30, r22
     e32:	93 83       	std	Z+3, r25	; 0x03
     e34:	82 83       	std	Z+2, r24	; 0x02
     e36:	04 c0       	rjmp	.+8      	; 0xe40 <malloc+0x96>
     e38:	90 93 6d 02 	sts	0x026D, r25	; 0x80026d <__flp+0x1>
     e3c:	80 93 6c 02 	sts	0x026C, r24	; 0x80026c <__flp>
     e40:	fe 01       	movw	r30, r28
     e42:	32 96       	adiw	r30, 0x02	; 2
     e44:	44 c0       	rjmp	.+136    	; 0xece <malloc+0x124>
     e46:	fe 01       	movw	r30, r28
     e48:	e2 0f       	add	r30, r18
     e4a:	f3 1f       	adc	r31, r19
     e4c:	81 93       	st	Z+, r24
     e4e:	91 93       	st	Z+, r25
     e50:	22 50       	subi	r18, 0x02	; 2
     e52:	31 09       	sbc	r19, r1
     e54:	39 83       	std	Y+1, r19	; 0x01
     e56:	28 83       	st	Y, r18
     e58:	3a c0       	rjmp	.+116    	; 0xece <malloc+0x124>
     e5a:	20 91 6a 02 	lds	r18, 0x026A	; 0x80026a <__brkval>
     e5e:	30 91 6b 02 	lds	r19, 0x026B	; 0x80026b <__brkval+0x1>
     e62:	23 2b       	or	r18, r19
     e64:	41 f4       	brne	.+16     	; 0xe76 <malloc+0xcc>
     e66:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     e6a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     e6e:	30 93 6b 02 	sts	0x026B, r19	; 0x80026b <__brkval+0x1>
     e72:	20 93 6a 02 	sts	0x026A, r18	; 0x80026a <__brkval>
     e76:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     e7a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     e7e:	21 15       	cp	r18, r1
     e80:	31 05       	cpc	r19, r1
     e82:	41 f4       	brne	.+16     	; 0xe94 <malloc+0xea>
     e84:	2d b7       	in	r18, 0x3d	; 61
     e86:	3e b7       	in	r19, 0x3e	; 62
     e88:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     e8c:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     e90:	24 1b       	sub	r18, r20
     e92:	35 0b       	sbc	r19, r21
     e94:	e0 91 6a 02 	lds	r30, 0x026A	; 0x80026a <__brkval>
     e98:	f0 91 6b 02 	lds	r31, 0x026B	; 0x80026b <__brkval+0x1>
     e9c:	e2 17       	cp	r30, r18
     e9e:	f3 07       	cpc	r31, r19
     ea0:	a0 f4       	brcc	.+40     	; 0xeca <malloc+0x120>
     ea2:	2e 1b       	sub	r18, r30
     ea4:	3f 0b       	sbc	r19, r31
     ea6:	28 17       	cp	r18, r24
     ea8:	39 07       	cpc	r19, r25
     eaa:	78 f0       	brcs	.+30     	; 0xeca <malloc+0x120>
     eac:	ac 01       	movw	r20, r24
     eae:	4e 5f       	subi	r20, 0xFE	; 254
     eb0:	5f 4f       	sbci	r21, 0xFF	; 255
     eb2:	24 17       	cp	r18, r20
     eb4:	35 07       	cpc	r19, r21
     eb6:	48 f0       	brcs	.+18     	; 0xeca <malloc+0x120>
     eb8:	4e 0f       	add	r20, r30
     eba:	5f 1f       	adc	r21, r31
     ebc:	50 93 6b 02 	sts	0x026B, r21	; 0x80026b <__brkval+0x1>
     ec0:	40 93 6a 02 	sts	0x026A, r20	; 0x80026a <__brkval>
     ec4:	81 93       	st	Z+, r24
     ec6:	91 93       	st	Z+, r25
     ec8:	02 c0       	rjmp	.+4      	; 0xece <malloc+0x124>
     eca:	e0 e0       	ldi	r30, 0x00	; 0
     ecc:	f0 e0       	ldi	r31, 0x00	; 0
     ece:	cf 01       	movw	r24, r30
     ed0:	df 91       	pop	r29
     ed2:	cf 91       	pop	r28
     ed4:	1f 91       	pop	r17
     ed6:	0f 91       	pop	r16
     ed8:	08 95       	ret

00000eda <free>:
     eda:	cf 93       	push	r28
     edc:	df 93       	push	r29
     ede:	00 97       	sbiw	r24, 0x00	; 0
     ee0:	09 f4       	brne	.+2      	; 0xee4 <free+0xa>
     ee2:	81 c0       	rjmp	.+258    	; 0xfe6 <free+0x10c>
     ee4:	fc 01       	movw	r30, r24
     ee6:	32 97       	sbiw	r30, 0x02	; 2
     ee8:	13 82       	std	Z+3, r1	; 0x03
     eea:	12 82       	std	Z+2, r1	; 0x02
     eec:	a0 91 6c 02 	lds	r26, 0x026C	; 0x80026c <__flp>
     ef0:	b0 91 6d 02 	lds	r27, 0x026D	; 0x80026d <__flp+0x1>
     ef4:	10 97       	sbiw	r26, 0x00	; 0
     ef6:	81 f4       	brne	.+32     	; 0xf18 <free+0x3e>
     ef8:	20 81       	ld	r18, Z
     efa:	31 81       	ldd	r19, Z+1	; 0x01
     efc:	82 0f       	add	r24, r18
     efe:	93 1f       	adc	r25, r19
     f00:	20 91 6a 02 	lds	r18, 0x026A	; 0x80026a <__brkval>
     f04:	30 91 6b 02 	lds	r19, 0x026B	; 0x80026b <__brkval+0x1>
     f08:	28 17       	cp	r18, r24
     f0a:	39 07       	cpc	r19, r25
     f0c:	51 f5       	brne	.+84     	; 0xf62 <free+0x88>
     f0e:	f0 93 6b 02 	sts	0x026B, r31	; 0x80026b <__brkval+0x1>
     f12:	e0 93 6a 02 	sts	0x026A, r30	; 0x80026a <__brkval>
     f16:	67 c0       	rjmp	.+206    	; 0xfe6 <free+0x10c>
     f18:	ed 01       	movw	r28, r26
     f1a:	20 e0       	ldi	r18, 0x00	; 0
     f1c:	30 e0       	ldi	r19, 0x00	; 0
     f1e:	ce 17       	cp	r28, r30
     f20:	df 07       	cpc	r29, r31
     f22:	40 f4       	brcc	.+16     	; 0xf34 <free+0x5a>
     f24:	4a 81       	ldd	r20, Y+2	; 0x02
     f26:	5b 81       	ldd	r21, Y+3	; 0x03
     f28:	9e 01       	movw	r18, r28
     f2a:	41 15       	cp	r20, r1
     f2c:	51 05       	cpc	r21, r1
     f2e:	f1 f0       	breq	.+60     	; 0xf6c <free+0x92>
     f30:	ea 01       	movw	r28, r20
     f32:	f5 cf       	rjmp	.-22     	; 0xf1e <free+0x44>
     f34:	d3 83       	std	Z+3, r29	; 0x03
     f36:	c2 83       	std	Z+2, r28	; 0x02
     f38:	40 81       	ld	r20, Z
     f3a:	51 81       	ldd	r21, Z+1	; 0x01
     f3c:	84 0f       	add	r24, r20
     f3e:	95 1f       	adc	r25, r21
     f40:	c8 17       	cp	r28, r24
     f42:	d9 07       	cpc	r29, r25
     f44:	59 f4       	brne	.+22     	; 0xf5c <free+0x82>
     f46:	88 81       	ld	r24, Y
     f48:	99 81       	ldd	r25, Y+1	; 0x01
     f4a:	84 0f       	add	r24, r20
     f4c:	95 1f       	adc	r25, r21
     f4e:	02 96       	adiw	r24, 0x02	; 2
     f50:	91 83       	std	Z+1, r25	; 0x01
     f52:	80 83       	st	Z, r24
     f54:	8a 81       	ldd	r24, Y+2	; 0x02
     f56:	9b 81       	ldd	r25, Y+3	; 0x03
     f58:	93 83       	std	Z+3, r25	; 0x03
     f5a:	82 83       	std	Z+2, r24	; 0x02
     f5c:	21 15       	cp	r18, r1
     f5e:	31 05       	cpc	r19, r1
     f60:	29 f4       	brne	.+10     	; 0xf6c <free+0x92>
     f62:	f0 93 6d 02 	sts	0x026D, r31	; 0x80026d <__flp+0x1>
     f66:	e0 93 6c 02 	sts	0x026C, r30	; 0x80026c <__flp>
     f6a:	3d c0       	rjmp	.+122    	; 0xfe6 <free+0x10c>
     f6c:	e9 01       	movw	r28, r18
     f6e:	fb 83       	std	Y+3, r31	; 0x03
     f70:	ea 83       	std	Y+2, r30	; 0x02
     f72:	49 91       	ld	r20, Y+
     f74:	59 91       	ld	r21, Y+
     f76:	c4 0f       	add	r28, r20
     f78:	d5 1f       	adc	r29, r21
     f7a:	ec 17       	cp	r30, r28
     f7c:	fd 07       	cpc	r31, r29
     f7e:	61 f4       	brne	.+24     	; 0xf98 <free+0xbe>
     f80:	80 81       	ld	r24, Z
     f82:	91 81       	ldd	r25, Z+1	; 0x01
     f84:	84 0f       	add	r24, r20
     f86:	95 1f       	adc	r25, r21
     f88:	02 96       	adiw	r24, 0x02	; 2
     f8a:	e9 01       	movw	r28, r18
     f8c:	99 83       	std	Y+1, r25	; 0x01
     f8e:	88 83       	st	Y, r24
     f90:	82 81       	ldd	r24, Z+2	; 0x02
     f92:	93 81       	ldd	r25, Z+3	; 0x03
     f94:	9b 83       	std	Y+3, r25	; 0x03
     f96:	8a 83       	std	Y+2, r24	; 0x02
     f98:	e0 e0       	ldi	r30, 0x00	; 0
     f9a:	f0 e0       	ldi	r31, 0x00	; 0
     f9c:	12 96       	adiw	r26, 0x02	; 2
     f9e:	8d 91       	ld	r24, X+
     fa0:	9c 91       	ld	r25, X
     fa2:	13 97       	sbiw	r26, 0x03	; 3
     fa4:	00 97       	sbiw	r24, 0x00	; 0
     fa6:	19 f0       	breq	.+6      	; 0xfae <free+0xd4>
     fa8:	fd 01       	movw	r30, r26
     faa:	dc 01       	movw	r26, r24
     fac:	f7 cf       	rjmp	.-18     	; 0xf9c <free+0xc2>
     fae:	8d 91       	ld	r24, X+
     fb0:	9c 91       	ld	r25, X
     fb2:	11 97       	sbiw	r26, 0x01	; 1
     fb4:	9d 01       	movw	r18, r26
     fb6:	2e 5f       	subi	r18, 0xFE	; 254
     fb8:	3f 4f       	sbci	r19, 0xFF	; 255
     fba:	82 0f       	add	r24, r18
     fbc:	93 1f       	adc	r25, r19
     fbe:	20 91 6a 02 	lds	r18, 0x026A	; 0x80026a <__brkval>
     fc2:	30 91 6b 02 	lds	r19, 0x026B	; 0x80026b <__brkval+0x1>
     fc6:	28 17       	cp	r18, r24
     fc8:	39 07       	cpc	r19, r25
     fca:	69 f4       	brne	.+26     	; 0xfe6 <free+0x10c>
     fcc:	30 97       	sbiw	r30, 0x00	; 0
     fce:	29 f4       	brne	.+10     	; 0xfda <free+0x100>
     fd0:	10 92 6d 02 	sts	0x026D, r1	; 0x80026d <__flp+0x1>
     fd4:	10 92 6c 02 	sts	0x026C, r1	; 0x80026c <__flp>
     fd8:	02 c0       	rjmp	.+4      	; 0xfde <free+0x104>
     fda:	13 82       	std	Z+3, r1	; 0x03
     fdc:	12 82       	std	Z+2, r1	; 0x02
     fde:	b0 93 6b 02 	sts	0x026B, r27	; 0x80026b <__brkval+0x1>
     fe2:	a0 93 6a 02 	sts	0x026A, r26	; 0x80026a <__brkval>
     fe6:	df 91       	pop	r29
     fe8:	cf 91       	pop	r28
     fea:	08 95       	ret

00000fec <strcat>:
     fec:	fb 01       	movw	r30, r22
     fee:	dc 01       	movw	r26, r24
     ff0:	0d 90       	ld	r0, X+
     ff2:	00 20       	and	r0, r0
     ff4:	e9 f7       	brne	.-6      	; 0xff0 <strcat+0x4>
     ff6:	11 97       	sbiw	r26, 0x01	; 1
     ff8:	01 90       	ld	r0, Z+
     ffa:	0d 92       	st	X+, r0
     ffc:	00 20       	and	r0, r0
     ffe:	e1 f7       	brne	.-8      	; 0xff8 <strcat+0xc>
    1000:	08 95       	ret

00001002 <__itoa_ncheck>:
    1002:	bb 27       	eor	r27, r27
    1004:	4a 30       	cpi	r20, 0x0A	; 10
    1006:	31 f4       	brne	.+12     	; 0x1014 <__itoa_ncheck+0x12>
    1008:	99 23       	and	r25, r25
    100a:	22 f4       	brpl	.+8      	; 0x1014 <__itoa_ncheck+0x12>
    100c:	bd e2       	ldi	r27, 0x2D	; 45
    100e:	90 95       	com	r25
    1010:	81 95       	neg	r24
    1012:	9f 4f       	sbci	r25, 0xFF	; 255
    1014:	0c 94 0d 08 	jmp	0x101a	; 0x101a <__utoa_common>

00001018 <__utoa_ncheck>:
    1018:	bb 27       	eor	r27, r27

0000101a <__utoa_common>:
    101a:	fb 01       	movw	r30, r22
    101c:	55 27       	eor	r21, r21
    101e:	aa 27       	eor	r26, r26
    1020:	88 0f       	add	r24, r24
    1022:	99 1f       	adc	r25, r25
    1024:	aa 1f       	adc	r26, r26
    1026:	a4 17       	cp	r26, r20
    1028:	10 f0       	brcs	.+4      	; 0x102e <__utoa_common+0x14>
    102a:	a4 1b       	sub	r26, r20
    102c:	83 95       	inc	r24
    102e:	50 51       	subi	r21, 0x10	; 16
    1030:	b9 f7       	brne	.-18     	; 0x1020 <__utoa_common+0x6>
    1032:	a0 5d       	subi	r26, 0xD0	; 208
    1034:	aa 33       	cpi	r26, 0x3A	; 58
    1036:	08 f0       	brcs	.+2      	; 0x103a <__utoa_common+0x20>
    1038:	a9 5d       	subi	r26, 0xD9	; 217
    103a:	a1 93       	st	Z+, r26
    103c:	00 97       	sbiw	r24, 0x00	; 0
    103e:	79 f7       	brne	.-34     	; 0x101e <__utoa_common+0x4>
    1040:	b1 11       	cpse	r27, r1
    1042:	b1 93       	st	Z+, r27
    1044:	11 92       	st	Z+, r1
    1046:	cb 01       	movw	r24, r22
    1048:	0c 94 a1 0a 	jmp	0x1542	; 0x1542 <strrev>

0000104c <fdevopen>:
    104c:	0f 93       	push	r16
    104e:	1f 93       	push	r17
    1050:	cf 93       	push	r28
    1052:	df 93       	push	r29
    1054:	00 97       	sbiw	r24, 0x00	; 0
    1056:	31 f4       	brne	.+12     	; 0x1064 <fdevopen+0x18>
    1058:	61 15       	cp	r22, r1
    105a:	71 05       	cpc	r23, r1
    105c:	19 f4       	brne	.+6      	; 0x1064 <fdevopen+0x18>
    105e:	80 e0       	ldi	r24, 0x00	; 0
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	3a c0       	rjmp	.+116    	; 0x10d8 <fdevopen+0x8c>
    1064:	8b 01       	movw	r16, r22
    1066:	ec 01       	movw	r28, r24
    1068:	6e e0       	ldi	r22, 0x0E	; 14
    106a:	70 e0       	ldi	r23, 0x00	; 0
    106c:	81 e0       	ldi	r24, 0x01	; 1
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <calloc>
    1074:	fc 01       	movw	r30, r24
    1076:	89 2b       	or	r24, r25
    1078:	91 f3       	breq	.-28     	; 0x105e <fdevopen+0x12>
    107a:	80 e8       	ldi	r24, 0x80	; 128
    107c:	83 83       	std	Z+3, r24	; 0x03
    107e:	01 15       	cp	r16, r1
    1080:	11 05       	cpc	r17, r1
    1082:	71 f0       	breq	.+28     	; 0x10a0 <fdevopen+0x54>
    1084:	13 87       	std	Z+11, r17	; 0x0b
    1086:	02 87       	std	Z+10, r16	; 0x0a
    1088:	81 e8       	ldi	r24, 0x81	; 129
    108a:	83 83       	std	Z+3, r24	; 0x03
    108c:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <__iob>
    1090:	90 91 6f 02 	lds	r25, 0x026F	; 0x80026f <__iob+0x1>
    1094:	89 2b       	or	r24, r25
    1096:	21 f4       	brne	.+8      	; 0x10a0 <fdevopen+0x54>
    1098:	f0 93 6f 02 	sts	0x026F, r31	; 0x80026f <__iob+0x1>
    109c:	e0 93 6e 02 	sts	0x026E, r30	; 0x80026e <__iob>
    10a0:	20 97       	sbiw	r28, 0x00	; 0
    10a2:	c9 f0       	breq	.+50     	; 0x10d6 <fdevopen+0x8a>
    10a4:	d1 87       	std	Z+9, r29	; 0x09
    10a6:	c0 87       	std	Z+8, r28	; 0x08
    10a8:	83 81       	ldd	r24, Z+3	; 0x03
    10aa:	82 60       	ori	r24, 0x02	; 2
    10ac:	83 83       	std	Z+3, r24	; 0x03
    10ae:	80 91 70 02 	lds	r24, 0x0270	; 0x800270 <__iob+0x2>
    10b2:	90 91 71 02 	lds	r25, 0x0271	; 0x800271 <__iob+0x3>
    10b6:	89 2b       	or	r24, r25
    10b8:	71 f4       	brne	.+28     	; 0x10d6 <fdevopen+0x8a>
    10ba:	f0 93 71 02 	sts	0x0271, r31	; 0x800271 <__iob+0x3>
    10be:	e0 93 70 02 	sts	0x0270, r30	; 0x800270 <__iob+0x2>
    10c2:	80 91 72 02 	lds	r24, 0x0272	; 0x800272 <__iob+0x4>
    10c6:	90 91 73 02 	lds	r25, 0x0273	; 0x800273 <__iob+0x5>
    10ca:	89 2b       	or	r24, r25
    10cc:	21 f4       	brne	.+8      	; 0x10d6 <fdevopen+0x8a>
    10ce:	f0 93 73 02 	sts	0x0273, r31	; 0x800273 <__iob+0x5>
    10d2:	e0 93 72 02 	sts	0x0272, r30	; 0x800272 <__iob+0x4>
    10d6:	cf 01       	movw	r24, r30
    10d8:	df 91       	pop	r29
    10da:	cf 91       	pop	r28
    10dc:	1f 91       	pop	r17
    10de:	0f 91       	pop	r16
    10e0:	08 95       	ret

000010e2 <printf>:
    10e2:	a0 e0       	ldi	r26, 0x00	; 0
    10e4:	b0 e0       	ldi	r27, 0x00	; 0
    10e6:	e7 e7       	ldi	r30, 0x77	; 119
    10e8:	f8 e0       	ldi	r31, 0x08	; 8
    10ea:	0c 94 5b 0b 	jmp	0x16b6	; 0x16b6 <__prologue_saves__+0x20>
    10ee:	ae 01       	movw	r20, r28
    10f0:	4b 5f       	subi	r20, 0xFB	; 251
    10f2:	5f 4f       	sbci	r21, 0xFF	; 255
    10f4:	fa 01       	movw	r30, r20
    10f6:	61 91       	ld	r22, Z+
    10f8:	71 91       	ld	r23, Z+
    10fa:	af 01       	movw	r20, r30
    10fc:	80 91 70 02 	lds	r24, 0x0270	; 0x800270 <__iob+0x2>
    1100:	90 91 71 02 	lds	r25, 0x0271	; 0x800271 <__iob+0x3>
    1104:	0e 94 87 08 	call	0x110e	; 0x110e <vfprintf>
    1108:	e2 e0       	ldi	r30, 0x02	; 2
    110a:	0c 94 77 0b 	jmp	0x16ee	; 0x16ee <__epilogue_restores__+0x20>

0000110e <vfprintf>:
    110e:	ab e0       	ldi	r26, 0x0B	; 11
    1110:	b0 e0       	ldi	r27, 0x00	; 0
    1112:	ed e8       	ldi	r30, 0x8D	; 141
    1114:	f8 e0       	ldi	r31, 0x08	; 8
    1116:	0c 94 4b 0b 	jmp	0x1696	; 0x1696 <__prologue_saves__>
    111a:	6c 01       	movw	r12, r24
    111c:	7b 01       	movw	r14, r22
    111e:	8a 01       	movw	r16, r20
    1120:	fc 01       	movw	r30, r24
    1122:	17 82       	std	Z+7, r1	; 0x07
    1124:	16 82       	std	Z+6, r1	; 0x06
    1126:	83 81       	ldd	r24, Z+3	; 0x03
    1128:	81 ff       	sbrs	r24, 1
    112a:	cc c1       	rjmp	.+920    	; 0x14c4 <vfprintf+0x3b6>
    112c:	ce 01       	movw	r24, r28
    112e:	01 96       	adiw	r24, 0x01	; 1
    1130:	3c 01       	movw	r6, r24
    1132:	f6 01       	movw	r30, r12
    1134:	93 81       	ldd	r25, Z+3	; 0x03
    1136:	f7 01       	movw	r30, r14
    1138:	93 fd       	sbrc	r25, 3
    113a:	85 91       	lpm	r24, Z+
    113c:	93 ff       	sbrs	r25, 3
    113e:	81 91       	ld	r24, Z+
    1140:	7f 01       	movw	r14, r30
    1142:	88 23       	and	r24, r24
    1144:	09 f4       	brne	.+2      	; 0x1148 <vfprintf+0x3a>
    1146:	ba c1       	rjmp	.+884    	; 0x14bc <vfprintf+0x3ae>
    1148:	85 32       	cpi	r24, 0x25	; 37
    114a:	39 f4       	brne	.+14     	; 0x115a <vfprintf+0x4c>
    114c:	93 fd       	sbrc	r25, 3
    114e:	85 91       	lpm	r24, Z+
    1150:	93 ff       	sbrs	r25, 3
    1152:	81 91       	ld	r24, Z+
    1154:	7f 01       	movw	r14, r30
    1156:	85 32       	cpi	r24, 0x25	; 37
    1158:	29 f4       	brne	.+10     	; 0x1164 <vfprintf+0x56>
    115a:	b6 01       	movw	r22, r12
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	0e 94 b1 0a 	call	0x1562	; 0x1562 <fputc>
    1162:	e7 cf       	rjmp	.-50     	; 0x1132 <vfprintf+0x24>
    1164:	91 2c       	mov	r9, r1
    1166:	21 2c       	mov	r2, r1
    1168:	31 2c       	mov	r3, r1
    116a:	ff e1       	ldi	r31, 0x1F	; 31
    116c:	f3 15       	cp	r31, r3
    116e:	d8 f0       	brcs	.+54     	; 0x11a6 <vfprintf+0x98>
    1170:	8b 32       	cpi	r24, 0x2B	; 43
    1172:	79 f0       	breq	.+30     	; 0x1192 <vfprintf+0x84>
    1174:	38 f4       	brcc	.+14     	; 0x1184 <vfprintf+0x76>
    1176:	80 32       	cpi	r24, 0x20	; 32
    1178:	79 f0       	breq	.+30     	; 0x1198 <vfprintf+0x8a>
    117a:	83 32       	cpi	r24, 0x23	; 35
    117c:	a1 f4       	brne	.+40     	; 0x11a6 <vfprintf+0x98>
    117e:	23 2d       	mov	r18, r3
    1180:	20 61       	ori	r18, 0x10	; 16
    1182:	1d c0       	rjmp	.+58     	; 0x11be <vfprintf+0xb0>
    1184:	8d 32       	cpi	r24, 0x2D	; 45
    1186:	61 f0       	breq	.+24     	; 0x11a0 <vfprintf+0x92>
    1188:	80 33       	cpi	r24, 0x30	; 48
    118a:	69 f4       	brne	.+26     	; 0x11a6 <vfprintf+0x98>
    118c:	23 2d       	mov	r18, r3
    118e:	21 60       	ori	r18, 0x01	; 1
    1190:	16 c0       	rjmp	.+44     	; 0x11be <vfprintf+0xb0>
    1192:	83 2d       	mov	r24, r3
    1194:	82 60       	ori	r24, 0x02	; 2
    1196:	38 2e       	mov	r3, r24
    1198:	e3 2d       	mov	r30, r3
    119a:	e4 60       	ori	r30, 0x04	; 4
    119c:	3e 2e       	mov	r3, r30
    119e:	2a c0       	rjmp	.+84     	; 0x11f4 <vfprintf+0xe6>
    11a0:	f3 2d       	mov	r31, r3
    11a2:	f8 60       	ori	r31, 0x08	; 8
    11a4:	1d c0       	rjmp	.+58     	; 0x11e0 <vfprintf+0xd2>
    11a6:	37 fc       	sbrc	r3, 7
    11a8:	2d c0       	rjmp	.+90     	; 0x1204 <vfprintf+0xf6>
    11aa:	20 ed       	ldi	r18, 0xD0	; 208
    11ac:	28 0f       	add	r18, r24
    11ae:	2a 30       	cpi	r18, 0x0A	; 10
    11b0:	40 f0       	brcs	.+16     	; 0x11c2 <vfprintf+0xb4>
    11b2:	8e 32       	cpi	r24, 0x2E	; 46
    11b4:	b9 f4       	brne	.+46     	; 0x11e4 <vfprintf+0xd6>
    11b6:	36 fc       	sbrc	r3, 6
    11b8:	81 c1       	rjmp	.+770    	; 0x14bc <vfprintf+0x3ae>
    11ba:	23 2d       	mov	r18, r3
    11bc:	20 64       	ori	r18, 0x40	; 64
    11be:	32 2e       	mov	r3, r18
    11c0:	19 c0       	rjmp	.+50     	; 0x11f4 <vfprintf+0xe6>
    11c2:	36 fe       	sbrs	r3, 6
    11c4:	06 c0       	rjmp	.+12     	; 0x11d2 <vfprintf+0xc4>
    11c6:	8a e0       	ldi	r24, 0x0A	; 10
    11c8:	98 9e       	mul	r9, r24
    11ca:	20 0d       	add	r18, r0
    11cc:	11 24       	eor	r1, r1
    11ce:	92 2e       	mov	r9, r18
    11d0:	11 c0       	rjmp	.+34     	; 0x11f4 <vfprintf+0xe6>
    11d2:	ea e0       	ldi	r30, 0x0A	; 10
    11d4:	2e 9e       	mul	r2, r30
    11d6:	20 0d       	add	r18, r0
    11d8:	11 24       	eor	r1, r1
    11da:	22 2e       	mov	r2, r18
    11dc:	f3 2d       	mov	r31, r3
    11de:	f0 62       	ori	r31, 0x20	; 32
    11e0:	3f 2e       	mov	r3, r31
    11e2:	08 c0       	rjmp	.+16     	; 0x11f4 <vfprintf+0xe6>
    11e4:	8c 36       	cpi	r24, 0x6C	; 108
    11e6:	21 f4       	brne	.+8      	; 0x11f0 <vfprintf+0xe2>
    11e8:	83 2d       	mov	r24, r3
    11ea:	80 68       	ori	r24, 0x80	; 128
    11ec:	38 2e       	mov	r3, r24
    11ee:	02 c0       	rjmp	.+4      	; 0x11f4 <vfprintf+0xe6>
    11f0:	88 36       	cpi	r24, 0x68	; 104
    11f2:	41 f4       	brne	.+16     	; 0x1204 <vfprintf+0xf6>
    11f4:	f7 01       	movw	r30, r14
    11f6:	93 fd       	sbrc	r25, 3
    11f8:	85 91       	lpm	r24, Z+
    11fa:	93 ff       	sbrs	r25, 3
    11fc:	81 91       	ld	r24, Z+
    11fe:	7f 01       	movw	r14, r30
    1200:	81 11       	cpse	r24, r1
    1202:	b3 cf       	rjmp	.-154    	; 0x116a <vfprintf+0x5c>
    1204:	98 2f       	mov	r25, r24
    1206:	9f 7d       	andi	r25, 0xDF	; 223
    1208:	95 54       	subi	r25, 0x45	; 69
    120a:	93 30       	cpi	r25, 0x03	; 3
    120c:	28 f4       	brcc	.+10     	; 0x1218 <vfprintf+0x10a>
    120e:	0c 5f       	subi	r16, 0xFC	; 252
    1210:	1f 4f       	sbci	r17, 0xFF	; 255
    1212:	9f e3       	ldi	r25, 0x3F	; 63
    1214:	99 83       	std	Y+1, r25	; 0x01
    1216:	0d c0       	rjmp	.+26     	; 0x1232 <vfprintf+0x124>
    1218:	83 36       	cpi	r24, 0x63	; 99
    121a:	31 f0       	breq	.+12     	; 0x1228 <vfprintf+0x11a>
    121c:	83 37       	cpi	r24, 0x73	; 115
    121e:	71 f0       	breq	.+28     	; 0x123c <vfprintf+0x12e>
    1220:	83 35       	cpi	r24, 0x53	; 83
    1222:	09 f0       	breq	.+2      	; 0x1226 <vfprintf+0x118>
    1224:	59 c0       	rjmp	.+178    	; 0x12d8 <vfprintf+0x1ca>
    1226:	21 c0       	rjmp	.+66     	; 0x126a <vfprintf+0x15c>
    1228:	f8 01       	movw	r30, r16
    122a:	80 81       	ld	r24, Z
    122c:	89 83       	std	Y+1, r24	; 0x01
    122e:	0e 5f       	subi	r16, 0xFE	; 254
    1230:	1f 4f       	sbci	r17, 0xFF	; 255
    1232:	88 24       	eor	r8, r8
    1234:	83 94       	inc	r8
    1236:	91 2c       	mov	r9, r1
    1238:	53 01       	movw	r10, r6
    123a:	13 c0       	rjmp	.+38     	; 0x1262 <vfprintf+0x154>
    123c:	28 01       	movw	r4, r16
    123e:	f2 e0       	ldi	r31, 0x02	; 2
    1240:	4f 0e       	add	r4, r31
    1242:	51 1c       	adc	r5, r1
    1244:	f8 01       	movw	r30, r16
    1246:	a0 80       	ld	r10, Z
    1248:	b1 80       	ldd	r11, Z+1	; 0x01
    124a:	36 fe       	sbrs	r3, 6
    124c:	03 c0       	rjmp	.+6      	; 0x1254 <vfprintf+0x146>
    124e:	69 2d       	mov	r22, r9
    1250:	70 e0       	ldi	r23, 0x00	; 0
    1252:	02 c0       	rjmp	.+4      	; 0x1258 <vfprintf+0x14a>
    1254:	6f ef       	ldi	r22, 0xFF	; 255
    1256:	7f ef       	ldi	r23, 0xFF	; 255
    1258:	c5 01       	movw	r24, r10
    125a:	0e 94 96 0a 	call	0x152c	; 0x152c <strnlen>
    125e:	4c 01       	movw	r8, r24
    1260:	82 01       	movw	r16, r4
    1262:	f3 2d       	mov	r31, r3
    1264:	ff 77       	andi	r31, 0x7F	; 127
    1266:	3f 2e       	mov	r3, r31
    1268:	16 c0       	rjmp	.+44     	; 0x1296 <vfprintf+0x188>
    126a:	28 01       	movw	r4, r16
    126c:	22 e0       	ldi	r18, 0x02	; 2
    126e:	42 0e       	add	r4, r18
    1270:	51 1c       	adc	r5, r1
    1272:	f8 01       	movw	r30, r16
    1274:	a0 80       	ld	r10, Z
    1276:	b1 80       	ldd	r11, Z+1	; 0x01
    1278:	36 fe       	sbrs	r3, 6
    127a:	03 c0       	rjmp	.+6      	; 0x1282 <vfprintf+0x174>
    127c:	69 2d       	mov	r22, r9
    127e:	70 e0       	ldi	r23, 0x00	; 0
    1280:	02 c0       	rjmp	.+4      	; 0x1286 <vfprintf+0x178>
    1282:	6f ef       	ldi	r22, 0xFF	; 255
    1284:	7f ef       	ldi	r23, 0xFF	; 255
    1286:	c5 01       	movw	r24, r10
    1288:	0e 94 84 0a 	call	0x1508	; 0x1508 <strnlen_P>
    128c:	4c 01       	movw	r8, r24
    128e:	f3 2d       	mov	r31, r3
    1290:	f0 68       	ori	r31, 0x80	; 128
    1292:	3f 2e       	mov	r3, r31
    1294:	82 01       	movw	r16, r4
    1296:	33 fc       	sbrc	r3, 3
    1298:	1b c0       	rjmp	.+54     	; 0x12d0 <vfprintf+0x1c2>
    129a:	82 2d       	mov	r24, r2
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	88 16       	cp	r8, r24
    12a0:	99 06       	cpc	r9, r25
    12a2:	b0 f4       	brcc	.+44     	; 0x12d0 <vfprintf+0x1c2>
    12a4:	b6 01       	movw	r22, r12
    12a6:	80 e2       	ldi	r24, 0x20	; 32
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	0e 94 b1 0a 	call	0x1562	; 0x1562 <fputc>
    12ae:	2a 94       	dec	r2
    12b0:	f4 cf       	rjmp	.-24     	; 0x129a <vfprintf+0x18c>
    12b2:	f5 01       	movw	r30, r10
    12b4:	37 fc       	sbrc	r3, 7
    12b6:	85 91       	lpm	r24, Z+
    12b8:	37 fe       	sbrs	r3, 7
    12ba:	81 91       	ld	r24, Z+
    12bc:	5f 01       	movw	r10, r30
    12be:	b6 01       	movw	r22, r12
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	0e 94 b1 0a 	call	0x1562	; 0x1562 <fputc>
    12c6:	21 10       	cpse	r2, r1
    12c8:	2a 94       	dec	r2
    12ca:	21 e0       	ldi	r18, 0x01	; 1
    12cc:	82 1a       	sub	r8, r18
    12ce:	91 08       	sbc	r9, r1
    12d0:	81 14       	cp	r8, r1
    12d2:	91 04       	cpc	r9, r1
    12d4:	71 f7       	brne	.-36     	; 0x12b2 <vfprintf+0x1a4>
    12d6:	e8 c0       	rjmp	.+464    	; 0x14a8 <vfprintf+0x39a>
    12d8:	84 36       	cpi	r24, 0x64	; 100
    12da:	11 f0       	breq	.+4      	; 0x12e0 <vfprintf+0x1d2>
    12dc:	89 36       	cpi	r24, 0x69	; 105
    12de:	41 f5       	brne	.+80     	; 0x1330 <vfprintf+0x222>
    12e0:	f8 01       	movw	r30, r16
    12e2:	37 fe       	sbrs	r3, 7
    12e4:	07 c0       	rjmp	.+14     	; 0x12f4 <vfprintf+0x1e6>
    12e6:	60 81       	ld	r22, Z
    12e8:	71 81       	ldd	r23, Z+1	; 0x01
    12ea:	82 81       	ldd	r24, Z+2	; 0x02
    12ec:	93 81       	ldd	r25, Z+3	; 0x03
    12ee:	0c 5f       	subi	r16, 0xFC	; 252
    12f0:	1f 4f       	sbci	r17, 0xFF	; 255
    12f2:	08 c0       	rjmp	.+16     	; 0x1304 <vfprintf+0x1f6>
    12f4:	60 81       	ld	r22, Z
    12f6:	71 81       	ldd	r23, Z+1	; 0x01
    12f8:	07 2e       	mov	r0, r23
    12fa:	00 0c       	add	r0, r0
    12fc:	88 0b       	sbc	r24, r24
    12fe:	99 0b       	sbc	r25, r25
    1300:	0e 5f       	subi	r16, 0xFE	; 254
    1302:	1f 4f       	sbci	r17, 0xFF	; 255
    1304:	f3 2d       	mov	r31, r3
    1306:	ff 76       	andi	r31, 0x6F	; 111
    1308:	3f 2e       	mov	r3, r31
    130a:	97 ff       	sbrs	r25, 7
    130c:	09 c0       	rjmp	.+18     	; 0x1320 <vfprintf+0x212>
    130e:	90 95       	com	r25
    1310:	80 95       	com	r24
    1312:	70 95       	com	r23
    1314:	61 95       	neg	r22
    1316:	7f 4f       	sbci	r23, 0xFF	; 255
    1318:	8f 4f       	sbci	r24, 0xFF	; 255
    131a:	9f 4f       	sbci	r25, 0xFF	; 255
    131c:	f0 68       	ori	r31, 0x80	; 128
    131e:	3f 2e       	mov	r3, r31
    1320:	2a e0       	ldi	r18, 0x0A	; 10
    1322:	30 e0       	ldi	r19, 0x00	; 0
    1324:	a3 01       	movw	r20, r6
    1326:	0e 94 ed 0a 	call	0x15da	; 0x15da <__ultoa_invert>
    132a:	88 2e       	mov	r8, r24
    132c:	86 18       	sub	r8, r6
    132e:	45 c0       	rjmp	.+138    	; 0x13ba <vfprintf+0x2ac>
    1330:	85 37       	cpi	r24, 0x75	; 117
    1332:	31 f4       	brne	.+12     	; 0x1340 <vfprintf+0x232>
    1334:	23 2d       	mov	r18, r3
    1336:	2f 7e       	andi	r18, 0xEF	; 239
    1338:	b2 2e       	mov	r11, r18
    133a:	2a e0       	ldi	r18, 0x0A	; 10
    133c:	30 e0       	ldi	r19, 0x00	; 0
    133e:	25 c0       	rjmp	.+74     	; 0x138a <vfprintf+0x27c>
    1340:	93 2d       	mov	r25, r3
    1342:	99 7f       	andi	r25, 0xF9	; 249
    1344:	b9 2e       	mov	r11, r25
    1346:	8f 36       	cpi	r24, 0x6F	; 111
    1348:	c1 f0       	breq	.+48     	; 0x137a <vfprintf+0x26c>
    134a:	18 f4       	brcc	.+6      	; 0x1352 <vfprintf+0x244>
    134c:	88 35       	cpi	r24, 0x58	; 88
    134e:	79 f0       	breq	.+30     	; 0x136e <vfprintf+0x260>
    1350:	b5 c0       	rjmp	.+362    	; 0x14bc <vfprintf+0x3ae>
    1352:	80 37       	cpi	r24, 0x70	; 112
    1354:	19 f0       	breq	.+6      	; 0x135c <vfprintf+0x24e>
    1356:	88 37       	cpi	r24, 0x78	; 120
    1358:	21 f0       	breq	.+8      	; 0x1362 <vfprintf+0x254>
    135a:	b0 c0       	rjmp	.+352    	; 0x14bc <vfprintf+0x3ae>
    135c:	e9 2f       	mov	r30, r25
    135e:	e0 61       	ori	r30, 0x10	; 16
    1360:	be 2e       	mov	r11, r30
    1362:	b4 fe       	sbrs	r11, 4
    1364:	0d c0       	rjmp	.+26     	; 0x1380 <vfprintf+0x272>
    1366:	fb 2d       	mov	r31, r11
    1368:	f4 60       	ori	r31, 0x04	; 4
    136a:	bf 2e       	mov	r11, r31
    136c:	09 c0       	rjmp	.+18     	; 0x1380 <vfprintf+0x272>
    136e:	34 fe       	sbrs	r3, 4
    1370:	0a c0       	rjmp	.+20     	; 0x1386 <vfprintf+0x278>
    1372:	29 2f       	mov	r18, r25
    1374:	26 60       	ori	r18, 0x06	; 6
    1376:	b2 2e       	mov	r11, r18
    1378:	06 c0       	rjmp	.+12     	; 0x1386 <vfprintf+0x278>
    137a:	28 e0       	ldi	r18, 0x08	; 8
    137c:	30 e0       	ldi	r19, 0x00	; 0
    137e:	05 c0       	rjmp	.+10     	; 0x138a <vfprintf+0x27c>
    1380:	20 e1       	ldi	r18, 0x10	; 16
    1382:	30 e0       	ldi	r19, 0x00	; 0
    1384:	02 c0       	rjmp	.+4      	; 0x138a <vfprintf+0x27c>
    1386:	20 e1       	ldi	r18, 0x10	; 16
    1388:	32 e0       	ldi	r19, 0x02	; 2
    138a:	f8 01       	movw	r30, r16
    138c:	b7 fe       	sbrs	r11, 7
    138e:	07 c0       	rjmp	.+14     	; 0x139e <vfprintf+0x290>
    1390:	60 81       	ld	r22, Z
    1392:	71 81       	ldd	r23, Z+1	; 0x01
    1394:	82 81       	ldd	r24, Z+2	; 0x02
    1396:	93 81       	ldd	r25, Z+3	; 0x03
    1398:	0c 5f       	subi	r16, 0xFC	; 252
    139a:	1f 4f       	sbci	r17, 0xFF	; 255
    139c:	06 c0       	rjmp	.+12     	; 0x13aa <vfprintf+0x29c>
    139e:	60 81       	ld	r22, Z
    13a0:	71 81       	ldd	r23, Z+1	; 0x01
    13a2:	80 e0       	ldi	r24, 0x00	; 0
    13a4:	90 e0       	ldi	r25, 0x00	; 0
    13a6:	0e 5f       	subi	r16, 0xFE	; 254
    13a8:	1f 4f       	sbci	r17, 0xFF	; 255
    13aa:	a3 01       	movw	r20, r6
    13ac:	0e 94 ed 0a 	call	0x15da	; 0x15da <__ultoa_invert>
    13b0:	88 2e       	mov	r8, r24
    13b2:	86 18       	sub	r8, r6
    13b4:	fb 2d       	mov	r31, r11
    13b6:	ff 77       	andi	r31, 0x7F	; 127
    13b8:	3f 2e       	mov	r3, r31
    13ba:	36 fe       	sbrs	r3, 6
    13bc:	0d c0       	rjmp	.+26     	; 0x13d8 <vfprintf+0x2ca>
    13be:	23 2d       	mov	r18, r3
    13c0:	2e 7f       	andi	r18, 0xFE	; 254
    13c2:	a2 2e       	mov	r10, r18
    13c4:	89 14       	cp	r8, r9
    13c6:	58 f4       	brcc	.+22     	; 0x13de <vfprintf+0x2d0>
    13c8:	34 fe       	sbrs	r3, 4
    13ca:	0b c0       	rjmp	.+22     	; 0x13e2 <vfprintf+0x2d4>
    13cc:	32 fc       	sbrc	r3, 2
    13ce:	09 c0       	rjmp	.+18     	; 0x13e2 <vfprintf+0x2d4>
    13d0:	83 2d       	mov	r24, r3
    13d2:	8e 7e       	andi	r24, 0xEE	; 238
    13d4:	a8 2e       	mov	r10, r24
    13d6:	05 c0       	rjmp	.+10     	; 0x13e2 <vfprintf+0x2d4>
    13d8:	b8 2c       	mov	r11, r8
    13da:	a3 2c       	mov	r10, r3
    13dc:	03 c0       	rjmp	.+6      	; 0x13e4 <vfprintf+0x2d6>
    13de:	b8 2c       	mov	r11, r8
    13e0:	01 c0       	rjmp	.+2      	; 0x13e4 <vfprintf+0x2d6>
    13e2:	b9 2c       	mov	r11, r9
    13e4:	a4 fe       	sbrs	r10, 4
    13e6:	0f c0       	rjmp	.+30     	; 0x1406 <vfprintf+0x2f8>
    13e8:	fe 01       	movw	r30, r28
    13ea:	e8 0d       	add	r30, r8
    13ec:	f1 1d       	adc	r31, r1
    13ee:	80 81       	ld	r24, Z
    13f0:	80 33       	cpi	r24, 0x30	; 48
    13f2:	21 f4       	brne	.+8      	; 0x13fc <vfprintf+0x2ee>
    13f4:	9a 2d       	mov	r25, r10
    13f6:	99 7e       	andi	r25, 0xE9	; 233
    13f8:	a9 2e       	mov	r10, r25
    13fa:	09 c0       	rjmp	.+18     	; 0x140e <vfprintf+0x300>
    13fc:	a2 fe       	sbrs	r10, 2
    13fe:	06 c0       	rjmp	.+12     	; 0x140c <vfprintf+0x2fe>
    1400:	b3 94       	inc	r11
    1402:	b3 94       	inc	r11
    1404:	04 c0       	rjmp	.+8      	; 0x140e <vfprintf+0x300>
    1406:	8a 2d       	mov	r24, r10
    1408:	86 78       	andi	r24, 0x86	; 134
    140a:	09 f0       	breq	.+2      	; 0x140e <vfprintf+0x300>
    140c:	b3 94       	inc	r11
    140e:	a3 fc       	sbrc	r10, 3
    1410:	11 c0       	rjmp	.+34     	; 0x1434 <vfprintf+0x326>
    1412:	a0 fe       	sbrs	r10, 0
    1414:	06 c0       	rjmp	.+12     	; 0x1422 <vfprintf+0x314>
    1416:	b2 14       	cp	r11, r2
    1418:	88 f4       	brcc	.+34     	; 0x143c <vfprintf+0x32e>
    141a:	28 0c       	add	r2, r8
    141c:	92 2c       	mov	r9, r2
    141e:	9b 18       	sub	r9, r11
    1420:	0e c0       	rjmp	.+28     	; 0x143e <vfprintf+0x330>
    1422:	b2 14       	cp	r11, r2
    1424:	60 f4       	brcc	.+24     	; 0x143e <vfprintf+0x330>
    1426:	b6 01       	movw	r22, r12
    1428:	80 e2       	ldi	r24, 0x20	; 32
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	0e 94 b1 0a 	call	0x1562	; 0x1562 <fputc>
    1430:	b3 94       	inc	r11
    1432:	f7 cf       	rjmp	.-18     	; 0x1422 <vfprintf+0x314>
    1434:	b2 14       	cp	r11, r2
    1436:	18 f4       	brcc	.+6      	; 0x143e <vfprintf+0x330>
    1438:	2b 18       	sub	r2, r11
    143a:	02 c0       	rjmp	.+4      	; 0x1440 <vfprintf+0x332>
    143c:	98 2c       	mov	r9, r8
    143e:	21 2c       	mov	r2, r1
    1440:	a4 fe       	sbrs	r10, 4
    1442:	10 c0       	rjmp	.+32     	; 0x1464 <vfprintf+0x356>
    1444:	b6 01       	movw	r22, r12
    1446:	80 e3       	ldi	r24, 0x30	; 48
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	0e 94 b1 0a 	call	0x1562	; 0x1562 <fputc>
    144e:	a2 fe       	sbrs	r10, 2
    1450:	17 c0       	rjmp	.+46     	; 0x1480 <vfprintf+0x372>
    1452:	a1 fc       	sbrc	r10, 1
    1454:	03 c0       	rjmp	.+6      	; 0x145c <vfprintf+0x34e>
    1456:	88 e7       	ldi	r24, 0x78	; 120
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	02 c0       	rjmp	.+4      	; 0x1460 <vfprintf+0x352>
    145c:	88 e5       	ldi	r24, 0x58	; 88
    145e:	90 e0       	ldi	r25, 0x00	; 0
    1460:	b6 01       	movw	r22, r12
    1462:	0c c0       	rjmp	.+24     	; 0x147c <vfprintf+0x36e>
    1464:	8a 2d       	mov	r24, r10
    1466:	86 78       	andi	r24, 0x86	; 134
    1468:	59 f0       	breq	.+22     	; 0x1480 <vfprintf+0x372>
    146a:	a1 fe       	sbrs	r10, 1
    146c:	02 c0       	rjmp	.+4      	; 0x1472 <vfprintf+0x364>
    146e:	8b e2       	ldi	r24, 0x2B	; 43
    1470:	01 c0       	rjmp	.+2      	; 0x1474 <vfprintf+0x366>
    1472:	80 e2       	ldi	r24, 0x20	; 32
    1474:	a7 fc       	sbrc	r10, 7
    1476:	8d e2       	ldi	r24, 0x2D	; 45
    1478:	b6 01       	movw	r22, r12
    147a:	90 e0       	ldi	r25, 0x00	; 0
    147c:	0e 94 b1 0a 	call	0x1562	; 0x1562 <fputc>
    1480:	89 14       	cp	r8, r9
    1482:	38 f4       	brcc	.+14     	; 0x1492 <vfprintf+0x384>
    1484:	b6 01       	movw	r22, r12
    1486:	80 e3       	ldi	r24, 0x30	; 48
    1488:	90 e0       	ldi	r25, 0x00	; 0
    148a:	0e 94 b1 0a 	call	0x1562	; 0x1562 <fputc>
    148e:	9a 94       	dec	r9
    1490:	f7 cf       	rjmp	.-18     	; 0x1480 <vfprintf+0x372>
    1492:	8a 94       	dec	r8
    1494:	f3 01       	movw	r30, r6
    1496:	e8 0d       	add	r30, r8
    1498:	f1 1d       	adc	r31, r1
    149a:	80 81       	ld	r24, Z
    149c:	b6 01       	movw	r22, r12
    149e:	90 e0       	ldi	r25, 0x00	; 0
    14a0:	0e 94 b1 0a 	call	0x1562	; 0x1562 <fputc>
    14a4:	81 10       	cpse	r8, r1
    14a6:	f5 cf       	rjmp	.-22     	; 0x1492 <vfprintf+0x384>
    14a8:	22 20       	and	r2, r2
    14aa:	09 f4       	brne	.+2      	; 0x14ae <vfprintf+0x3a0>
    14ac:	42 ce       	rjmp	.-892    	; 0x1132 <vfprintf+0x24>
    14ae:	b6 01       	movw	r22, r12
    14b0:	80 e2       	ldi	r24, 0x20	; 32
    14b2:	90 e0       	ldi	r25, 0x00	; 0
    14b4:	0e 94 b1 0a 	call	0x1562	; 0x1562 <fputc>
    14b8:	2a 94       	dec	r2
    14ba:	f6 cf       	rjmp	.-20     	; 0x14a8 <vfprintf+0x39a>
    14bc:	f6 01       	movw	r30, r12
    14be:	86 81       	ldd	r24, Z+6	; 0x06
    14c0:	97 81       	ldd	r25, Z+7	; 0x07
    14c2:	02 c0       	rjmp	.+4      	; 0x14c8 <vfprintf+0x3ba>
    14c4:	8f ef       	ldi	r24, 0xFF	; 255
    14c6:	9f ef       	ldi	r25, 0xFF	; 255
    14c8:	2b 96       	adiw	r28, 0x0b	; 11
    14ca:	e2 e1       	ldi	r30, 0x12	; 18
    14cc:	0c 94 67 0b 	jmp	0x16ce	; 0x16ce <__epilogue_restores__>

000014d0 <calloc>:
    14d0:	0f 93       	push	r16
    14d2:	1f 93       	push	r17
    14d4:	cf 93       	push	r28
    14d6:	df 93       	push	r29
    14d8:	86 9f       	mul	r24, r22
    14da:	80 01       	movw	r16, r0
    14dc:	87 9f       	mul	r24, r23
    14de:	10 0d       	add	r17, r0
    14e0:	96 9f       	mul	r25, r22
    14e2:	10 0d       	add	r17, r0
    14e4:	11 24       	eor	r1, r1
    14e6:	c8 01       	movw	r24, r16
    14e8:	0e 94 d5 06 	call	0xdaa	; 0xdaa <malloc>
    14ec:	ec 01       	movw	r28, r24
    14ee:	00 97       	sbiw	r24, 0x00	; 0
    14f0:	29 f0       	breq	.+10     	; 0x14fc <calloc+0x2c>
    14f2:	a8 01       	movw	r20, r16
    14f4:	60 e0       	ldi	r22, 0x00	; 0
    14f6:	70 e0       	ldi	r23, 0x00	; 0
    14f8:	0e 94 8f 0a 	call	0x151e	; 0x151e <memset>
    14fc:	ce 01       	movw	r24, r28
    14fe:	df 91       	pop	r29
    1500:	cf 91       	pop	r28
    1502:	1f 91       	pop	r17
    1504:	0f 91       	pop	r16
    1506:	08 95       	ret

00001508 <strnlen_P>:
    1508:	fc 01       	movw	r30, r24
    150a:	05 90       	lpm	r0, Z+
    150c:	61 50       	subi	r22, 0x01	; 1
    150e:	70 40       	sbci	r23, 0x00	; 0
    1510:	01 10       	cpse	r0, r1
    1512:	d8 f7       	brcc	.-10     	; 0x150a <strnlen_P+0x2>
    1514:	80 95       	com	r24
    1516:	90 95       	com	r25
    1518:	8e 0f       	add	r24, r30
    151a:	9f 1f       	adc	r25, r31
    151c:	08 95       	ret

0000151e <memset>:
    151e:	dc 01       	movw	r26, r24
    1520:	01 c0       	rjmp	.+2      	; 0x1524 <memset+0x6>
    1522:	6d 93       	st	X+, r22
    1524:	41 50       	subi	r20, 0x01	; 1
    1526:	50 40       	sbci	r21, 0x00	; 0
    1528:	e0 f7       	brcc	.-8      	; 0x1522 <memset+0x4>
    152a:	08 95       	ret

0000152c <strnlen>:
    152c:	fc 01       	movw	r30, r24
    152e:	61 50       	subi	r22, 0x01	; 1
    1530:	70 40       	sbci	r23, 0x00	; 0
    1532:	01 90       	ld	r0, Z+
    1534:	01 10       	cpse	r0, r1
    1536:	d8 f7       	brcc	.-10     	; 0x152e <strnlen+0x2>
    1538:	80 95       	com	r24
    153a:	90 95       	com	r25
    153c:	8e 0f       	add	r24, r30
    153e:	9f 1f       	adc	r25, r31
    1540:	08 95       	ret

00001542 <strrev>:
    1542:	dc 01       	movw	r26, r24
    1544:	fc 01       	movw	r30, r24
    1546:	67 2f       	mov	r22, r23
    1548:	71 91       	ld	r23, Z+
    154a:	77 23       	and	r23, r23
    154c:	e1 f7       	brne	.-8      	; 0x1546 <strrev+0x4>
    154e:	32 97       	sbiw	r30, 0x02	; 2
    1550:	04 c0       	rjmp	.+8      	; 0x155a <strrev+0x18>
    1552:	7c 91       	ld	r23, X
    1554:	6d 93       	st	X+, r22
    1556:	70 83       	st	Z, r23
    1558:	62 91       	ld	r22, -Z
    155a:	ae 17       	cp	r26, r30
    155c:	bf 07       	cpc	r27, r31
    155e:	c8 f3       	brcs	.-14     	; 0x1552 <strrev+0x10>
    1560:	08 95       	ret

00001562 <fputc>:
    1562:	0f 93       	push	r16
    1564:	1f 93       	push	r17
    1566:	cf 93       	push	r28
    1568:	df 93       	push	r29
    156a:	fb 01       	movw	r30, r22
    156c:	23 81       	ldd	r18, Z+3	; 0x03
    156e:	21 fd       	sbrc	r18, 1
    1570:	03 c0       	rjmp	.+6      	; 0x1578 <fputc+0x16>
    1572:	8f ef       	ldi	r24, 0xFF	; 255
    1574:	9f ef       	ldi	r25, 0xFF	; 255
    1576:	2c c0       	rjmp	.+88     	; 0x15d0 <fputc+0x6e>
    1578:	22 ff       	sbrs	r18, 2
    157a:	16 c0       	rjmp	.+44     	; 0x15a8 <fputc+0x46>
    157c:	46 81       	ldd	r20, Z+6	; 0x06
    157e:	57 81       	ldd	r21, Z+7	; 0x07
    1580:	24 81       	ldd	r18, Z+4	; 0x04
    1582:	35 81       	ldd	r19, Z+5	; 0x05
    1584:	42 17       	cp	r20, r18
    1586:	53 07       	cpc	r21, r19
    1588:	44 f4       	brge	.+16     	; 0x159a <fputc+0x38>
    158a:	a0 81       	ld	r26, Z
    158c:	b1 81       	ldd	r27, Z+1	; 0x01
    158e:	9d 01       	movw	r18, r26
    1590:	2f 5f       	subi	r18, 0xFF	; 255
    1592:	3f 4f       	sbci	r19, 0xFF	; 255
    1594:	31 83       	std	Z+1, r19	; 0x01
    1596:	20 83       	st	Z, r18
    1598:	8c 93       	st	X, r24
    159a:	26 81       	ldd	r18, Z+6	; 0x06
    159c:	37 81       	ldd	r19, Z+7	; 0x07
    159e:	2f 5f       	subi	r18, 0xFF	; 255
    15a0:	3f 4f       	sbci	r19, 0xFF	; 255
    15a2:	37 83       	std	Z+7, r19	; 0x07
    15a4:	26 83       	std	Z+6, r18	; 0x06
    15a6:	14 c0       	rjmp	.+40     	; 0x15d0 <fputc+0x6e>
    15a8:	8b 01       	movw	r16, r22
    15aa:	ec 01       	movw	r28, r24
    15ac:	fb 01       	movw	r30, r22
    15ae:	00 84       	ldd	r0, Z+8	; 0x08
    15b0:	f1 85       	ldd	r31, Z+9	; 0x09
    15b2:	e0 2d       	mov	r30, r0
    15b4:	09 95       	icall
    15b6:	89 2b       	or	r24, r25
    15b8:	e1 f6       	brne	.-72     	; 0x1572 <fputc+0x10>
    15ba:	d8 01       	movw	r26, r16
    15bc:	16 96       	adiw	r26, 0x06	; 6
    15be:	8d 91       	ld	r24, X+
    15c0:	9c 91       	ld	r25, X
    15c2:	17 97       	sbiw	r26, 0x07	; 7
    15c4:	01 96       	adiw	r24, 0x01	; 1
    15c6:	17 96       	adiw	r26, 0x07	; 7
    15c8:	9c 93       	st	X, r25
    15ca:	8e 93       	st	-X, r24
    15cc:	16 97       	sbiw	r26, 0x06	; 6
    15ce:	ce 01       	movw	r24, r28
    15d0:	df 91       	pop	r29
    15d2:	cf 91       	pop	r28
    15d4:	1f 91       	pop	r17
    15d6:	0f 91       	pop	r16
    15d8:	08 95       	ret

000015da <__ultoa_invert>:
    15da:	fa 01       	movw	r30, r20
    15dc:	aa 27       	eor	r26, r26
    15de:	28 30       	cpi	r18, 0x08	; 8
    15e0:	51 f1       	breq	.+84     	; 0x1636 <__ultoa_invert+0x5c>
    15e2:	20 31       	cpi	r18, 0x10	; 16
    15e4:	81 f1       	breq	.+96     	; 0x1646 <__ultoa_invert+0x6c>
    15e6:	e8 94       	clt
    15e8:	6f 93       	push	r22
    15ea:	6e 7f       	andi	r22, 0xFE	; 254
    15ec:	6e 5f       	subi	r22, 0xFE	; 254
    15ee:	7f 4f       	sbci	r23, 0xFF	; 255
    15f0:	8f 4f       	sbci	r24, 0xFF	; 255
    15f2:	9f 4f       	sbci	r25, 0xFF	; 255
    15f4:	af 4f       	sbci	r26, 0xFF	; 255
    15f6:	b1 e0       	ldi	r27, 0x01	; 1
    15f8:	3e d0       	rcall	.+124    	; 0x1676 <__ultoa_invert+0x9c>
    15fa:	b4 e0       	ldi	r27, 0x04	; 4
    15fc:	3c d0       	rcall	.+120    	; 0x1676 <__ultoa_invert+0x9c>
    15fe:	67 0f       	add	r22, r23
    1600:	78 1f       	adc	r23, r24
    1602:	89 1f       	adc	r24, r25
    1604:	9a 1f       	adc	r25, r26
    1606:	a1 1d       	adc	r26, r1
    1608:	68 0f       	add	r22, r24
    160a:	79 1f       	adc	r23, r25
    160c:	8a 1f       	adc	r24, r26
    160e:	91 1d       	adc	r25, r1
    1610:	a1 1d       	adc	r26, r1
    1612:	6a 0f       	add	r22, r26
    1614:	71 1d       	adc	r23, r1
    1616:	81 1d       	adc	r24, r1
    1618:	91 1d       	adc	r25, r1
    161a:	a1 1d       	adc	r26, r1
    161c:	20 d0       	rcall	.+64     	; 0x165e <__ultoa_invert+0x84>
    161e:	09 f4       	brne	.+2      	; 0x1622 <__ultoa_invert+0x48>
    1620:	68 94       	set
    1622:	3f 91       	pop	r19
    1624:	2a e0       	ldi	r18, 0x0A	; 10
    1626:	26 9f       	mul	r18, r22
    1628:	11 24       	eor	r1, r1
    162a:	30 19       	sub	r19, r0
    162c:	30 5d       	subi	r19, 0xD0	; 208
    162e:	31 93       	st	Z+, r19
    1630:	de f6       	brtc	.-74     	; 0x15e8 <__ultoa_invert+0xe>
    1632:	cf 01       	movw	r24, r30
    1634:	08 95       	ret
    1636:	46 2f       	mov	r20, r22
    1638:	47 70       	andi	r20, 0x07	; 7
    163a:	40 5d       	subi	r20, 0xD0	; 208
    163c:	41 93       	st	Z+, r20
    163e:	b3 e0       	ldi	r27, 0x03	; 3
    1640:	0f d0       	rcall	.+30     	; 0x1660 <__ultoa_invert+0x86>
    1642:	c9 f7       	brne	.-14     	; 0x1636 <__ultoa_invert+0x5c>
    1644:	f6 cf       	rjmp	.-20     	; 0x1632 <__ultoa_invert+0x58>
    1646:	46 2f       	mov	r20, r22
    1648:	4f 70       	andi	r20, 0x0F	; 15
    164a:	40 5d       	subi	r20, 0xD0	; 208
    164c:	4a 33       	cpi	r20, 0x3A	; 58
    164e:	18 f0       	brcs	.+6      	; 0x1656 <__ultoa_invert+0x7c>
    1650:	49 5d       	subi	r20, 0xD9	; 217
    1652:	31 fd       	sbrc	r19, 1
    1654:	40 52       	subi	r20, 0x20	; 32
    1656:	41 93       	st	Z+, r20
    1658:	02 d0       	rcall	.+4      	; 0x165e <__ultoa_invert+0x84>
    165a:	a9 f7       	brne	.-22     	; 0x1646 <__ultoa_invert+0x6c>
    165c:	ea cf       	rjmp	.-44     	; 0x1632 <__ultoa_invert+0x58>
    165e:	b4 e0       	ldi	r27, 0x04	; 4
    1660:	a6 95       	lsr	r26
    1662:	97 95       	ror	r25
    1664:	87 95       	ror	r24
    1666:	77 95       	ror	r23
    1668:	67 95       	ror	r22
    166a:	ba 95       	dec	r27
    166c:	c9 f7       	brne	.-14     	; 0x1660 <__ultoa_invert+0x86>
    166e:	00 97       	sbiw	r24, 0x00	; 0
    1670:	61 05       	cpc	r22, r1
    1672:	71 05       	cpc	r23, r1
    1674:	08 95       	ret
    1676:	9b 01       	movw	r18, r22
    1678:	ac 01       	movw	r20, r24
    167a:	0a 2e       	mov	r0, r26
    167c:	06 94       	lsr	r0
    167e:	57 95       	ror	r21
    1680:	47 95       	ror	r20
    1682:	37 95       	ror	r19
    1684:	27 95       	ror	r18
    1686:	ba 95       	dec	r27
    1688:	c9 f7       	brne	.-14     	; 0x167c <__ultoa_invert+0xa2>
    168a:	62 0f       	add	r22, r18
    168c:	73 1f       	adc	r23, r19
    168e:	84 1f       	adc	r24, r20
    1690:	95 1f       	adc	r25, r21
    1692:	a0 1d       	adc	r26, r0
    1694:	08 95       	ret

00001696 <__prologue_saves__>:
    1696:	2f 92       	push	r2
    1698:	3f 92       	push	r3
    169a:	4f 92       	push	r4
    169c:	5f 92       	push	r5
    169e:	6f 92       	push	r6
    16a0:	7f 92       	push	r7
    16a2:	8f 92       	push	r8
    16a4:	9f 92       	push	r9
    16a6:	af 92       	push	r10
    16a8:	bf 92       	push	r11
    16aa:	cf 92       	push	r12
    16ac:	df 92       	push	r13
    16ae:	ef 92       	push	r14
    16b0:	ff 92       	push	r15
    16b2:	0f 93       	push	r16
    16b4:	1f 93       	push	r17
    16b6:	cf 93       	push	r28
    16b8:	df 93       	push	r29
    16ba:	cd b7       	in	r28, 0x3d	; 61
    16bc:	de b7       	in	r29, 0x3e	; 62
    16be:	ca 1b       	sub	r28, r26
    16c0:	db 0b       	sbc	r29, r27
    16c2:	0f b6       	in	r0, 0x3f	; 63
    16c4:	f8 94       	cli
    16c6:	de bf       	out	0x3e, r29	; 62
    16c8:	0f be       	out	0x3f, r0	; 63
    16ca:	cd bf       	out	0x3d, r28	; 61
    16cc:	09 94       	ijmp

000016ce <__epilogue_restores__>:
    16ce:	2a 88       	ldd	r2, Y+18	; 0x12
    16d0:	39 88       	ldd	r3, Y+17	; 0x11
    16d2:	48 88       	ldd	r4, Y+16	; 0x10
    16d4:	5f 84       	ldd	r5, Y+15	; 0x0f
    16d6:	6e 84       	ldd	r6, Y+14	; 0x0e
    16d8:	7d 84       	ldd	r7, Y+13	; 0x0d
    16da:	8c 84       	ldd	r8, Y+12	; 0x0c
    16dc:	9b 84       	ldd	r9, Y+11	; 0x0b
    16de:	aa 84       	ldd	r10, Y+10	; 0x0a
    16e0:	b9 84       	ldd	r11, Y+9	; 0x09
    16e2:	c8 84       	ldd	r12, Y+8	; 0x08
    16e4:	df 80       	ldd	r13, Y+7	; 0x07
    16e6:	ee 80       	ldd	r14, Y+6	; 0x06
    16e8:	fd 80       	ldd	r15, Y+5	; 0x05
    16ea:	0c 81       	ldd	r16, Y+4	; 0x04
    16ec:	1b 81       	ldd	r17, Y+3	; 0x03
    16ee:	aa 81       	ldd	r26, Y+2	; 0x02
    16f0:	b9 81       	ldd	r27, Y+1	; 0x01
    16f2:	ce 0f       	add	r28, r30
    16f4:	d1 1d       	adc	r29, r1
    16f6:	0f b6       	in	r0, 0x3f	; 63
    16f8:	f8 94       	cli
    16fa:	de bf       	out	0x3e, r29	; 62
    16fc:	0f be       	out	0x3f, r0	; 63
    16fe:	cd bf       	out	0x3d, r28	; 61
    1700:	ed 01       	movw	r28, r26
    1702:	08 95       	ret

00001704 <_exit>:
    1704:	f8 94       	cli

00001706 <__stop_program>:
    1706:	ff cf       	rjmp	.-2      	; 0x1706 <__stop_program>
