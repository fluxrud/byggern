
byggern_proj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000124  00800100  00001042  000010d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001042  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800224  00800224  000011fa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000011fa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001258  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00001294  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002044  00000000  00000000  000013f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c54  00000000  00000000  00003438  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bba  00000000  00000000  0000408c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c4  00000000  00000000  00004c48  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000716  00000000  00000000  00004f0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007a9  00000000  00000000  00005622  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00005dcb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__ctors_end>
       4:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
       8:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
       c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      10:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      14:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      18:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      1c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      20:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      24:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      28:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      2c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      30:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      34:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      38:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      3c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      40:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      44:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      48:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      4c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      50:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      54:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      58:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      5c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      60:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      64:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      68:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      6c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 5c       	subi	r16, 0xC0	; 192
      76:	00 00       	nop
      78:	0c 00       	.word	0x000c	; ????
      7a:	0c 00       	.word	0x000c	; ????
      7c:	7c 28       	or	r7, r12
      7e:	7c 28       	or	r7, r12
      80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
      82:	68 00       	.word	0x0068	; ????
      84:	24 10       	cpse	r2, r4
      86:	48 00       	.word	0x0048	; ????
      88:	28 54       	subi	r18, 0x48	; 72
      8a:	28 40       	sbci	r18, 0x08	; 8
      8c:	00 0c       	add	r0, r0
      8e:	00 00       	nop
      90:	00 78       	andi	r16, 0x80	; 128
      92:	84 00       	.word	0x0084	; ????
      94:	84 78       	andi	r24, 0x84	; 132
      96:	00 00       	nop
      98:	54 38       	cpi	r21, 0x84	; 132
      9a:	54 00       	.word	0x0054	; ????
      9c:	10 7c       	andi	r17, 0xC0	; 192
      9e:	10 00       	.word	0x0010	; ????
      a0:	80 40       	sbci	r24, 0x00	; 0
      a2:	00 00       	nop
      a4:	10 10       	cpse	r1, r0
      a6:	10 00       	.word	0x0010	; ????
      a8:	00 40       	sbci	r16, 0x00	; 0
      aa:	00 00       	nop
      ac:	60 10       	cpse	r6, r0
      ae:	0c 00       	.word	0x000c	; ????
      b0:	38 54       	subi	r19, 0x48	; 72
      b2:	38 00       	.word	0x0038	; ????
      b4:	48 7c       	andi	r20, 0xC8	; 200
      b6:	40 00       	.word	0x0040	; ????
      b8:	48 64       	ori	r20, 0x48	; 72
      ba:	58 00       	.word	0x0058	; ????
      bc:	44 54       	subi	r20, 0x44	; 68
      be:	2c 00       	.word	0x002c	; ????
      c0:	1c 10       	cpse	r1, r12
      c2:	7c 00       	.word	0x007c	; ????
      c4:	5c 54       	subi	r21, 0x4C	; 76
      c6:	24 00       	.word	0x0024	; ????
      c8:	38 54       	subi	r19, 0x48	; 72
      ca:	24 00       	.word	0x0024	; ????
      cc:	64 14       	cp	r6, r4
      ce:	0c 00       	.word	0x000c	; ????
      d0:	68 54       	subi	r22, 0x48	; 72
      d2:	2c 00       	.word	0x002c	; ????
      d4:	48 54       	subi	r20, 0x48	; 72
      d6:	38 00       	.word	0x0038	; ????
      d8:	00 48       	sbci	r16, 0x80	; 128
      da:	00 00       	nop
      dc:	80 48       	sbci	r24, 0x80	; 128
      de:	00 00       	nop
      e0:	10 28       	or	r1, r0
      e2:	44 00       	.word	0x0044	; ????
      e4:	28 28       	or	r2, r8
      e6:	28 00       	.word	0x0028	; ????
      e8:	44 28       	or	r4, r4
      ea:	10 00       	.word	0x0010	; ????
      ec:	04 54       	subi	r16, 0x44	; 68
      ee:	08 00       	.word	0x0008	; ????
      f0:	38 44       	sbci	r19, 0x48	; 72
      f2:	5c 00       	.word	0x005c	; ????
      f4:	78 14       	cp	r7, r8
      f6:	78 00       	.word	0x0078	; ????
      f8:	7c 54       	subi	r23, 0x4C	; 76
      fa:	28 00       	.word	0x0028	; ????
      fc:	38 44       	sbci	r19, 0x48	; 72
      fe:	28 00       	.word	0x0028	; ????
     100:	7c 44       	sbci	r23, 0x4C	; 76
     102:	38 00       	.word	0x0038	; ????
     104:	7c 54       	subi	r23, 0x4C	; 76
     106:	44 00       	.word	0x0044	; ????
     108:	7c 14       	cp	r7, r12
     10a:	04 00       	.word	0x0004	; ????
     10c:	38 44       	sbci	r19, 0x48	; 72
     10e:	74 00       	.word	0x0074	; ????
     110:	7c 10       	cpse	r7, r12
     112:	7c 00       	.word	0x007c	; ????
     114:	44 7c       	andi	r20, 0xC4	; 196
     116:	44 00       	.word	0x0044	; ????
     118:	20 40       	sbci	r18, 0x00	; 0
     11a:	3c 00       	.word	0x003c	; ????
     11c:	7c 10       	cpse	r7, r12
     11e:	6c 00       	.word	0x006c	; ????
     120:	7c 40       	sbci	r23, 0x0C	; 12
     122:	40 00       	.word	0x0040	; ????
     124:	7c 18       	sub	r7, r12
     126:	7c 00       	.word	0x007c	; ????
     128:	78 10       	cpse	r7, r8
     12a:	3c 00       	.word	0x003c	; ????
     12c:	38 44       	sbci	r19, 0x48	; 72
     12e:	38 00       	.word	0x0038	; ????
     130:	7c 14       	cp	r7, r12
     132:	08 00       	.word	0x0008	; ????
     134:	38 44       	sbci	r19, 0x48	; 72
     136:	b8 00       	.word	0x00b8	; ????
     138:	7c 14       	cp	r7, r12
     13a:	68 00       	.word	0x0068	; ????
     13c:	48 54       	subi	r20, 0x48	; 72
     13e:	24 00       	.word	0x0024	; ????
     140:	04 7c       	andi	r16, 0xC4	; 196
     142:	04 00       	.word	0x0004	; ????
     144:	7c 40       	sbci	r23, 0x0C	; 12
     146:	7c 00       	.word	0x007c	; ????
     148:	3c 60       	ori	r19, 0x0C	; 12
     14a:	3c 00       	.word	0x003c	; ????
     14c:	7c 30       	cpi	r23, 0x0C	; 12
     14e:	7c 00       	.word	0x007c	; ????
     150:	6c 10       	cpse	r6, r12
     152:	6c 00       	.word	0x006c	; ????
     154:	0c 70       	andi	r16, 0x0C	; 12
     156:	0c 00       	.word	0x000c	; ????
     158:	64 54       	subi	r22, 0x44	; 68
     15a:	4c 00       	.word	0x004c	; ????
     15c:	00 7c       	andi	r16, 0xC0	; 192
     15e:	44 00       	.word	0x0044	; ????
     160:	0c 10       	cpse	r0, r12
     162:	60 00       	.word	0x0060	; ????
     164:	44 7c       	andi	r20, 0xC4	; 196
     166:	00 00       	nop
     168:	08 04       	cpc	r0, r8
     16a:	08 00       	.word	0x0008	; ????
     16c:	80 80       	ld	r8, Z
     16e:	80 00       	.word	0x0080	; ????
     170:	00 04       	cpc	r0, r0
     172:	08 00       	.word	0x0008	; ????
     174:	30 48       	sbci	r19, 0x80	; 128
     176:	78 00       	.word	0x0078	; ????
     178:	7c 48       	sbci	r23, 0x8C	; 140
     17a:	30 00       	.word	0x0030	; ????
     17c:	30 48       	sbci	r19, 0x80	; 128
     17e:	48 00       	.word	0x0048	; ????
     180:	30 48       	sbci	r19, 0x80	; 128
     182:	7c 00       	.word	0x007c	; ????
     184:	30 68       	ori	r19, 0x80	; 128
     186:	50 00       	.word	0x0050	; ????
     188:	10 78       	andi	r17, 0x80	; 128
     18a:	14 00       	.word	0x0014	; ????
     18c:	90 a8       	ldd	r9, Z+48	; 0x30
     18e:	78 00       	.word	0x0078	; ????
     190:	7c 08       	sbc	r7, r12
     192:	70 00       	.word	0x0070	; ????
     194:	50 74       	andi	r21, 0x40	; 64
     196:	40 00       	.word	0x0040	; ????
     198:	80 80       	ld	r8, Z
     19a:	74 00       	.word	0x0074	; ????
     19c:	7c 10       	cpse	r7, r12
     19e:	68 00       	.word	0x0068	; ????
     1a0:	44 7c       	andi	r20, 0xC4	; 196
     1a2:	40 00       	.word	0x0040	; ????
     1a4:	78 10       	cpse	r7, r8
     1a6:	78 00       	.word	0x0078	; ????
     1a8:	78 08       	sbc	r7, r8
     1aa:	70 00       	.word	0x0070	; ????
     1ac:	30 48       	sbci	r19, 0x80	; 128
     1ae:	30 00       	.word	0x0030	; ????
     1b0:	f8 28       	or	r15, r8
     1b2:	10 00       	.word	0x0010	; ????
     1b4:	30 48       	sbci	r19, 0x80	; 128
     1b6:	f8 00       	.word	0x00f8	; ????
     1b8:	78 10       	cpse	r7, r8
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	50 58       	subi	r21, 0x80	; 128
     1be:	28 00       	.word	0x0028	; ????
     1c0:	08 3c       	cpi	r16, 0xC8	; 200
     1c2:	48 00       	.word	0x0048	; ????
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	78 00       	.word	0x0078	; ????
     1c8:	38 40       	sbci	r19, 0x08	; 8
     1ca:	38 00       	.word	0x0038	; ????
     1cc:	78 20       	and	r7, r8
     1ce:	78 00       	.word	0x0078	; ????
     1d0:	48 30       	cpi	r20, 0x08	; 8
     1d2:	48 00       	.word	0x0048	; ????
     1d4:	98 a0       	ldd	r9, Y+32	; 0x20
     1d6:	78 00       	.word	0x0078	; ????
     1d8:	48 68       	ori	r20, 0x88	; 136
     1da:	58 00       	.word	0x0058	; ????
     1dc:	10 78       	andi	r17, 0x80	; 128
     1de:	84 00       	.word	0x0084	; ????
     1e0:	00 7c       	andi	r16, 0xC0	; 192
     1e2:	00 00       	nop
     1e4:	84 78       	andi	r24, 0x84	; 132
     1e6:	10 00       	.word	0x0010	; ????
     1e8:	08 04       	cpc	r0, r8
     1ea:	08 04       	cpc	r0, r8

000001ec <__ctors_end>:
     1ec:	11 24       	eor	r1, r1
     1ee:	1f be       	out	0x3f, r1	; 63
     1f0:	cf ef       	ldi	r28, 0xFF	; 255
     1f2:	d4 e0       	ldi	r29, 0x04	; 4
     1f4:	de bf       	out	0x3e, r29	; 62
     1f6:	cd bf       	out	0x3d, r28	; 61

000001f8 <__do_copy_data>:
     1f8:	12 e0       	ldi	r17, 0x02	; 2
     1fa:	a0 e0       	ldi	r26, 0x00	; 0
     1fc:	b1 e0       	ldi	r27, 0x01	; 1
     1fe:	e2 e4       	ldi	r30, 0x42	; 66
     200:	f0 e1       	ldi	r31, 0x10	; 16
     202:	02 c0       	rjmp	.+4      	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
     204:	05 90       	lpm	r0, Z+
     206:	0d 92       	st	X+, r0
     208:	a4 32       	cpi	r26, 0x24	; 36
     20a:	b1 07       	cpc	r27, r17
     20c:	d9 f7       	brne	.-10     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>

0000020e <__do_clear_bss>:
     20e:	22 e0       	ldi	r18, 0x02	; 2
     210:	a4 e2       	ldi	r26, 0x24	; 36
     212:	b2 e0       	ldi	r27, 0x02	; 2
     214:	01 c0       	rjmp	.+2      	; 0x218 <.do_clear_bss_start>

00000216 <.do_clear_bss_loop>:
     216:	1d 92       	st	X+, r1

00000218 <.do_clear_bss_start>:
     218:	a0 33       	cpi	r26, 0x30	; 48
     21a:	b2 07       	cpc	r27, r18
     21c:	e1 f7       	brne	.-8      	; 0x216 <.do_clear_bss_loop>
     21e:	0e 94 13 02 	call	0x426	; 0x426 <main>
     222:	0c 94 1f 08 	jmp	0x103e	; 0x103e <_exit>

00000226 <__bad_interrupt>:
     226:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000022a <set_ctc_mode>:
}

void set_ctc_mode()
{
	// CTC mode PD4
	clear_bit(TCCR3A, WGM30);
     22a:	eb e8       	ldi	r30, 0x8B	; 139
     22c:	f0 e0       	ldi	r31, 0x00	; 0
     22e:	80 81       	ld	r24, Z
     230:	8e 7f       	andi	r24, 0xFE	; 254
     232:	80 83       	st	Z, r24
	clear_bit(TCCR3A, WGM31);
     234:	80 81       	ld	r24, Z
     236:	8d 7f       	andi	r24, 0xFD	; 253
     238:	80 83       	st	Z, r24
	set_bit(TCCR3B, WGM32);
     23a:	ea e8       	ldi	r30, 0x8A	; 138
     23c:	f0 e0       	ldi	r31, 0x00	; 0
     23e:	80 81       	ld	r24, Z
     240:	88 60       	ori	r24, 0x08	; 8
     242:	80 83       	st	Z, r24
	clear_bit(TCCR3B, WGM33);
     244:	80 81       	ld	r24, Z
     246:	8f 7e       	andi	r24, 0xEF	; 239
     248:	80 83       	st	Z, r24
     24a:	08 95       	ret

0000024c <set_selected_clock>:
}

void set_selected_clock()
{
	// clock prescaler selection clk_io / 1
	set_bit(TCCR3B, CS30);
     24c:	ea e8       	ldi	r30, 0x8A	; 138
     24e:	f0 e0       	ldi	r31, 0x00	; 0
     250:	80 81       	ld	r24, Z
     252:	81 60       	ori	r24, 0x01	; 1
     254:	80 83       	st	Z, r24
	clear_bit(TCCR3B, CS31);
     256:	80 81       	ld	r24, Z
     258:	8d 7f       	andi	r24, 0xFD	; 253
     25a:	80 83       	st	Z, r24
	clear_bit(TCCR3B, CS32);
     25c:	80 81       	ld	r24, Z
     25e:	8b 7f       	andi	r24, 0xFB	; 251
     260:	80 83       	st	Z, r24
     262:	08 95       	ret

00000264 <set_compare_match_mode>:
}

void set_compare_match_mode()
{
	// toggle output on compare
	set_bit(TCCR3A, COM3A0);
     264:	eb e8       	ldi	r30, 0x8B	; 139
     266:	f0 e0       	ldi	r31, 0x00	; 0
     268:	80 81       	ld	r24, Z
     26a:	80 64       	ori	r24, 0x40	; 64
     26c:	80 83       	st	Z, r24
	clear_bit(TCCR3A, COM3A1);
     26e:	80 81       	ld	r24, Z
     270:	8f 77       	andi	r24, 0x7F	; 127
     272:	80 83       	st	Z, r24
     274:	08 95       	ret

00000276 <init_pwm>:
}

void init_pwm()
{	
	// set PD4 as output
	set_bit(DDRD, DDD4);	
     276:	81 b3       	in	r24, 0x11	; 17
     278:	80 61       	ori	r24, 0x10	; 16
     27a:	81 bb       	out	0x11, r24	; 17
	
	set_ctc_mode();
     27c:	0e 94 15 01 	call	0x22a	; 0x22a <set_ctc_mode>
	set_selected_clock();
     280:	0e 94 26 01 	call	0x24c	; 0x24c <set_selected_clock>
	set_compare_match_mode();
     284:	0e 94 32 01 	call	0x264	; 0x264 <set_compare_match_mode>
	
	// set max freq, f_clk / 2
	OCR3A = 0x00;
     288:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     28c:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
     290:	08 95       	ret

00000292 <read_adc>:

struct adc_t read_adc()
{
	// base address wr trigger
	volatile char *ext_adc = (char *) 0x1400;
	ext_adc[0] = 0x00;
     292:	e0 e0       	ldi	r30, 0x00	; 0
     294:	f4 e1       	ldi	r31, 0x14	; 20
     296:	10 82       	st	Z, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     298:	82 e6       	ldi	r24, 0x62	; 98
     29a:	8a 95       	dec	r24
     29c:	f1 f7       	brne	.-4      	; 0x29a <read_adc+0x8>
     29e:	00 00       	nop
	// wait atleast 30 us
	_delay_us(60);

	struct adc_t out;
	// read	?delay between reads?
	out.c0 = ext_adc[0]; // y joystick
     2a0:	60 81       	ld	r22, Z
	out.c1 = ext_adc[1]; // x joystick
     2a2:	70 91 01 14 	lds	r23, 0x1401	; 0x801401 <__bss_end+0x11d1>
	out.c2 = ext_adc[2]; // r slider
     2a6:	80 91 02 14 	lds	r24, 0x1402	; 0x801402 <__bss_end+0x11d2>
	out.c3 = ext_adc[3]; // l slider
     2aa:	90 91 03 14 	lds	r25, 0x1403	; 0x801403 <__bss_end+0x11d3>
	
	return out;
}
     2ae:	08 95       	ret

000002b0 <init_adc>:

void init_adc()
{
	volatile char *ext_adc = (char *) 0x1400;
	for(int i = 0; i < 8; i++) ext_adc[0] = 0b00010000 + i;
     2b0:	80 e0       	ldi	r24, 0x00	; 0
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	05 c0       	rjmp	.+10     	; 0x2c0 <init_adc+0x10>
     2b6:	20 e1       	ldi	r18, 0x10	; 16
     2b8:	28 0f       	add	r18, r24
     2ba:	20 93 00 14 	sts	0x1400, r18	; 0x801400 <__bss_end+0x11d0>
     2be:	01 96       	adiw	r24, 0x01	; 1
     2c0:	88 30       	cpi	r24, 0x08	; 8
     2c2:	91 05       	cpc	r25, r1
     2c4:	c4 f3       	brlt	.-16     	; 0x2b6 <init_adc+0x6>
}
     2c6:	08 95       	ret

000002c8 <get_joystick_analog>:
void joystick_auto_calibration();
struct joystick_analog get_joystick_analog()
{
	struct joystick_analog out;
	
	struct adc_t a = read_adc();
     2c8:	0e 94 49 01 	call	0x292	; 0x292 <read_adc>
     2cc:	96 2f       	mov	r25, r22
     2ce:	87 2f       	mov	r24, r23
	out.y = a.c0;
	
	//printf("[ %d, %d]", out.x, out.y);
	
	return out;
}
     2d0:	08 95       	ret

000002d2 <get_joystick_direction>:

int get_joystick_direction()
{
	struct joystick_analog js_analog = get_joystick_analog();
     2d2:	0e 94 64 01 	call	0x2c8	; 0x2c8 <get_joystick_analog>
     2d6:	29 2f       	mov	r18, r25
	
	uint8_t thresh = 20;
	
	int ret = NEUTRAL;
	
	if (js_analog.x < thresh)					ret = LEFT;
     2d8:	84 31       	cpi	r24, 0x14	; 20
     2da:	70 f0       	brcs	.+28     	; 0x2f8 <get_joystick_direction+0x26>
	else if (js_analog.x > 255 - thresh)		ret = RIGHT;
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	8c 3e       	cpi	r24, 0xEC	; 236
     2e0:	91 05       	cpc	r25, r1
     2e2:	6c f4       	brge	.+26     	; 0x2fe <get_joystick_direction+0x2c>
	else 
	{
		if (js_analog.y < thresh)				ret = DOWN;
     2e4:	24 31       	cpi	r18, 0x14	; 20
     2e6:	70 f0       	brcs	.+28     	; 0x304 <get_joystick_direction+0x32>
		else if (js_analog.y > 255 - thresh)	ret = UP;
     2e8:	82 2f       	mov	r24, r18
     2ea:	90 e0       	ldi	r25, 0x00	; 0
     2ec:	8c 3e       	cpi	r24, 0xEC	; 236
     2ee:	91 05       	cpc	r25, r1
     2f0:	64 f4       	brge	.+24     	; 0x30a <get_joystick_direction+0x38>
{
	struct joystick_analog js_analog = get_joystick_analog();
	
	uint8_t thresh = 20;
	
	int ret = NEUTRAL;
     2f2:	84 e0       	ldi	r24, 0x04	; 4
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	08 95       	ret
	
	if (js_analog.x < thresh)					ret = LEFT;
     2f8:	80 e0       	ldi	r24, 0x00	; 0
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	08 95       	ret
	else if (js_analog.x > 255 - thresh)		ret = RIGHT;
     2fe:	81 e0       	ldi	r24, 0x01	; 1
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	08 95       	ret
	else 
	{
		if (js_analog.y < thresh)				ret = DOWN;
     304:	83 e0       	ldi	r24, 0x03	; 3
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	08 95       	ret
		else if (js_analog.y > 255 - thresh)	ret = UP;
     30a:	82 e0       	ldi	r24, 0x02	; 2
     30c:	90 e0       	ldi	r25, 0x00	; 0
	}
	
	return ret;
}
     30e:	08 95       	ret

00000310 <joystick_direction_to_string>:

char* joystick_direction_to_string(int dir)
{	
	switch(dir)
     310:	82 30       	cpi	r24, 0x02	; 2
     312:	91 05       	cpc	r25, r1
     314:	71 f0       	breq	.+28     	; 0x332 <joystick_direction_to_string+0x22>
     316:	2c f4       	brge	.+10     	; 0x322 <joystick_direction_to_string+0x12>
     318:	00 97       	sbiw	r24, 0x00	; 0
     31a:	89 f0       	breq	.+34     	; 0x33e <joystick_direction_to_string+0x2e>
     31c:	01 97       	sbiw	r24, 0x01	; 1
     31e:	61 f0       	breq	.+24     	; 0x338 <joystick_direction_to_string+0x28>
     320:	11 c0       	rjmp	.+34     	; 0x344 <joystick_direction_to_string+0x34>
     322:	83 30       	cpi	r24, 0x03	; 3
     324:	91 05       	cpc	r25, r1
     326:	89 f0       	breq	.+34     	; 0x34a <joystick_direction_to_string+0x3a>
     328:	04 97       	sbiw	r24, 0x04	; 4
     32a:	61 f4       	brne	.+24     	; 0x344 <joystick_direction_to_string+0x34>
	{
		case NEUTRAL:
			return "NEUTRAL";
     32c:	86 e0       	ldi	r24, 0x06	; 6
     32e:	91 e0       	ldi	r25, 0x01	; 1
     330:	08 95       	ret
		case DOWN:
			return "DOWN";
		case UP:
			return "UP";
     332:	83 e1       	ldi	r24, 0x13	; 19
     334:	91 e0       	ldi	r25, 0x01	; 1
     336:	08 95       	ret
		case RIGHT:
			return "RIGHT";
     338:	86 e1       	ldi	r24, 0x16	; 22
     33a:	91 e0       	ldi	r25, 0x01	; 1
     33c:	08 95       	ret
		case LEFT:
			return "LEFT";
     33e:	8c e1       	ldi	r24, 0x1C	; 28
     340:	91 e0       	ldi	r25, 0x01	; 1
     342:	08 95       	ret
		default:
			return NULL;
     344:	80 e0       	ldi	r24, 0x00	; 0
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	08 95       	ret
	switch(dir)
	{
		case NEUTRAL:
			return "NEUTRAL";
		case DOWN:
			return "DOWN";
     34a:	8e e0       	ldi	r24, 0x0E	; 14
     34c:	91 e0       	ldi	r25, 0x01	; 1
		case LEFT:
			return "LEFT";
		default:
			return NULL;
	}
}
     34e:	08 95       	ret

00000350 <get_slider_right_analog>:

#include "adc.h"

uint8_t get_slider_right_analog()
{
	struct adc_t a = read_adc();
     350:	0e 94 49 01 	call	0x292	; 0x292 <read_adc>
	return a.c2;
}
     354:	08 95       	ret

00000356 <get_slider_left_analog>:

uint8_t get_slider_left_analog()
{
	struct adc_t a = read_adc();
     356:	0e 94 49 01 	call	0x292	; 0x292 <read_adc>
	return a.c3;
}
     35a:	89 2f       	mov	r24, r25
     35c:	08 95       	ret

0000035e <oled_menu_display>:
};
static uint8_t n_items = 11;
static uint8_t current_item = 4;

void oled_menu_display()
{
     35e:	cf 93       	push	r28
     360:	df 93       	push	r29
	for(int i = 0; i < 8; i++)
     362:	c0 e0       	ldi	r28, 0x00	; 0
     364:	d0 e0       	ldi	r29, 0x00	; 0
     366:	1f c0       	rjmp	.+62     	; 0x3a6 <oled_menu_display+0x48>
	{
		if (i + current_item < n_items){
     368:	ce 01       	movw	r24, r28
     36a:	04 96       	adiw	r24, 0x04	; 4
     36c:	8b 30       	cpi	r24, 0x0B	; 11
     36e:	91 05       	cpc	r25, r1
     370:	9c f4       	brge	.+38     	; 0x398 <oled_menu_display+0x3a>
			char* s = oled_menu_items[i + current_item];
     372:	88 0f       	add	r24, r24
     374:	99 1f       	adc	r25, r25
     376:	fc 01       	movw	r30, r24
     378:	e6 50       	subi	r30, 0x06	; 6
     37a:	fe 4f       	sbci	r31, 0xFE	; 254
     37c:	80 81       	ld	r24, Z
     37e:	91 81       	ldd	r25, Z+1	; 0x01
			oled_write_string_on_line(s, strlen(s), i);
     380:	fc 01       	movw	r30, r24
     382:	01 90       	ld	r0, Z+
     384:	00 20       	and	r0, r0
     386:	e9 f7       	brne	.-6      	; 0x382 <oled_menu_display+0x24>
     388:	31 97       	sbiw	r30, 0x01	; 1
     38a:	bf 01       	movw	r22, r30
     38c:	68 1b       	sub	r22, r24
     38e:	79 0b       	sbc	r23, r25
     390:	4c 2f       	mov	r20, r28
     392:	0e 94 b7 02 	call	0x56e	; 0x56e <oled_write_string_on_line>
     396:	06 c0       	rjmp	.+12     	; 0x3a4 <oled_menu_display+0x46>
		}
		else {
			char* s = "----";
			oled_write_string_on_line(s, strlen(s), i);
     398:	4c 2f       	mov	r20, r28
     39a:	64 e0       	ldi	r22, 0x04	; 4
     39c:	81 e2       	ldi	r24, 0x21	; 33
     39e:	91 e0       	ldi	r25, 0x01	; 1
     3a0:	0e 94 b7 02 	call	0x56e	; 0x56e <oled_write_string_on_line>
static uint8_t n_items = 11;
static uint8_t current_item = 4;

void oled_menu_display()
{
	for(int i = 0; i < 8; i++)
     3a4:	21 96       	adiw	r28, 0x01	; 1
     3a6:	c8 30       	cpi	r28, 0x08	; 8
     3a8:	d1 05       	cpc	r29, r1
     3aa:	f4 f2       	brlt	.-68     	; 0x368 <oled_menu_display+0xa>
		else {
			char* s = "----";
			oled_write_string_on_line(s, strlen(s), i);
		}
	}
}
     3ac:	df 91       	pop	r29
     3ae:	cf 91       	pop	r28
     3b0:	08 95       	ret

000003b2 <init_pin_directions>:
#include "oled_menu.h"

void init_pin_directions()
{
	// set PORTB PIN0 direction as output
	set_bit(DDRB, DDB0);
     3b2:	87 b3       	in	r24, 0x17	; 23
     3b4:	81 60       	ori	r24, 0x01	; 1
     3b6:	87 bb       	out	0x17, r24	; 23
     3b8:	08 95       	ret

000003ba <init_ext_mem>:
}

void init_ext_mem()
{
	// enable XMEM
	set_bit(MCUCR, SRE);
     3ba:	85 b7       	in	r24, 0x35	; 53
     3bc:	80 68       	ori	r24, 0x80	; 128
     3be:	85 bf       	out	0x35, r24	; 53
	// release 4 msb to jtag
	set_bit(SFIOR, XMM2);
     3c0:	80 b7       	in	r24, 0x30	; 48
     3c2:	80 62       	ori	r24, 0x20	; 32
     3c4:	80 bf       	out	0x30, r24	; 48
	clear_bit(SFIOR, XMM1);
     3c6:	80 b7       	in	r24, 0x30	; 48
     3c8:	8f 7e       	andi	r24, 0xEF	; 239
     3ca:	80 bf       	out	0x30, r24	; 48
	clear_bit(SFIOR, XMM0);
     3cc:	80 b7       	in	r24, 0x30	; 48
     3ce:	87 7f       	andi	r24, 0xF7	; 247
     3d0:	80 bf       	out	0x30, r24	; 48
     3d2:	08 95       	ret

000003d4 <display_adc_info>:
}


void display_adc_info()
{
	printf("Joystick: %s        \n\r", joystick_direction_to_string(get_joystick_direction()));
     3d4:	0e 94 69 01 	call	0x2d2	; 0x2d2 <get_joystick_direction>
     3d8:	0e 94 88 01 	call	0x310	; 0x310 <joystick_direction_to_string>
     3dc:	9f 93       	push	r25
     3de:	8f 93       	push	r24
     3e0:	86 e2       	ldi	r24, 0x26	; 38
     3e2:	91 e0       	ldi	r25, 0x01	; 1
     3e4:	9f 93       	push	r25
     3e6:	8f 93       	push	r24
     3e8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <printf>
	printf("Slider right: %d    \n\r", get_slider_right_analog());
     3ec:	0e 94 a8 01 	call	0x350	; 0x350 <get_slider_right_analog>
     3f0:	1f 92       	push	r1
     3f2:	8f 93       	push	r24
     3f4:	8d e3       	ldi	r24, 0x3D	; 61
     3f6:	91 e0       	ldi	r25, 0x01	; 1
     3f8:	9f 93       	push	r25
     3fa:	8f 93       	push	r24
     3fc:	0e 94 fd 03 	call	0x7fa	; 0x7fa <printf>
	printf("Slider left: %d     \n\r", get_slider_left_analog());
     400:	0e 94 ab 01 	call	0x356	; 0x356 <get_slider_left_analog>
     404:	1f 92       	push	r1
     406:	8f 93       	push	r24
     408:	84 e5       	ldi	r24, 0x54	; 84
     40a:	91 e0       	ldi	r25, 0x01	; 1
     40c:	9f 93       	push	r25
     40e:	8f 93       	push	r24
     410:	0e 94 fd 03 	call	0x7fa	; 0x7fa <printf>
}
     414:	8d b7       	in	r24, 0x3d	; 61
     416:	9e b7       	in	r25, 0x3e	; 62
     418:	0c 96       	adiw	r24, 0x0c	; 12
     41a:	0f b6       	in	r0, 0x3f	; 63
     41c:	f8 94       	cli
     41e:	9e bf       	out	0x3e, r25	; 62
     420:	0f be       	out	0x3f, r0	; 63
     422:	8d bf       	out	0x3d, r24	; 61
     424:	08 95       	ret

00000426 <main>:

void test_static_address();

int main(void)
{
    init_pin_directions();
     426:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <init_pin_directions>
	init_ext_mem();
     42a:	0e 94 dd 01 	call	0x3ba	; 0x3ba <init_ext_mem>
	init_pwm();
     42e:	0e 94 3b 01 	call	0x276	; 0x276 <init_pwm>
	USART_Init(MYUBRR);
     432:	8f e1       	ldi	r24, 0x1F	; 31
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	0e 94 a0 03 	call	0x740	; 0x740 <USART_Init>
	init_adc();
     43a:	0e 94 58 01 	call	0x2b0	; 0x2b0 <init_adc>
	init_oled();
     43e:	0e 94 3e 02 	call	0x47c	; 0x47c <init_oled>
	
	// todo: change transmit and receive to int return, error handling?
	fdevopen(USART_Transmit, USART_Receive);
     442:	6d ea       	ldi	r22, 0xAD	; 173
     444:	73 e0       	ldi	r23, 0x03	; 3
     446:	87 ea       	ldi	r24, 0xA7	; 167
     448:	93 e0       	ldi	r25, 0x03	; 3
     44a:	0e 94 b2 03 	call	0x764	; 0x764 <fdevopen>
	
	// test functions
	//test_static_address();
	//SRAM_test();
	
	oled_fill_entire(0x00);
     44e:	80 e0       	ldi	r24, 0x00	; 0
     450:	0e 94 52 02 	call	0x4a4	; 0x4a4 <oled_fill_entire>
	//printf("\n\r arrow = ");
	//oled_draw_arrow();
	
    while (1) 
    {
		oled_render();
     454:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <oled_render>
		//printf("\n\r-- LOOP --\n\r");
		toggle_pin('B', 0);
     458:	60 e0       	ldi	r22, 0x00	; 0
     45a:	82 e4       	ldi	r24, 0x42	; 66
     45c:	0e 94 14 03 	call	0x628	; 0x628 <toggle_pin>
		//oled_write_char((unsigned char)'a', 8);
		//oled_fill_entire();
		display_adc_info();
     460:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <display_adc_info>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     464:	2f ef       	ldi	r18, 0xFF	; 255
     466:	8f e7       	ldi	r24, 0x7F	; 127
     468:	91 e0       	ldi	r25, 0x01	; 1
     46a:	21 50       	subi	r18, 0x01	; 1
     46c:	80 40       	sbci	r24, 0x00	; 0
     46e:	90 40       	sbci	r25, 0x00	; 0
     470:	e1 f7       	brne	.-8      	; 0x46a <main+0x44>
     472:	00 c0       	rjmp	.+0      	; 0x474 <main+0x4e>
     474:	00 c0       	rjmp	.+0      	; 0x476 <main+0x50>
		_delay_ms(100);
		//printf("abcdefg");
		oled_menu_display();
     476:	0e 94 af 01 	call	0x35e	; 0x35e <oled_menu_display>
     47a:	ec cf       	rjmp	.-40     	; 0x454 <main+0x2e>

0000047c <init_oled>:
	*oled_d_base = 0b00011000;
	*oled_d_base = 0b00011000;
}

void oled_draw_menu_arrow()
{
     47c:	80 e0       	ldi	r24, 0x00	; 0
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	07 c0       	rjmp	.+14     	; 0x490 <init_oled+0x14>
     482:	fc 01       	movw	r30, r24
     484:	e2 5f       	subi	r30, 0xF2	; 242
     486:	fd 4f       	sbci	r31, 0xFD	; 253
     488:	20 81       	ld	r18, Z
     48a:	20 93 00 10 	sts	0x1000, r18	; 0x801000 <__bss_end+0xdd0>
     48e:	01 96       	adiw	r24, 0x01	; 1
     490:	86 31       	cpi	r24, 0x16	; 22
     492:	91 05       	cpc	r25, r1
     494:	b4 f3       	brlt	.-20     	; 0x482 <init_oled+0x6>
     496:	e0 e0       	ldi	r30, 0x00	; 0
     498:	f0 e1       	ldi	r31, 0x10	; 16
     49a:	80 e2       	ldi	r24, 0x20	; 32
     49c:	80 83       	st	Z, r24
     49e:	82 e0       	ldi	r24, 0x02	; 2
     4a0:	80 83       	st	Z, r24
     4a2:	08 95       	ret

000004a4 <oled_fill_entire>:
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	30 e0       	ldi	r19, 0x00	; 0
     4a8:	05 c0       	rjmp	.+10     	; 0x4b4 <oled_fill_entire+0x10>
     4aa:	f9 01       	movw	r30, r18
     4ac:	f4 5e       	subi	r31, 0xE4	; 228
     4ae:	80 83       	st	Z, r24
     4b0:	2f 5f       	subi	r18, 0xFF	; 255
     4b2:	3f 4f       	sbci	r19, 0xFF	; 255
     4b4:	21 15       	cp	r18, r1
     4b6:	94 e0       	ldi	r25, 0x04	; 4
     4b8:	39 07       	cpc	r19, r25
     4ba:	bc f3       	brlt	.-18     	; 0x4aa <oled_fill_entire+0x6>
     4bc:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <__data_end+0x1>
     4c0:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <__data_end>
     4c4:	08 95       	ret

000004c6 <oled_goto_page>:
     4c6:	88 30       	cpi	r24, 0x08	; 8
     4c8:	18 f4       	brcc	.+6      	; 0x4d0 <oled_goto_page+0xa>
     4ca:	80 55       	subi	r24, 0x50	; 80
     4cc:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xdd0>
     4d0:	08 95       	ret

000004d2 <oled_goto_col>:
     4d2:	e0 e0       	ldi	r30, 0x00	; 0
     4d4:	f0 e1       	ldi	r31, 0x10	; 16
     4d6:	91 e2       	ldi	r25, 0x21	; 33
     4d8:	90 83       	st	Z, r25
     4da:	80 83       	st	Z, r24
     4dc:	8f ef       	ldi	r24, 0xFF	; 255
     4de:	80 83       	st	Z, r24
     4e0:	08 95       	ret

000004e2 <oled_write_char>:
     4e2:	8a 30       	cpi	r24, 0x0A	; 10
     4e4:	69 f4       	brne	.+26     	; 0x500 <__stack+0x1>
     4e6:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <__data_end>
     4ea:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <__data_end+0x1>
     4ee:	80 58       	subi	r24, 0x80	; 128
     4f0:	9f 4f       	sbci	r25, 0xFF	; 255
     4f2:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <__data_end+0x1>
     4f6:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <__data_end>
     4fa:	80 e0       	ldi	r24, 0x00	; 0
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	08 95       	ret
     500:	8d 30       	cpi	r24, 0x0D	; 13
     502:	49 f4       	brne	.+18     	; 0x516 <__stack+0x17>
     504:	20 91 24 02 	lds	r18, 0x0224	; 0x800224 <__data_end>
     508:	30 91 25 02 	lds	r19, 0x0225	; 0x800225 <__data_end+0x1>
     50c:	20 78       	andi	r18, 0x80	; 128
     50e:	30 93 25 02 	sts	0x0225, r19	; 0x800225 <__data_end+0x1>
     512:	20 93 24 02 	sts	0x0224, r18	; 0x800224 <__data_end>
     516:	90 ee       	ldi	r25, 0xE0	; 224
     518:	98 0f       	add	r25, r24
     51a:	90 36       	cpi	r25, 0x60	; 96
     51c:	28 f5       	brcc	.+74     	; 0x568 <__stack+0x69>
     51e:	40 e0       	ldi	r20, 0x00	; 0
     520:	50 e0       	ldi	r21, 0x00	; 0
     522:	1c c0       	rjmp	.+56     	; 0x55c <__stack+0x5d>
     524:	20 91 24 02 	lds	r18, 0x0224	; 0x800224 <__data_end>
     528:	30 91 25 02 	lds	r19, 0x0225	; 0x800225 <__data_end+0x1>
     52c:	d9 01       	movw	r26, r18
     52e:	b4 5e       	subi	r27, 0xE4	; 228
     530:	e8 2f       	mov	r30, r24
     532:	f0 e0       	ldi	r31, 0x00	; 0
     534:	b0 97       	sbiw	r30, 0x20	; 32
     536:	ee 0f       	add	r30, r30
     538:	ff 1f       	adc	r31, r31
     53a:	ee 0f       	add	r30, r30
     53c:	ff 1f       	adc	r31, r31
     53e:	e4 0f       	add	r30, r20
     540:	f5 1f       	adc	r31, r21
     542:	e0 59       	subi	r30, 0x90	; 144
     544:	ff 4f       	sbci	r31, 0xFF	; 255
     546:	e4 91       	lpm	r30, Z
     548:	ec 93       	st	X, r30
     54a:	2f 5f       	subi	r18, 0xFF	; 255
     54c:	3f 4f       	sbci	r19, 0xFF	; 255
     54e:	33 70       	andi	r19, 0x03	; 3
     550:	30 93 25 02 	sts	0x0225, r19	; 0x800225 <__data_end+0x1>
     554:	20 93 24 02 	sts	0x0224, r18	; 0x800224 <__data_end>
     558:	4f 5f       	subi	r20, 0xFF	; 255
     55a:	5f 4f       	sbci	r21, 0xFF	; 255
     55c:	44 30       	cpi	r20, 0x04	; 4
     55e:	51 05       	cpc	r21, r1
     560:	0c f3       	brlt	.-62     	; 0x524 <__stack+0x25>
     562:	80 e0       	ldi	r24, 0x00	; 0
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	08 95       	ret
     568:	81 e0       	ldi	r24, 0x01	; 1
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	08 95       	ret

0000056e <oled_write_string_on_line>:
     56e:	ef 92       	push	r14
     570:	ff 92       	push	r15
     572:	1f 93       	push	r17
     574:	cf 93       	push	r28
     576:	df 93       	push	r29
     578:	48 30       	cpi	r20, 0x08	; 8
     57a:	20 f5       	brcc	.+72     	; 0x5c4 <oled_write_string_on_line+0x56>
     57c:	16 2f       	mov	r17, r22
     57e:	7c 01       	movw	r14, r24
     580:	20 e8       	ldi	r18, 0x80	; 128
     582:	42 9f       	mul	r20, r18
     584:	c0 01       	movw	r24, r0
     586:	11 24       	eor	r1, r1
     588:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <__data_end+0x1>
     58c:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <__data_end>
     590:	c0 e0       	ldi	r28, 0x00	; 0
     592:	d0 e0       	ldi	r29, 0x00	; 0
     594:	14 c0       	rjmp	.+40     	; 0x5be <oled_write_string_on_line+0x50>
     596:	21 2f       	mov	r18, r17
     598:	30 e0       	ldi	r19, 0x00	; 0
     59a:	c2 17       	cp	r28, r18
     59c:	d3 07       	cpc	r29, r19
     59e:	4c f4       	brge	.+18     	; 0x5b2 <oled_write_string_on_line+0x44>
     5a0:	60 e0       	ldi	r22, 0x00	; 0
     5a2:	70 e0       	ldi	r23, 0x00	; 0
     5a4:	f7 01       	movw	r30, r14
     5a6:	ec 0f       	add	r30, r28
     5a8:	fd 1f       	adc	r31, r29
     5aa:	80 81       	ld	r24, Z
     5ac:	0e 94 71 02 	call	0x4e2	; 0x4e2 <oled_write_char>
     5b0:	05 c0       	rjmp	.+10     	; 0x5bc <oled_write_string_on_line+0x4e>
     5b2:	60 e0       	ldi	r22, 0x00	; 0
     5b4:	70 e0       	ldi	r23, 0x00	; 0
     5b6:	80 e2       	ldi	r24, 0x20	; 32
     5b8:	0e 94 71 02 	call	0x4e2	; 0x4e2 <oled_write_char>
     5bc:	21 96       	adiw	r28, 0x01	; 1
     5be:	c0 38       	cpi	r28, 0x80	; 128
     5c0:	d1 05       	cpc	r29, r1
     5c2:	4c f3       	brlt	.-46     	; 0x596 <oled_write_string_on_line+0x28>
     5c4:	df 91       	pop	r29
     5c6:	cf 91       	pop	r28
     5c8:	1f 91       	pop	r17
     5ca:	ff 90       	pop	r15
     5cc:	ef 90       	pop	r14
     5ce:	08 95       	ret

000005d0 <oled_render>:
	
}

void oled_render()
{
     5d0:	cf 93       	push	r28
     5d2:	df 93       	push	r29
	/*
	SRAM 0x1800 - 0x1FFF
	*/
	//oled_fill_entire(0xff);
	current_adr = 0;
     5d4:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <__data_end+0x1>
     5d8:	10 92 24 02 	sts	0x0224, r1	; 0x800224 <__data_end>
	oled_goto_page(0);
     5dc:	80 e0       	ldi	r24, 0x00	; 0
     5de:	0e 94 63 02 	call	0x4c6	; 0x4c6 <oled_goto_page>
	oled_goto_col(0);
     5e2:	80 e0       	ldi	r24, 0x00	; 0
     5e4:	0e 94 69 02 	call	0x4d2	; 0x4d2 <oled_goto_col>
	for(int i = 0; i < 1024; i++){
     5e8:	c0 e0       	ldi	r28, 0x00	; 0
     5ea:	d0 e0       	ldi	r29, 0x00	; 0
     5ec:	16 c0       	rjmp	.+44     	; 0x61a <oled_render+0x4a>
		*oled_d_base = oled_sram_base[i];
     5ee:	fe 01       	movw	r30, r28
     5f0:	f4 5e       	subi	r31, 0xE4	; 228
     5f2:	80 81       	ld	r24, Z
     5f4:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xfd0>
		if (i % 128 == 0) oled_goto_page(i / 128);
     5f8:	ce 01       	movw	r24, r28
     5fa:	8f 77       	andi	r24, 0x7F	; 127
     5fc:	99 27       	eor	r25, r25
     5fe:	89 2b       	or	r24, r25
     600:	59 f4       	brne	.+22     	; 0x618 <oled_render+0x48>
     602:	ce 01       	movw	r24, r28
     604:	dd 23       	and	r29, r29
     606:	14 f4       	brge	.+4      	; 0x60c <oled_render+0x3c>
     608:	81 58       	subi	r24, 0x81	; 129
     60a:	9f 4f       	sbci	r25, 0xFF	; 255
     60c:	88 0f       	add	r24, r24
     60e:	89 2f       	mov	r24, r25
     610:	88 1f       	adc	r24, r24
     612:	99 0b       	sbc	r25, r25
     614:	0e 94 63 02 	call	0x4c6	; 0x4c6 <oled_goto_page>
	*/
	//oled_fill_entire(0xff);
	current_adr = 0;
	oled_goto_page(0);
	oled_goto_col(0);
	for(int i = 0; i < 1024; i++){
     618:	21 96       	adiw	r28, 0x01	; 1
     61a:	c1 15       	cp	r28, r1
     61c:	84 e0       	ldi	r24, 0x04	; 4
     61e:	d8 07       	cpc	r29, r24
     620:	34 f3       	brlt	.-52     	; 0x5ee <oled_render+0x1e>
		*oled_d_base = oled_sram_base[i];
		if (i % 128 == 0) oled_goto_page(i / 128);
	}
     622:	df 91       	pop	r29
     624:	cf 91       	pop	r28
     626:	08 95       	ret

00000628 <toggle_pin>:
     628:	68 30       	cpi	r22, 0x08	; 8
     62a:	08 f0       	brcs	.+2      	; 0x62e <toggle_pin+0x6>
     62c:	88 c0       	rjmp	.+272    	; 0x73e <toggle_pin+0x116>
     62e:	82 34       	cpi	r24, 0x42	; 66
     630:	51 f1       	breq	.+84     	; 0x686 <toggle_pin+0x5e>
     632:	18 f4       	brcc	.+6      	; 0x63a <toggle_pin+0x12>
     634:	81 34       	cpi	r24, 0x41	; 65
     636:	41 f0       	breq	.+16     	; 0x648 <toggle_pin+0x20>
     638:	08 95       	ret
     63a:	83 34       	cpi	r24, 0x43	; 67
     63c:	09 f4       	brne	.+2      	; 0x640 <toggle_pin+0x18>
     63e:	42 c0       	rjmp	.+132    	; 0x6c4 <toggle_pin+0x9c>
     640:	84 34       	cpi	r24, 0x44	; 68
     642:	09 f4       	brne	.+2      	; 0x646 <toggle_pin+0x1e>
     644:	5e c0       	rjmp	.+188    	; 0x702 <toggle_pin+0xda>
     646:	08 95       	ret
     648:	89 b3       	in	r24, 0x19	; 25
     64a:	28 2f       	mov	r18, r24
     64c:	30 e0       	ldi	r19, 0x00	; 0
     64e:	06 2e       	mov	r0, r22
     650:	02 c0       	rjmp	.+4      	; 0x656 <toggle_pin+0x2e>
     652:	35 95       	asr	r19
     654:	27 95       	ror	r18
     656:	0a 94       	dec	r0
     658:	e2 f7       	brpl	.-8      	; 0x652 <toggle_pin+0x2a>
     65a:	20 ff       	sbrs	r18, 0
     65c:	0a c0       	rjmp	.+20     	; 0x672 <toggle_pin+0x4a>
     65e:	21 e0       	ldi	r18, 0x01	; 1
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	02 c0       	rjmp	.+4      	; 0x668 <toggle_pin+0x40>
     664:	22 0f       	add	r18, r18
     666:	33 1f       	adc	r19, r19
     668:	6a 95       	dec	r22
     66a:	e2 f7       	brpl	.-8      	; 0x664 <toggle_pin+0x3c>
     66c:	20 95       	com	r18
     66e:	82 23       	and	r24, r18
     670:	08 c0       	rjmp	.+16     	; 0x682 <toggle_pin+0x5a>
     672:	21 e0       	ldi	r18, 0x01	; 1
     674:	30 e0       	ldi	r19, 0x00	; 0
     676:	02 c0       	rjmp	.+4      	; 0x67c <toggle_pin+0x54>
     678:	22 0f       	add	r18, r18
     67a:	33 1f       	adc	r19, r19
     67c:	6a 95       	dec	r22
     67e:	e2 f7       	brpl	.-8      	; 0x678 <toggle_pin+0x50>
     680:	82 2b       	or	r24, r18
     682:	8b bb       	out	0x1b, r24	; 27
     684:	08 95       	ret
     686:	86 b3       	in	r24, 0x16	; 22
     688:	28 2f       	mov	r18, r24
     68a:	30 e0       	ldi	r19, 0x00	; 0
     68c:	06 2e       	mov	r0, r22
     68e:	02 c0       	rjmp	.+4      	; 0x694 <toggle_pin+0x6c>
     690:	35 95       	asr	r19
     692:	27 95       	ror	r18
     694:	0a 94       	dec	r0
     696:	e2 f7       	brpl	.-8      	; 0x690 <toggle_pin+0x68>
     698:	20 ff       	sbrs	r18, 0
     69a:	0a c0       	rjmp	.+20     	; 0x6b0 <toggle_pin+0x88>
     69c:	21 e0       	ldi	r18, 0x01	; 1
     69e:	30 e0       	ldi	r19, 0x00	; 0
     6a0:	02 c0       	rjmp	.+4      	; 0x6a6 <toggle_pin+0x7e>
     6a2:	22 0f       	add	r18, r18
     6a4:	33 1f       	adc	r19, r19
     6a6:	6a 95       	dec	r22
     6a8:	e2 f7       	brpl	.-8      	; 0x6a2 <toggle_pin+0x7a>
     6aa:	20 95       	com	r18
     6ac:	82 23       	and	r24, r18
     6ae:	08 c0       	rjmp	.+16     	; 0x6c0 <toggle_pin+0x98>
     6b0:	21 e0       	ldi	r18, 0x01	; 1
     6b2:	30 e0       	ldi	r19, 0x00	; 0
     6b4:	02 c0       	rjmp	.+4      	; 0x6ba <toggle_pin+0x92>
     6b6:	22 0f       	add	r18, r18
     6b8:	33 1f       	adc	r19, r19
     6ba:	6a 95       	dec	r22
     6bc:	e2 f7       	brpl	.-8      	; 0x6b6 <toggle_pin+0x8e>
     6be:	82 2b       	or	r24, r18
     6c0:	88 bb       	out	0x18, r24	; 24
     6c2:	08 95       	ret
     6c4:	83 b3       	in	r24, 0x13	; 19
     6c6:	28 2f       	mov	r18, r24
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	06 2e       	mov	r0, r22
     6cc:	02 c0       	rjmp	.+4      	; 0x6d2 <toggle_pin+0xaa>
     6ce:	35 95       	asr	r19
     6d0:	27 95       	ror	r18
     6d2:	0a 94       	dec	r0
     6d4:	e2 f7       	brpl	.-8      	; 0x6ce <toggle_pin+0xa6>
     6d6:	20 ff       	sbrs	r18, 0
     6d8:	0a c0       	rjmp	.+20     	; 0x6ee <toggle_pin+0xc6>
     6da:	21 e0       	ldi	r18, 0x01	; 1
     6dc:	30 e0       	ldi	r19, 0x00	; 0
     6de:	02 c0       	rjmp	.+4      	; 0x6e4 <toggle_pin+0xbc>
     6e0:	22 0f       	add	r18, r18
     6e2:	33 1f       	adc	r19, r19
     6e4:	6a 95       	dec	r22
     6e6:	e2 f7       	brpl	.-8      	; 0x6e0 <toggle_pin+0xb8>
     6e8:	20 95       	com	r18
     6ea:	82 23       	and	r24, r18
     6ec:	08 c0       	rjmp	.+16     	; 0x6fe <toggle_pin+0xd6>
     6ee:	21 e0       	ldi	r18, 0x01	; 1
     6f0:	30 e0       	ldi	r19, 0x00	; 0
     6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <toggle_pin+0xd0>
     6f4:	22 0f       	add	r18, r18
     6f6:	33 1f       	adc	r19, r19
     6f8:	6a 95       	dec	r22
     6fa:	e2 f7       	brpl	.-8      	; 0x6f4 <toggle_pin+0xcc>
     6fc:	82 2b       	or	r24, r18
     6fe:	85 bb       	out	0x15, r24	; 21
     700:	08 95       	ret
     702:	80 b3       	in	r24, 0x10	; 16
     704:	28 2f       	mov	r18, r24
     706:	30 e0       	ldi	r19, 0x00	; 0
     708:	06 2e       	mov	r0, r22
     70a:	02 c0       	rjmp	.+4      	; 0x710 <toggle_pin+0xe8>
     70c:	35 95       	asr	r19
     70e:	27 95       	ror	r18
     710:	0a 94       	dec	r0
     712:	e2 f7       	brpl	.-8      	; 0x70c <toggle_pin+0xe4>
     714:	20 ff       	sbrs	r18, 0
     716:	0a c0       	rjmp	.+20     	; 0x72c <toggle_pin+0x104>
     718:	21 e0       	ldi	r18, 0x01	; 1
     71a:	30 e0       	ldi	r19, 0x00	; 0
     71c:	02 c0       	rjmp	.+4      	; 0x722 <toggle_pin+0xfa>
     71e:	22 0f       	add	r18, r18
     720:	33 1f       	adc	r19, r19
     722:	6a 95       	dec	r22
     724:	e2 f7       	brpl	.-8      	; 0x71e <toggle_pin+0xf6>
     726:	20 95       	com	r18
     728:	82 23       	and	r24, r18
     72a:	08 c0       	rjmp	.+16     	; 0x73c <toggle_pin+0x114>
     72c:	21 e0       	ldi	r18, 0x01	; 1
     72e:	30 e0       	ldi	r19, 0x00	; 0
     730:	02 c0       	rjmp	.+4      	; 0x736 <toggle_pin+0x10e>
     732:	22 0f       	add	r18, r18
     734:	33 1f       	adc	r19, r19
     736:	6a 95       	dec	r22
     738:	e2 f7       	brpl	.-8      	; 0x732 <toggle_pin+0x10a>
     73a:	82 2b       	or	r24, r18
     73c:	82 bb       	out	0x12, r24	; 18
     73e:	08 95       	ret

00000740 <USART_Init>:
// Following functions are taken from "Atmel AVR ATmega162 datasheet"

void USART_Init(unsigned int ubrr)
{
	/* set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     740:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
     742:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
     744:	88 e1       	ldi	r24, 0x18	; 24
     746:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0) | (1<<USBS0) | (3<<UCSZ00);
     748:	8e e8       	ldi	r24, 0x8E	; 142
     74a:	80 bd       	out	0x20, r24	; 32
     74c:	08 95       	ret

0000074e <USART_Transmit>:
}

int USART_Transmit (char data, FILE* file)
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0) ));
     74e:	5d 9b       	sbis	0x0b, 5	; 11
     750:	fe cf       	rjmp	.-4      	; 0x74e <USART_Transmit>
	
	/* Put data into buffer, sends the data */
	UDR0 = data;
     752:	8c b9       	out	0x0c, r24	; 12
	return 0;
}
     754:	80 e0       	ldi	r24, 0x00	; 0
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	08 95       	ret

0000075a <USART_Receive>:

int USART_Receive ( FILE* file )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) );
     75a:	5f 9b       	sbis	0x0b, 7	; 11
     75c:	fe cf       	rjmp	.-4      	; 0x75a <USART_Receive>
	
	/* Get and return received data from buffer */
	return UDR0;
     75e:	8c b1       	in	r24, 0x0c	; 12
}
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	08 95       	ret

00000764 <fdevopen>:
     764:	0f 93       	push	r16
     766:	1f 93       	push	r17
     768:	cf 93       	push	r28
     76a:	df 93       	push	r29
     76c:	00 97       	sbiw	r24, 0x00	; 0
     76e:	31 f4       	brne	.+12     	; 0x77c <fdevopen+0x18>
     770:	61 15       	cp	r22, r1
     772:	71 05       	cpc	r23, r1
     774:	19 f4       	brne	.+6      	; 0x77c <fdevopen+0x18>
     776:	80 e0       	ldi	r24, 0x00	; 0
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	3a c0       	rjmp	.+116    	; 0x7f0 <fdevopen+0x8c>
     77c:	8b 01       	movw	r16, r22
     77e:	ec 01       	movw	r28, r24
     780:	6e e0       	ldi	r22, 0x0E	; 14
     782:	70 e0       	ldi	r23, 0x00	; 0
     784:	81 e0       	ldi	r24, 0x01	; 1
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <calloc>
     78c:	fc 01       	movw	r30, r24
     78e:	89 2b       	or	r24, r25
     790:	91 f3       	breq	.-28     	; 0x776 <fdevopen+0x12>
     792:	80 e8       	ldi	r24, 0x80	; 128
     794:	83 83       	std	Z+3, r24	; 0x03
     796:	01 15       	cp	r16, r1
     798:	11 05       	cpc	r17, r1
     79a:	71 f0       	breq	.+28     	; 0x7b8 <fdevopen+0x54>
     79c:	13 87       	std	Z+11, r17	; 0x0b
     79e:	02 87       	std	Z+10, r16	; 0x0a
     7a0:	81 e8       	ldi	r24, 0x81	; 129
     7a2:	83 83       	std	Z+3, r24	; 0x03
     7a4:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <__iob>
     7a8:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <__iob+0x1>
     7ac:	89 2b       	or	r24, r25
     7ae:	21 f4       	brne	.+8      	; 0x7b8 <fdevopen+0x54>
     7b0:	f0 93 27 02 	sts	0x0227, r31	; 0x800227 <__iob+0x1>
     7b4:	e0 93 26 02 	sts	0x0226, r30	; 0x800226 <__iob>
     7b8:	20 97       	sbiw	r28, 0x00	; 0
     7ba:	c9 f0       	breq	.+50     	; 0x7ee <fdevopen+0x8a>
     7bc:	d1 87       	std	Z+9, r29	; 0x09
     7be:	c0 87       	std	Z+8, r28	; 0x08
     7c0:	83 81       	ldd	r24, Z+3	; 0x03
     7c2:	82 60       	ori	r24, 0x02	; 2
     7c4:	83 83       	std	Z+3, r24	; 0x03
     7c6:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <__iob+0x2>
     7ca:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <__iob+0x3>
     7ce:	89 2b       	or	r24, r25
     7d0:	71 f4       	brne	.+28     	; 0x7ee <fdevopen+0x8a>
     7d2:	f0 93 29 02 	sts	0x0229, r31	; 0x800229 <__iob+0x3>
     7d6:	e0 93 28 02 	sts	0x0228, r30	; 0x800228 <__iob+0x2>
     7da:	80 91 2a 02 	lds	r24, 0x022A	; 0x80022a <__iob+0x4>
     7de:	90 91 2b 02 	lds	r25, 0x022B	; 0x80022b <__iob+0x5>
     7e2:	89 2b       	or	r24, r25
     7e4:	21 f4       	brne	.+8      	; 0x7ee <fdevopen+0x8a>
     7e6:	f0 93 2b 02 	sts	0x022B, r31	; 0x80022b <__iob+0x5>
     7ea:	e0 93 2a 02 	sts	0x022A, r30	; 0x80022a <__iob+0x4>
     7ee:	cf 01       	movw	r24, r30
     7f0:	df 91       	pop	r29
     7f2:	cf 91       	pop	r28
     7f4:	1f 91       	pop	r17
     7f6:	0f 91       	pop	r16
     7f8:	08 95       	ret

000007fa <printf>:
     7fa:	a0 e0       	ldi	r26, 0x00	; 0
     7fc:	b0 e0       	ldi	r27, 0x00	; 0
     7fe:	e3 e0       	ldi	r30, 0x03	; 3
     800:	f4 e0       	ldi	r31, 0x04	; 4
     802:	0c 94 f8 07 	jmp	0xff0	; 0xff0 <__prologue_saves__+0x20>
     806:	ae 01       	movw	r20, r28
     808:	4b 5f       	subi	r20, 0xFB	; 251
     80a:	5f 4f       	sbci	r21, 0xFF	; 255
     80c:	fa 01       	movw	r30, r20
     80e:	61 91       	ld	r22, Z+
     810:	71 91       	ld	r23, Z+
     812:	af 01       	movw	r20, r30
     814:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <__iob+0x2>
     818:	90 91 29 02 	lds	r25, 0x0229	; 0x800229 <__iob+0x3>
     81c:	0e 94 13 04 	call	0x826	; 0x826 <vfprintf>
     820:	e2 e0       	ldi	r30, 0x02	; 2
     822:	0c 94 14 08 	jmp	0x1028	; 0x1028 <__epilogue_restores__+0x20>

00000826 <vfprintf>:
     826:	ab e0       	ldi	r26, 0x0B	; 11
     828:	b0 e0       	ldi	r27, 0x00	; 0
     82a:	e9 e1       	ldi	r30, 0x19	; 25
     82c:	f4 e0       	ldi	r31, 0x04	; 4
     82e:	0c 94 e8 07 	jmp	0xfd0	; 0xfd0 <__prologue_saves__>
     832:	6c 01       	movw	r12, r24
     834:	7b 01       	movw	r14, r22
     836:	8a 01       	movw	r16, r20
     838:	fc 01       	movw	r30, r24
     83a:	17 82       	std	Z+7, r1	; 0x07
     83c:	16 82       	std	Z+6, r1	; 0x06
     83e:	83 81       	ldd	r24, Z+3	; 0x03
     840:	81 ff       	sbrs	r24, 1
     842:	cc c1       	rjmp	.+920    	; 0xbdc <vfprintf+0x3b6>
     844:	ce 01       	movw	r24, r28
     846:	01 96       	adiw	r24, 0x01	; 1
     848:	3c 01       	movw	r6, r24
     84a:	f6 01       	movw	r30, r12
     84c:	93 81       	ldd	r25, Z+3	; 0x03
     84e:	f7 01       	movw	r30, r14
     850:	93 fd       	sbrc	r25, 3
     852:	85 91       	lpm	r24, Z+
     854:	93 ff       	sbrs	r25, 3
     856:	81 91       	ld	r24, Z+
     858:	7f 01       	movw	r14, r30
     85a:	88 23       	and	r24, r24
     85c:	09 f4       	brne	.+2      	; 0x860 <vfprintf+0x3a>
     85e:	ba c1       	rjmp	.+884    	; 0xbd4 <vfprintf+0x3ae>
     860:	85 32       	cpi	r24, 0x25	; 37
     862:	39 f4       	brne	.+14     	; 0x872 <vfprintf+0x4c>
     864:	93 fd       	sbrc	r25, 3
     866:	85 91       	lpm	r24, Z+
     868:	93 ff       	sbrs	r25, 3
     86a:	81 91       	ld	r24, Z+
     86c:	7f 01       	movw	r14, r30
     86e:	85 32       	cpi	r24, 0x25	; 37
     870:	29 f4       	brne	.+10     	; 0x87c <vfprintf+0x56>
     872:	b6 01       	movw	r22, r12
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	0e 94 4e 07 	call	0xe9c	; 0xe9c <fputc>
     87a:	e7 cf       	rjmp	.-50     	; 0x84a <vfprintf+0x24>
     87c:	91 2c       	mov	r9, r1
     87e:	21 2c       	mov	r2, r1
     880:	31 2c       	mov	r3, r1
     882:	ff e1       	ldi	r31, 0x1F	; 31
     884:	f3 15       	cp	r31, r3
     886:	d8 f0       	brcs	.+54     	; 0x8be <vfprintf+0x98>
     888:	8b 32       	cpi	r24, 0x2B	; 43
     88a:	79 f0       	breq	.+30     	; 0x8aa <vfprintf+0x84>
     88c:	38 f4       	brcc	.+14     	; 0x89c <vfprintf+0x76>
     88e:	80 32       	cpi	r24, 0x20	; 32
     890:	79 f0       	breq	.+30     	; 0x8b0 <vfprintf+0x8a>
     892:	83 32       	cpi	r24, 0x23	; 35
     894:	a1 f4       	brne	.+40     	; 0x8be <vfprintf+0x98>
     896:	23 2d       	mov	r18, r3
     898:	20 61       	ori	r18, 0x10	; 16
     89a:	1d c0       	rjmp	.+58     	; 0x8d6 <vfprintf+0xb0>
     89c:	8d 32       	cpi	r24, 0x2D	; 45
     89e:	61 f0       	breq	.+24     	; 0x8b8 <vfprintf+0x92>
     8a0:	80 33       	cpi	r24, 0x30	; 48
     8a2:	69 f4       	brne	.+26     	; 0x8be <vfprintf+0x98>
     8a4:	23 2d       	mov	r18, r3
     8a6:	21 60       	ori	r18, 0x01	; 1
     8a8:	16 c0       	rjmp	.+44     	; 0x8d6 <vfprintf+0xb0>
     8aa:	83 2d       	mov	r24, r3
     8ac:	82 60       	ori	r24, 0x02	; 2
     8ae:	38 2e       	mov	r3, r24
     8b0:	e3 2d       	mov	r30, r3
     8b2:	e4 60       	ori	r30, 0x04	; 4
     8b4:	3e 2e       	mov	r3, r30
     8b6:	2a c0       	rjmp	.+84     	; 0x90c <vfprintf+0xe6>
     8b8:	f3 2d       	mov	r31, r3
     8ba:	f8 60       	ori	r31, 0x08	; 8
     8bc:	1d c0       	rjmp	.+58     	; 0x8f8 <vfprintf+0xd2>
     8be:	37 fc       	sbrc	r3, 7
     8c0:	2d c0       	rjmp	.+90     	; 0x91c <vfprintf+0xf6>
     8c2:	20 ed       	ldi	r18, 0xD0	; 208
     8c4:	28 0f       	add	r18, r24
     8c6:	2a 30       	cpi	r18, 0x0A	; 10
     8c8:	40 f0       	brcs	.+16     	; 0x8da <vfprintf+0xb4>
     8ca:	8e 32       	cpi	r24, 0x2E	; 46
     8cc:	b9 f4       	brne	.+46     	; 0x8fc <vfprintf+0xd6>
     8ce:	36 fc       	sbrc	r3, 6
     8d0:	81 c1       	rjmp	.+770    	; 0xbd4 <vfprintf+0x3ae>
     8d2:	23 2d       	mov	r18, r3
     8d4:	20 64       	ori	r18, 0x40	; 64
     8d6:	32 2e       	mov	r3, r18
     8d8:	19 c0       	rjmp	.+50     	; 0x90c <vfprintf+0xe6>
     8da:	36 fe       	sbrs	r3, 6
     8dc:	06 c0       	rjmp	.+12     	; 0x8ea <vfprintf+0xc4>
     8de:	8a e0       	ldi	r24, 0x0A	; 10
     8e0:	98 9e       	mul	r9, r24
     8e2:	20 0d       	add	r18, r0
     8e4:	11 24       	eor	r1, r1
     8e6:	92 2e       	mov	r9, r18
     8e8:	11 c0       	rjmp	.+34     	; 0x90c <vfprintf+0xe6>
     8ea:	ea e0       	ldi	r30, 0x0A	; 10
     8ec:	2e 9e       	mul	r2, r30
     8ee:	20 0d       	add	r18, r0
     8f0:	11 24       	eor	r1, r1
     8f2:	22 2e       	mov	r2, r18
     8f4:	f3 2d       	mov	r31, r3
     8f6:	f0 62       	ori	r31, 0x20	; 32
     8f8:	3f 2e       	mov	r3, r31
     8fa:	08 c0       	rjmp	.+16     	; 0x90c <vfprintf+0xe6>
     8fc:	8c 36       	cpi	r24, 0x6C	; 108
     8fe:	21 f4       	brne	.+8      	; 0x908 <vfprintf+0xe2>
     900:	83 2d       	mov	r24, r3
     902:	80 68       	ori	r24, 0x80	; 128
     904:	38 2e       	mov	r3, r24
     906:	02 c0       	rjmp	.+4      	; 0x90c <vfprintf+0xe6>
     908:	88 36       	cpi	r24, 0x68	; 104
     90a:	41 f4       	brne	.+16     	; 0x91c <vfprintf+0xf6>
     90c:	f7 01       	movw	r30, r14
     90e:	93 fd       	sbrc	r25, 3
     910:	85 91       	lpm	r24, Z+
     912:	93 ff       	sbrs	r25, 3
     914:	81 91       	ld	r24, Z+
     916:	7f 01       	movw	r14, r30
     918:	81 11       	cpse	r24, r1
     91a:	b3 cf       	rjmp	.-154    	; 0x882 <vfprintf+0x5c>
     91c:	98 2f       	mov	r25, r24
     91e:	9f 7d       	andi	r25, 0xDF	; 223
     920:	95 54       	subi	r25, 0x45	; 69
     922:	93 30       	cpi	r25, 0x03	; 3
     924:	28 f4       	brcc	.+10     	; 0x930 <vfprintf+0x10a>
     926:	0c 5f       	subi	r16, 0xFC	; 252
     928:	1f 4f       	sbci	r17, 0xFF	; 255
     92a:	9f e3       	ldi	r25, 0x3F	; 63
     92c:	99 83       	std	Y+1, r25	; 0x01
     92e:	0d c0       	rjmp	.+26     	; 0x94a <vfprintf+0x124>
     930:	83 36       	cpi	r24, 0x63	; 99
     932:	31 f0       	breq	.+12     	; 0x940 <vfprintf+0x11a>
     934:	83 37       	cpi	r24, 0x73	; 115
     936:	71 f0       	breq	.+28     	; 0x954 <vfprintf+0x12e>
     938:	83 35       	cpi	r24, 0x53	; 83
     93a:	09 f0       	breq	.+2      	; 0x93e <vfprintf+0x118>
     93c:	59 c0       	rjmp	.+178    	; 0x9f0 <vfprintf+0x1ca>
     93e:	21 c0       	rjmp	.+66     	; 0x982 <vfprintf+0x15c>
     940:	f8 01       	movw	r30, r16
     942:	80 81       	ld	r24, Z
     944:	89 83       	std	Y+1, r24	; 0x01
     946:	0e 5f       	subi	r16, 0xFE	; 254
     948:	1f 4f       	sbci	r17, 0xFF	; 255
     94a:	88 24       	eor	r8, r8
     94c:	83 94       	inc	r8
     94e:	91 2c       	mov	r9, r1
     950:	53 01       	movw	r10, r6
     952:	13 c0       	rjmp	.+38     	; 0x97a <vfprintf+0x154>
     954:	28 01       	movw	r4, r16
     956:	f2 e0       	ldi	r31, 0x02	; 2
     958:	4f 0e       	add	r4, r31
     95a:	51 1c       	adc	r5, r1
     95c:	f8 01       	movw	r30, r16
     95e:	a0 80       	ld	r10, Z
     960:	b1 80       	ldd	r11, Z+1	; 0x01
     962:	36 fe       	sbrs	r3, 6
     964:	03 c0       	rjmp	.+6      	; 0x96c <vfprintf+0x146>
     966:	69 2d       	mov	r22, r9
     968:	70 e0       	ldi	r23, 0x00	; 0
     96a:	02 c0       	rjmp	.+4      	; 0x970 <vfprintf+0x14a>
     96c:	6f ef       	ldi	r22, 0xFF	; 255
     96e:	7f ef       	ldi	r23, 0xFF	; 255
     970:	c5 01       	movw	r24, r10
     972:	0e 94 43 07 	call	0xe86	; 0xe86 <strnlen>
     976:	4c 01       	movw	r8, r24
     978:	82 01       	movw	r16, r4
     97a:	f3 2d       	mov	r31, r3
     97c:	ff 77       	andi	r31, 0x7F	; 127
     97e:	3f 2e       	mov	r3, r31
     980:	16 c0       	rjmp	.+44     	; 0x9ae <vfprintf+0x188>
     982:	28 01       	movw	r4, r16
     984:	22 e0       	ldi	r18, 0x02	; 2
     986:	42 0e       	add	r4, r18
     988:	51 1c       	adc	r5, r1
     98a:	f8 01       	movw	r30, r16
     98c:	a0 80       	ld	r10, Z
     98e:	b1 80       	ldd	r11, Z+1	; 0x01
     990:	36 fe       	sbrs	r3, 6
     992:	03 c0       	rjmp	.+6      	; 0x99a <vfprintf+0x174>
     994:	69 2d       	mov	r22, r9
     996:	70 e0       	ldi	r23, 0x00	; 0
     998:	02 c0       	rjmp	.+4      	; 0x99e <vfprintf+0x178>
     99a:	6f ef       	ldi	r22, 0xFF	; 255
     99c:	7f ef       	ldi	r23, 0xFF	; 255
     99e:	c5 01       	movw	r24, r10
     9a0:	0e 94 31 07 	call	0xe62	; 0xe62 <strnlen_P>
     9a4:	4c 01       	movw	r8, r24
     9a6:	f3 2d       	mov	r31, r3
     9a8:	f0 68       	ori	r31, 0x80	; 128
     9aa:	3f 2e       	mov	r3, r31
     9ac:	82 01       	movw	r16, r4
     9ae:	33 fc       	sbrc	r3, 3
     9b0:	1b c0       	rjmp	.+54     	; 0x9e8 <vfprintf+0x1c2>
     9b2:	82 2d       	mov	r24, r2
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	88 16       	cp	r8, r24
     9b8:	99 06       	cpc	r9, r25
     9ba:	b0 f4       	brcc	.+44     	; 0x9e8 <vfprintf+0x1c2>
     9bc:	b6 01       	movw	r22, r12
     9be:	80 e2       	ldi	r24, 0x20	; 32
     9c0:	90 e0       	ldi	r25, 0x00	; 0
     9c2:	0e 94 4e 07 	call	0xe9c	; 0xe9c <fputc>
     9c6:	2a 94       	dec	r2
     9c8:	f4 cf       	rjmp	.-24     	; 0x9b2 <vfprintf+0x18c>
     9ca:	f5 01       	movw	r30, r10
     9cc:	37 fc       	sbrc	r3, 7
     9ce:	85 91       	lpm	r24, Z+
     9d0:	37 fe       	sbrs	r3, 7
     9d2:	81 91       	ld	r24, Z+
     9d4:	5f 01       	movw	r10, r30
     9d6:	b6 01       	movw	r22, r12
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	0e 94 4e 07 	call	0xe9c	; 0xe9c <fputc>
     9de:	21 10       	cpse	r2, r1
     9e0:	2a 94       	dec	r2
     9e2:	21 e0       	ldi	r18, 0x01	; 1
     9e4:	82 1a       	sub	r8, r18
     9e6:	91 08       	sbc	r9, r1
     9e8:	81 14       	cp	r8, r1
     9ea:	91 04       	cpc	r9, r1
     9ec:	71 f7       	brne	.-36     	; 0x9ca <vfprintf+0x1a4>
     9ee:	e8 c0       	rjmp	.+464    	; 0xbc0 <vfprintf+0x39a>
     9f0:	84 36       	cpi	r24, 0x64	; 100
     9f2:	11 f0       	breq	.+4      	; 0x9f8 <vfprintf+0x1d2>
     9f4:	89 36       	cpi	r24, 0x69	; 105
     9f6:	41 f5       	brne	.+80     	; 0xa48 <vfprintf+0x222>
     9f8:	f8 01       	movw	r30, r16
     9fa:	37 fe       	sbrs	r3, 7
     9fc:	07 c0       	rjmp	.+14     	; 0xa0c <vfprintf+0x1e6>
     9fe:	60 81       	ld	r22, Z
     a00:	71 81       	ldd	r23, Z+1	; 0x01
     a02:	82 81       	ldd	r24, Z+2	; 0x02
     a04:	93 81       	ldd	r25, Z+3	; 0x03
     a06:	0c 5f       	subi	r16, 0xFC	; 252
     a08:	1f 4f       	sbci	r17, 0xFF	; 255
     a0a:	08 c0       	rjmp	.+16     	; 0xa1c <vfprintf+0x1f6>
     a0c:	60 81       	ld	r22, Z
     a0e:	71 81       	ldd	r23, Z+1	; 0x01
     a10:	07 2e       	mov	r0, r23
     a12:	00 0c       	add	r0, r0
     a14:	88 0b       	sbc	r24, r24
     a16:	99 0b       	sbc	r25, r25
     a18:	0e 5f       	subi	r16, 0xFE	; 254
     a1a:	1f 4f       	sbci	r17, 0xFF	; 255
     a1c:	f3 2d       	mov	r31, r3
     a1e:	ff 76       	andi	r31, 0x6F	; 111
     a20:	3f 2e       	mov	r3, r31
     a22:	97 ff       	sbrs	r25, 7
     a24:	09 c0       	rjmp	.+18     	; 0xa38 <vfprintf+0x212>
     a26:	90 95       	com	r25
     a28:	80 95       	com	r24
     a2a:	70 95       	com	r23
     a2c:	61 95       	neg	r22
     a2e:	7f 4f       	sbci	r23, 0xFF	; 255
     a30:	8f 4f       	sbci	r24, 0xFF	; 255
     a32:	9f 4f       	sbci	r25, 0xFF	; 255
     a34:	f0 68       	ori	r31, 0x80	; 128
     a36:	3f 2e       	mov	r3, r31
     a38:	2a e0       	ldi	r18, 0x0A	; 10
     a3a:	30 e0       	ldi	r19, 0x00	; 0
     a3c:	a3 01       	movw	r20, r6
     a3e:	0e 94 8a 07 	call	0xf14	; 0xf14 <__ultoa_invert>
     a42:	88 2e       	mov	r8, r24
     a44:	86 18       	sub	r8, r6
     a46:	45 c0       	rjmp	.+138    	; 0xad2 <vfprintf+0x2ac>
     a48:	85 37       	cpi	r24, 0x75	; 117
     a4a:	31 f4       	brne	.+12     	; 0xa58 <vfprintf+0x232>
     a4c:	23 2d       	mov	r18, r3
     a4e:	2f 7e       	andi	r18, 0xEF	; 239
     a50:	b2 2e       	mov	r11, r18
     a52:	2a e0       	ldi	r18, 0x0A	; 10
     a54:	30 e0       	ldi	r19, 0x00	; 0
     a56:	25 c0       	rjmp	.+74     	; 0xaa2 <vfprintf+0x27c>
     a58:	93 2d       	mov	r25, r3
     a5a:	99 7f       	andi	r25, 0xF9	; 249
     a5c:	b9 2e       	mov	r11, r25
     a5e:	8f 36       	cpi	r24, 0x6F	; 111
     a60:	c1 f0       	breq	.+48     	; 0xa92 <vfprintf+0x26c>
     a62:	18 f4       	brcc	.+6      	; 0xa6a <vfprintf+0x244>
     a64:	88 35       	cpi	r24, 0x58	; 88
     a66:	79 f0       	breq	.+30     	; 0xa86 <vfprintf+0x260>
     a68:	b5 c0       	rjmp	.+362    	; 0xbd4 <vfprintf+0x3ae>
     a6a:	80 37       	cpi	r24, 0x70	; 112
     a6c:	19 f0       	breq	.+6      	; 0xa74 <vfprintf+0x24e>
     a6e:	88 37       	cpi	r24, 0x78	; 120
     a70:	21 f0       	breq	.+8      	; 0xa7a <vfprintf+0x254>
     a72:	b0 c0       	rjmp	.+352    	; 0xbd4 <vfprintf+0x3ae>
     a74:	e9 2f       	mov	r30, r25
     a76:	e0 61       	ori	r30, 0x10	; 16
     a78:	be 2e       	mov	r11, r30
     a7a:	b4 fe       	sbrs	r11, 4
     a7c:	0d c0       	rjmp	.+26     	; 0xa98 <vfprintf+0x272>
     a7e:	fb 2d       	mov	r31, r11
     a80:	f4 60       	ori	r31, 0x04	; 4
     a82:	bf 2e       	mov	r11, r31
     a84:	09 c0       	rjmp	.+18     	; 0xa98 <vfprintf+0x272>
     a86:	34 fe       	sbrs	r3, 4
     a88:	0a c0       	rjmp	.+20     	; 0xa9e <vfprintf+0x278>
     a8a:	29 2f       	mov	r18, r25
     a8c:	26 60       	ori	r18, 0x06	; 6
     a8e:	b2 2e       	mov	r11, r18
     a90:	06 c0       	rjmp	.+12     	; 0xa9e <vfprintf+0x278>
     a92:	28 e0       	ldi	r18, 0x08	; 8
     a94:	30 e0       	ldi	r19, 0x00	; 0
     a96:	05 c0       	rjmp	.+10     	; 0xaa2 <vfprintf+0x27c>
     a98:	20 e1       	ldi	r18, 0x10	; 16
     a9a:	30 e0       	ldi	r19, 0x00	; 0
     a9c:	02 c0       	rjmp	.+4      	; 0xaa2 <vfprintf+0x27c>
     a9e:	20 e1       	ldi	r18, 0x10	; 16
     aa0:	32 e0       	ldi	r19, 0x02	; 2
     aa2:	f8 01       	movw	r30, r16
     aa4:	b7 fe       	sbrs	r11, 7
     aa6:	07 c0       	rjmp	.+14     	; 0xab6 <vfprintf+0x290>
     aa8:	60 81       	ld	r22, Z
     aaa:	71 81       	ldd	r23, Z+1	; 0x01
     aac:	82 81       	ldd	r24, Z+2	; 0x02
     aae:	93 81       	ldd	r25, Z+3	; 0x03
     ab0:	0c 5f       	subi	r16, 0xFC	; 252
     ab2:	1f 4f       	sbci	r17, 0xFF	; 255
     ab4:	06 c0       	rjmp	.+12     	; 0xac2 <vfprintf+0x29c>
     ab6:	60 81       	ld	r22, Z
     ab8:	71 81       	ldd	r23, Z+1	; 0x01
     aba:	80 e0       	ldi	r24, 0x00	; 0
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	0e 5f       	subi	r16, 0xFE	; 254
     ac0:	1f 4f       	sbci	r17, 0xFF	; 255
     ac2:	a3 01       	movw	r20, r6
     ac4:	0e 94 8a 07 	call	0xf14	; 0xf14 <__ultoa_invert>
     ac8:	88 2e       	mov	r8, r24
     aca:	86 18       	sub	r8, r6
     acc:	fb 2d       	mov	r31, r11
     ace:	ff 77       	andi	r31, 0x7F	; 127
     ad0:	3f 2e       	mov	r3, r31
     ad2:	36 fe       	sbrs	r3, 6
     ad4:	0d c0       	rjmp	.+26     	; 0xaf0 <vfprintf+0x2ca>
     ad6:	23 2d       	mov	r18, r3
     ad8:	2e 7f       	andi	r18, 0xFE	; 254
     ada:	a2 2e       	mov	r10, r18
     adc:	89 14       	cp	r8, r9
     ade:	58 f4       	brcc	.+22     	; 0xaf6 <vfprintf+0x2d0>
     ae0:	34 fe       	sbrs	r3, 4
     ae2:	0b c0       	rjmp	.+22     	; 0xafa <vfprintf+0x2d4>
     ae4:	32 fc       	sbrc	r3, 2
     ae6:	09 c0       	rjmp	.+18     	; 0xafa <vfprintf+0x2d4>
     ae8:	83 2d       	mov	r24, r3
     aea:	8e 7e       	andi	r24, 0xEE	; 238
     aec:	a8 2e       	mov	r10, r24
     aee:	05 c0       	rjmp	.+10     	; 0xafa <vfprintf+0x2d4>
     af0:	b8 2c       	mov	r11, r8
     af2:	a3 2c       	mov	r10, r3
     af4:	03 c0       	rjmp	.+6      	; 0xafc <vfprintf+0x2d6>
     af6:	b8 2c       	mov	r11, r8
     af8:	01 c0       	rjmp	.+2      	; 0xafc <vfprintf+0x2d6>
     afa:	b9 2c       	mov	r11, r9
     afc:	a4 fe       	sbrs	r10, 4
     afe:	0f c0       	rjmp	.+30     	; 0xb1e <vfprintf+0x2f8>
     b00:	fe 01       	movw	r30, r28
     b02:	e8 0d       	add	r30, r8
     b04:	f1 1d       	adc	r31, r1
     b06:	80 81       	ld	r24, Z
     b08:	80 33       	cpi	r24, 0x30	; 48
     b0a:	21 f4       	brne	.+8      	; 0xb14 <vfprintf+0x2ee>
     b0c:	9a 2d       	mov	r25, r10
     b0e:	99 7e       	andi	r25, 0xE9	; 233
     b10:	a9 2e       	mov	r10, r25
     b12:	09 c0       	rjmp	.+18     	; 0xb26 <vfprintf+0x300>
     b14:	a2 fe       	sbrs	r10, 2
     b16:	06 c0       	rjmp	.+12     	; 0xb24 <vfprintf+0x2fe>
     b18:	b3 94       	inc	r11
     b1a:	b3 94       	inc	r11
     b1c:	04 c0       	rjmp	.+8      	; 0xb26 <vfprintf+0x300>
     b1e:	8a 2d       	mov	r24, r10
     b20:	86 78       	andi	r24, 0x86	; 134
     b22:	09 f0       	breq	.+2      	; 0xb26 <vfprintf+0x300>
     b24:	b3 94       	inc	r11
     b26:	a3 fc       	sbrc	r10, 3
     b28:	11 c0       	rjmp	.+34     	; 0xb4c <vfprintf+0x326>
     b2a:	a0 fe       	sbrs	r10, 0
     b2c:	06 c0       	rjmp	.+12     	; 0xb3a <vfprintf+0x314>
     b2e:	b2 14       	cp	r11, r2
     b30:	88 f4       	brcc	.+34     	; 0xb54 <vfprintf+0x32e>
     b32:	28 0c       	add	r2, r8
     b34:	92 2c       	mov	r9, r2
     b36:	9b 18       	sub	r9, r11
     b38:	0e c0       	rjmp	.+28     	; 0xb56 <vfprintf+0x330>
     b3a:	b2 14       	cp	r11, r2
     b3c:	60 f4       	brcc	.+24     	; 0xb56 <vfprintf+0x330>
     b3e:	b6 01       	movw	r22, r12
     b40:	80 e2       	ldi	r24, 0x20	; 32
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	0e 94 4e 07 	call	0xe9c	; 0xe9c <fputc>
     b48:	b3 94       	inc	r11
     b4a:	f7 cf       	rjmp	.-18     	; 0xb3a <vfprintf+0x314>
     b4c:	b2 14       	cp	r11, r2
     b4e:	18 f4       	brcc	.+6      	; 0xb56 <vfprintf+0x330>
     b50:	2b 18       	sub	r2, r11
     b52:	02 c0       	rjmp	.+4      	; 0xb58 <vfprintf+0x332>
     b54:	98 2c       	mov	r9, r8
     b56:	21 2c       	mov	r2, r1
     b58:	a4 fe       	sbrs	r10, 4
     b5a:	10 c0       	rjmp	.+32     	; 0xb7c <vfprintf+0x356>
     b5c:	b6 01       	movw	r22, r12
     b5e:	80 e3       	ldi	r24, 0x30	; 48
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	0e 94 4e 07 	call	0xe9c	; 0xe9c <fputc>
     b66:	a2 fe       	sbrs	r10, 2
     b68:	17 c0       	rjmp	.+46     	; 0xb98 <vfprintf+0x372>
     b6a:	a1 fc       	sbrc	r10, 1
     b6c:	03 c0       	rjmp	.+6      	; 0xb74 <vfprintf+0x34e>
     b6e:	88 e7       	ldi	r24, 0x78	; 120
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	02 c0       	rjmp	.+4      	; 0xb78 <vfprintf+0x352>
     b74:	88 e5       	ldi	r24, 0x58	; 88
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	b6 01       	movw	r22, r12
     b7a:	0c c0       	rjmp	.+24     	; 0xb94 <vfprintf+0x36e>
     b7c:	8a 2d       	mov	r24, r10
     b7e:	86 78       	andi	r24, 0x86	; 134
     b80:	59 f0       	breq	.+22     	; 0xb98 <vfprintf+0x372>
     b82:	a1 fe       	sbrs	r10, 1
     b84:	02 c0       	rjmp	.+4      	; 0xb8a <vfprintf+0x364>
     b86:	8b e2       	ldi	r24, 0x2B	; 43
     b88:	01 c0       	rjmp	.+2      	; 0xb8c <vfprintf+0x366>
     b8a:	80 e2       	ldi	r24, 0x20	; 32
     b8c:	a7 fc       	sbrc	r10, 7
     b8e:	8d e2       	ldi	r24, 0x2D	; 45
     b90:	b6 01       	movw	r22, r12
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	0e 94 4e 07 	call	0xe9c	; 0xe9c <fputc>
     b98:	89 14       	cp	r8, r9
     b9a:	38 f4       	brcc	.+14     	; 0xbaa <vfprintf+0x384>
     b9c:	b6 01       	movw	r22, r12
     b9e:	80 e3       	ldi	r24, 0x30	; 48
     ba0:	90 e0       	ldi	r25, 0x00	; 0
     ba2:	0e 94 4e 07 	call	0xe9c	; 0xe9c <fputc>
     ba6:	9a 94       	dec	r9
     ba8:	f7 cf       	rjmp	.-18     	; 0xb98 <vfprintf+0x372>
     baa:	8a 94       	dec	r8
     bac:	f3 01       	movw	r30, r6
     bae:	e8 0d       	add	r30, r8
     bb0:	f1 1d       	adc	r31, r1
     bb2:	80 81       	ld	r24, Z
     bb4:	b6 01       	movw	r22, r12
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	0e 94 4e 07 	call	0xe9c	; 0xe9c <fputc>
     bbc:	81 10       	cpse	r8, r1
     bbe:	f5 cf       	rjmp	.-22     	; 0xbaa <vfprintf+0x384>
     bc0:	22 20       	and	r2, r2
     bc2:	09 f4       	brne	.+2      	; 0xbc6 <vfprintf+0x3a0>
     bc4:	42 ce       	rjmp	.-892    	; 0x84a <vfprintf+0x24>
     bc6:	b6 01       	movw	r22, r12
     bc8:	80 e2       	ldi	r24, 0x20	; 32
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	0e 94 4e 07 	call	0xe9c	; 0xe9c <fputc>
     bd0:	2a 94       	dec	r2
     bd2:	f6 cf       	rjmp	.-20     	; 0xbc0 <vfprintf+0x39a>
     bd4:	f6 01       	movw	r30, r12
     bd6:	86 81       	ldd	r24, Z+6	; 0x06
     bd8:	97 81       	ldd	r25, Z+7	; 0x07
     bda:	02 c0       	rjmp	.+4      	; 0xbe0 <vfprintf+0x3ba>
     bdc:	8f ef       	ldi	r24, 0xFF	; 255
     bde:	9f ef       	ldi	r25, 0xFF	; 255
     be0:	2b 96       	adiw	r28, 0x0b	; 11
     be2:	e2 e1       	ldi	r30, 0x12	; 18
     be4:	0c 94 04 08 	jmp	0x1008	; 0x1008 <__epilogue_restores__>

00000be8 <calloc>:
     be8:	0f 93       	push	r16
     bea:	1f 93       	push	r17
     bec:	cf 93       	push	r28
     bee:	df 93       	push	r29
     bf0:	86 9f       	mul	r24, r22
     bf2:	80 01       	movw	r16, r0
     bf4:	87 9f       	mul	r24, r23
     bf6:	10 0d       	add	r17, r0
     bf8:	96 9f       	mul	r25, r22
     bfa:	10 0d       	add	r17, r0
     bfc:	11 24       	eor	r1, r1
     bfe:	c8 01       	movw	r24, r16
     c00:	0e 94 10 06 	call	0xc20	; 0xc20 <malloc>
     c04:	ec 01       	movw	r28, r24
     c06:	00 97       	sbiw	r24, 0x00	; 0
     c08:	29 f0       	breq	.+10     	; 0xc14 <calloc+0x2c>
     c0a:	a8 01       	movw	r20, r16
     c0c:	60 e0       	ldi	r22, 0x00	; 0
     c0e:	70 e0       	ldi	r23, 0x00	; 0
     c10:	0e 94 3c 07 	call	0xe78	; 0xe78 <memset>
     c14:	ce 01       	movw	r24, r28
     c16:	df 91       	pop	r29
     c18:	cf 91       	pop	r28
     c1a:	1f 91       	pop	r17
     c1c:	0f 91       	pop	r16
     c1e:	08 95       	ret

00000c20 <malloc>:
     c20:	0f 93       	push	r16
     c22:	1f 93       	push	r17
     c24:	cf 93       	push	r28
     c26:	df 93       	push	r29
     c28:	82 30       	cpi	r24, 0x02	; 2
     c2a:	91 05       	cpc	r25, r1
     c2c:	10 f4       	brcc	.+4      	; 0xc32 <malloc+0x12>
     c2e:	82 e0       	ldi	r24, 0x02	; 2
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	e0 91 2e 02 	lds	r30, 0x022E	; 0x80022e <__flp>
     c36:	f0 91 2f 02 	lds	r31, 0x022F	; 0x80022f <__flp+0x1>
     c3a:	20 e0       	ldi	r18, 0x00	; 0
     c3c:	30 e0       	ldi	r19, 0x00	; 0
     c3e:	a0 e0       	ldi	r26, 0x00	; 0
     c40:	b0 e0       	ldi	r27, 0x00	; 0
     c42:	30 97       	sbiw	r30, 0x00	; 0
     c44:	19 f1       	breq	.+70     	; 0xc8c <malloc+0x6c>
     c46:	40 81       	ld	r20, Z
     c48:	51 81       	ldd	r21, Z+1	; 0x01
     c4a:	02 81       	ldd	r16, Z+2	; 0x02
     c4c:	13 81       	ldd	r17, Z+3	; 0x03
     c4e:	48 17       	cp	r20, r24
     c50:	59 07       	cpc	r21, r25
     c52:	c8 f0       	brcs	.+50     	; 0xc86 <malloc+0x66>
     c54:	84 17       	cp	r24, r20
     c56:	95 07       	cpc	r25, r21
     c58:	69 f4       	brne	.+26     	; 0xc74 <malloc+0x54>
     c5a:	10 97       	sbiw	r26, 0x00	; 0
     c5c:	31 f0       	breq	.+12     	; 0xc6a <malloc+0x4a>
     c5e:	12 96       	adiw	r26, 0x02	; 2
     c60:	0c 93       	st	X, r16
     c62:	12 97       	sbiw	r26, 0x02	; 2
     c64:	13 96       	adiw	r26, 0x03	; 3
     c66:	1c 93       	st	X, r17
     c68:	27 c0       	rjmp	.+78     	; 0xcb8 <malloc+0x98>
     c6a:	00 93 2e 02 	sts	0x022E, r16	; 0x80022e <__flp>
     c6e:	10 93 2f 02 	sts	0x022F, r17	; 0x80022f <__flp+0x1>
     c72:	22 c0       	rjmp	.+68     	; 0xcb8 <malloc+0x98>
     c74:	21 15       	cp	r18, r1
     c76:	31 05       	cpc	r19, r1
     c78:	19 f0       	breq	.+6      	; 0xc80 <malloc+0x60>
     c7a:	42 17       	cp	r20, r18
     c7c:	53 07       	cpc	r21, r19
     c7e:	18 f4       	brcc	.+6      	; 0xc86 <malloc+0x66>
     c80:	9a 01       	movw	r18, r20
     c82:	bd 01       	movw	r22, r26
     c84:	ef 01       	movw	r28, r30
     c86:	df 01       	movw	r26, r30
     c88:	f8 01       	movw	r30, r16
     c8a:	db cf       	rjmp	.-74     	; 0xc42 <malloc+0x22>
     c8c:	21 15       	cp	r18, r1
     c8e:	31 05       	cpc	r19, r1
     c90:	f9 f0       	breq	.+62     	; 0xcd0 <malloc+0xb0>
     c92:	28 1b       	sub	r18, r24
     c94:	39 0b       	sbc	r19, r25
     c96:	24 30       	cpi	r18, 0x04	; 4
     c98:	31 05       	cpc	r19, r1
     c9a:	80 f4       	brcc	.+32     	; 0xcbc <malloc+0x9c>
     c9c:	8a 81       	ldd	r24, Y+2	; 0x02
     c9e:	9b 81       	ldd	r25, Y+3	; 0x03
     ca0:	61 15       	cp	r22, r1
     ca2:	71 05       	cpc	r23, r1
     ca4:	21 f0       	breq	.+8      	; 0xcae <malloc+0x8e>
     ca6:	fb 01       	movw	r30, r22
     ca8:	93 83       	std	Z+3, r25	; 0x03
     caa:	82 83       	std	Z+2, r24	; 0x02
     cac:	04 c0       	rjmp	.+8      	; 0xcb6 <malloc+0x96>
     cae:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <__flp+0x1>
     cb2:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <__flp>
     cb6:	fe 01       	movw	r30, r28
     cb8:	32 96       	adiw	r30, 0x02	; 2
     cba:	44 c0       	rjmp	.+136    	; 0xd44 <malloc+0x124>
     cbc:	fe 01       	movw	r30, r28
     cbe:	e2 0f       	add	r30, r18
     cc0:	f3 1f       	adc	r31, r19
     cc2:	81 93       	st	Z+, r24
     cc4:	91 93       	st	Z+, r25
     cc6:	22 50       	subi	r18, 0x02	; 2
     cc8:	31 09       	sbc	r19, r1
     cca:	39 83       	std	Y+1, r19	; 0x01
     ccc:	28 83       	st	Y, r18
     cce:	3a c0       	rjmp	.+116    	; 0xd44 <malloc+0x124>
     cd0:	20 91 2c 02 	lds	r18, 0x022C	; 0x80022c <__brkval>
     cd4:	30 91 2d 02 	lds	r19, 0x022D	; 0x80022d <__brkval+0x1>
     cd8:	23 2b       	or	r18, r19
     cda:	41 f4       	brne	.+16     	; 0xcec <malloc+0xcc>
     cdc:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     ce0:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     ce4:	30 93 2d 02 	sts	0x022D, r19	; 0x80022d <__brkval+0x1>
     ce8:	20 93 2c 02 	sts	0x022C, r18	; 0x80022c <__brkval>
     cec:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     cf0:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     cf4:	21 15       	cp	r18, r1
     cf6:	31 05       	cpc	r19, r1
     cf8:	41 f4       	brne	.+16     	; 0xd0a <malloc+0xea>
     cfa:	2d b7       	in	r18, 0x3d	; 61
     cfc:	3e b7       	in	r19, 0x3e	; 62
     cfe:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     d02:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     d06:	24 1b       	sub	r18, r20
     d08:	35 0b       	sbc	r19, r21
     d0a:	e0 91 2c 02 	lds	r30, 0x022C	; 0x80022c <__brkval>
     d0e:	f0 91 2d 02 	lds	r31, 0x022D	; 0x80022d <__brkval+0x1>
     d12:	e2 17       	cp	r30, r18
     d14:	f3 07       	cpc	r31, r19
     d16:	a0 f4       	brcc	.+40     	; 0xd40 <malloc+0x120>
     d18:	2e 1b       	sub	r18, r30
     d1a:	3f 0b       	sbc	r19, r31
     d1c:	28 17       	cp	r18, r24
     d1e:	39 07       	cpc	r19, r25
     d20:	78 f0       	brcs	.+30     	; 0xd40 <malloc+0x120>
     d22:	ac 01       	movw	r20, r24
     d24:	4e 5f       	subi	r20, 0xFE	; 254
     d26:	5f 4f       	sbci	r21, 0xFF	; 255
     d28:	24 17       	cp	r18, r20
     d2a:	35 07       	cpc	r19, r21
     d2c:	48 f0       	brcs	.+18     	; 0xd40 <malloc+0x120>
     d2e:	4e 0f       	add	r20, r30
     d30:	5f 1f       	adc	r21, r31
     d32:	50 93 2d 02 	sts	0x022D, r21	; 0x80022d <__brkval+0x1>
     d36:	40 93 2c 02 	sts	0x022C, r20	; 0x80022c <__brkval>
     d3a:	81 93       	st	Z+, r24
     d3c:	91 93       	st	Z+, r25
     d3e:	02 c0       	rjmp	.+4      	; 0xd44 <malloc+0x124>
     d40:	e0 e0       	ldi	r30, 0x00	; 0
     d42:	f0 e0       	ldi	r31, 0x00	; 0
     d44:	cf 01       	movw	r24, r30
     d46:	df 91       	pop	r29
     d48:	cf 91       	pop	r28
     d4a:	1f 91       	pop	r17
     d4c:	0f 91       	pop	r16
     d4e:	08 95       	ret

00000d50 <free>:
     d50:	cf 93       	push	r28
     d52:	df 93       	push	r29
     d54:	00 97       	sbiw	r24, 0x00	; 0
     d56:	09 f4       	brne	.+2      	; 0xd5a <free+0xa>
     d58:	81 c0       	rjmp	.+258    	; 0xe5c <free+0x10c>
     d5a:	fc 01       	movw	r30, r24
     d5c:	32 97       	sbiw	r30, 0x02	; 2
     d5e:	13 82       	std	Z+3, r1	; 0x03
     d60:	12 82       	std	Z+2, r1	; 0x02
     d62:	a0 91 2e 02 	lds	r26, 0x022E	; 0x80022e <__flp>
     d66:	b0 91 2f 02 	lds	r27, 0x022F	; 0x80022f <__flp+0x1>
     d6a:	10 97       	sbiw	r26, 0x00	; 0
     d6c:	81 f4       	brne	.+32     	; 0xd8e <free+0x3e>
     d6e:	20 81       	ld	r18, Z
     d70:	31 81       	ldd	r19, Z+1	; 0x01
     d72:	82 0f       	add	r24, r18
     d74:	93 1f       	adc	r25, r19
     d76:	20 91 2c 02 	lds	r18, 0x022C	; 0x80022c <__brkval>
     d7a:	30 91 2d 02 	lds	r19, 0x022D	; 0x80022d <__brkval+0x1>
     d7e:	28 17       	cp	r18, r24
     d80:	39 07       	cpc	r19, r25
     d82:	51 f5       	brne	.+84     	; 0xdd8 <free+0x88>
     d84:	f0 93 2d 02 	sts	0x022D, r31	; 0x80022d <__brkval+0x1>
     d88:	e0 93 2c 02 	sts	0x022C, r30	; 0x80022c <__brkval>
     d8c:	67 c0       	rjmp	.+206    	; 0xe5c <free+0x10c>
     d8e:	ed 01       	movw	r28, r26
     d90:	20 e0       	ldi	r18, 0x00	; 0
     d92:	30 e0       	ldi	r19, 0x00	; 0
     d94:	ce 17       	cp	r28, r30
     d96:	df 07       	cpc	r29, r31
     d98:	40 f4       	brcc	.+16     	; 0xdaa <free+0x5a>
     d9a:	4a 81       	ldd	r20, Y+2	; 0x02
     d9c:	5b 81       	ldd	r21, Y+3	; 0x03
     d9e:	9e 01       	movw	r18, r28
     da0:	41 15       	cp	r20, r1
     da2:	51 05       	cpc	r21, r1
     da4:	f1 f0       	breq	.+60     	; 0xde2 <free+0x92>
     da6:	ea 01       	movw	r28, r20
     da8:	f5 cf       	rjmp	.-22     	; 0xd94 <free+0x44>
     daa:	d3 83       	std	Z+3, r29	; 0x03
     dac:	c2 83       	std	Z+2, r28	; 0x02
     dae:	40 81       	ld	r20, Z
     db0:	51 81       	ldd	r21, Z+1	; 0x01
     db2:	84 0f       	add	r24, r20
     db4:	95 1f       	adc	r25, r21
     db6:	c8 17       	cp	r28, r24
     db8:	d9 07       	cpc	r29, r25
     dba:	59 f4       	brne	.+22     	; 0xdd2 <free+0x82>
     dbc:	88 81       	ld	r24, Y
     dbe:	99 81       	ldd	r25, Y+1	; 0x01
     dc0:	84 0f       	add	r24, r20
     dc2:	95 1f       	adc	r25, r21
     dc4:	02 96       	adiw	r24, 0x02	; 2
     dc6:	91 83       	std	Z+1, r25	; 0x01
     dc8:	80 83       	st	Z, r24
     dca:	8a 81       	ldd	r24, Y+2	; 0x02
     dcc:	9b 81       	ldd	r25, Y+3	; 0x03
     dce:	93 83       	std	Z+3, r25	; 0x03
     dd0:	82 83       	std	Z+2, r24	; 0x02
     dd2:	21 15       	cp	r18, r1
     dd4:	31 05       	cpc	r19, r1
     dd6:	29 f4       	brne	.+10     	; 0xde2 <free+0x92>
     dd8:	f0 93 2f 02 	sts	0x022F, r31	; 0x80022f <__flp+0x1>
     ddc:	e0 93 2e 02 	sts	0x022E, r30	; 0x80022e <__flp>
     de0:	3d c0       	rjmp	.+122    	; 0xe5c <free+0x10c>
     de2:	e9 01       	movw	r28, r18
     de4:	fb 83       	std	Y+3, r31	; 0x03
     de6:	ea 83       	std	Y+2, r30	; 0x02
     de8:	49 91       	ld	r20, Y+
     dea:	59 91       	ld	r21, Y+
     dec:	c4 0f       	add	r28, r20
     dee:	d5 1f       	adc	r29, r21
     df0:	ec 17       	cp	r30, r28
     df2:	fd 07       	cpc	r31, r29
     df4:	61 f4       	brne	.+24     	; 0xe0e <free+0xbe>
     df6:	80 81       	ld	r24, Z
     df8:	91 81       	ldd	r25, Z+1	; 0x01
     dfa:	84 0f       	add	r24, r20
     dfc:	95 1f       	adc	r25, r21
     dfe:	02 96       	adiw	r24, 0x02	; 2
     e00:	e9 01       	movw	r28, r18
     e02:	99 83       	std	Y+1, r25	; 0x01
     e04:	88 83       	st	Y, r24
     e06:	82 81       	ldd	r24, Z+2	; 0x02
     e08:	93 81       	ldd	r25, Z+3	; 0x03
     e0a:	9b 83       	std	Y+3, r25	; 0x03
     e0c:	8a 83       	std	Y+2, r24	; 0x02
     e0e:	e0 e0       	ldi	r30, 0x00	; 0
     e10:	f0 e0       	ldi	r31, 0x00	; 0
     e12:	12 96       	adiw	r26, 0x02	; 2
     e14:	8d 91       	ld	r24, X+
     e16:	9c 91       	ld	r25, X
     e18:	13 97       	sbiw	r26, 0x03	; 3
     e1a:	00 97       	sbiw	r24, 0x00	; 0
     e1c:	19 f0       	breq	.+6      	; 0xe24 <free+0xd4>
     e1e:	fd 01       	movw	r30, r26
     e20:	dc 01       	movw	r26, r24
     e22:	f7 cf       	rjmp	.-18     	; 0xe12 <free+0xc2>
     e24:	8d 91       	ld	r24, X+
     e26:	9c 91       	ld	r25, X
     e28:	11 97       	sbiw	r26, 0x01	; 1
     e2a:	9d 01       	movw	r18, r26
     e2c:	2e 5f       	subi	r18, 0xFE	; 254
     e2e:	3f 4f       	sbci	r19, 0xFF	; 255
     e30:	82 0f       	add	r24, r18
     e32:	93 1f       	adc	r25, r19
     e34:	20 91 2c 02 	lds	r18, 0x022C	; 0x80022c <__brkval>
     e38:	30 91 2d 02 	lds	r19, 0x022D	; 0x80022d <__brkval+0x1>
     e3c:	28 17       	cp	r18, r24
     e3e:	39 07       	cpc	r19, r25
     e40:	69 f4       	brne	.+26     	; 0xe5c <free+0x10c>
     e42:	30 97       	sbiw	r30, 0x00	; 0
     e44:	29 f4       	brne	.+10     	; 0xe50 <free+0x100>
     e46:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <__flp+0x1>
     e4a:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <__flp>
     e4e:	02 c0       	rjmp	.+4      	; 0xe54 <free+0x104>
     e50:	13 82       	std	Z+3, r1	; 0x03
     e52:	12 82       	std	Z+2, r1	; 0x02
     e54:	b0 93 2d 02 	sts	0x022D, r27	; 0x80022d <__brkval+0x1>
     e58:	a0 93 2c 02 	sts	0x022C, r26	; 0x80022c <__brkval>
     e5c:	df 91       	pop	r29
     e5e:	cf 91       	pop	r28
     e60:	08 95       	ret

00000e62 <strnlen_P>:
     e62:	fc 01       	movw	r30, r24
     e64:	05 90       	lpm	r0, Z+
     e66:	61 50       	subi	r22, 0x01	; 1
     e68:	70 40       	sbci	r23, 0x00	; 0
     e6a:	01 10       	cpse	r0, r1
     e6c:	d8 f7       	brcc	.-10     	; 0xe64 <strnlen_P+0x2>
     e6e:	80 95       	com	r24
     e70:	90 95       	com	r25
     e72:	8e 0f       	add	r24, r30
     e74:	9f 1f       	adc	r25, r31
     e76:	08 95       	ret

00000e78 <memset>:
     e78:	dc 01       	movw	r26, r24
     e7a:	01 c0       	rjmp	.+2      	; 0xe7e <memset+0x6>
     e7c:	6d 93       	st	X+, r22
     e7e:	41 50       	subi	r20, 0x01	; 1
     e80:	50 40       	sbci	r21, 0x00	; 0
     e82:	e0 f7       	brcc	.-8      	; 0xe7c <memset+0x4>
     e84:	08 95       	ret

00000e86 <strnlen>:
     e86:	fc 01       	movw	r30, r24
     e88:	61 50       	subi	r22, 0x01	; 1
     e8a:	70 40       	sbci	r23, 0x00	; 0
     e8c:	01 90       	ld	r0, Z+
     e8e:	01 10       	cpse	r0, r1
     e90:	d8 f7       	brcc	.-10     	; 0xe88 <strnlen+0x2>
     e92:	80 95       	com	r24
     e94:	90 95       	com	r25
     e96:	8e 0f       	add	r24, r30
     e98:	9f 1f       	adc	r25, r31
     e9a:	08 95       	ret

00000e9c <fputc>:
     e9c:	0f 93       	push	r16
     e9e:	1f 93       	push	r17
     ea0:	cf 93       	push	r28
     ea2:	df 93       	push	r29
     ea4:	fb 01       	movw	r30, r22
     ea6:	23 81       	ldd	r18, Z+3	; 0x03
     ea8:	21 fd       	sbrc	r18, 1
     eaa:	03 c0       	rjmp	.+6      	; 0xeb2 <fputc+0x16>
     eac:	8f ef       	ldi	r24, 0xFF	; 255
     eae:	9f ef       	ldi	r25, 0xFF	; 255
     eb0:	2c c0       	rjmp	.+88     	; 0xf0a <fputc+0x6e>
     eb2:	22 ff       	sbrs	r18, 2
     eb4:	16 c0       	rjmp	.+44     	; 0xee2 <fputc+0x46>
     eb6:	46 81       	ldd	r20, Z+6	; 0x06
     eb8:	57 81       	ldd	r21, Z+7	; 0x07
     eba:	24 81       	ldd	r18, Z+4	; 0x04
     ebc:	35 81       	ldd	r19, Z+5	; 0x05
     ebe:	42 17       	cp	r20, r18
     ec0:	53 07       	cpc	r21, r19
     ec2:	44 f4       	brge	.+16     	; 0xed4 <fputc+0x38>
     ec4:	a0 81       	ld	r26, Z
     ec6:	b1 81       	ldd	r27, Z+1	; 0x01
     ec8:	9d 01       	movw	r18, r26
     eca:	2f 5f       	subi	r18, 0xFF	; 255
     ecc:	3f 4f       	sbci	r19, 0xFF	; 255
     ece:	31 83       	std	Z+1, r19	; 0x01
     ed0:	20 83       	st	Z, r18
     ed2:	8c 93       	st	X, r24
     ed4:	26 81       	ldd	r18, Z+6	; 0x06
     ed6:	37 81       	ldd	r19, Z+7	; 0x07
     ed8:	2f 5f       	subi	r18, 0xFF	; 255
     eda:	3f 4f       	sbci	r19, 0xFF	; 255
     edc:	37 83       	std	Z+7, r19	; 0x07
     ede:	26 83       	std	Z+6, r18	; 0x06
     ee0:	14 c0       	rjmp	.+40     	; 0xf0a <fputc+0x6e>
     ee2:	8b 01       	movw	r16, r22
     ee4:	ec 01       	movw	r28, r24
     ee6:	fb 01       	movw	r30, r22
     ee8:	00 84       	ldd	r0, Z+8	; 0x08
     eea:	f1 85       	ldd	r31, Z+9	; 0x09
     eec:	e0 2d       	mov	r30, r0
     eee:	09 95       	icall
     ef0:	89 2b       	or	r24, r25
     ef2:	e1 f6       	brne	.-72     	; 0xeac <fputc+0x10>
     ef4:	d8 01       	movw	r26, r16
     ef6:	16 96       	adiw	r26, 0x06	; 6
     ef8:	8d 91       	ld	r24, X+
     efa:	9c 91       	ld	r25, X
     efc:	17 97       	sbiw	r26, 0x07	; 7
     efe:	01 96       	adiw	r24, 0x01	; 1
     f00:	17 96       	adiw	r26, 0x07	; 7
     f02:	9c 93       	st	X, r25
     f04:	8e 93       	st	-X, r24
     f06:	16 97       	sbiw	r26, 0x06	; 6
     f08:	ce 01       	movw	r24, r28
     f0a:	df 91       	pop	r29
     f0c:	cf 91       	pop	r28
     f0e:	1f 91       	pop	r17
     f10:	0f 91       	pop	r16
     f12:	08 95       	ret

00000f14 <__ultoa_invert>:
     f14:	fa 01       	movw	r30, r20
     f16:	aa 27       	eor	r26, r26
     f18:	28 30       	cpi	r18, 0x08	; 8
     f1a:	51 f1       	breq	.+84     	; 0xf70 <__ultoa_invert+0x5c>
     f1c:	20 31       	cpi	r18, 0x10	; 16
     f1e:	81 f1       	breq	.+96     	; 0xf80 <__ultoa_invert+0x6c>
     f20:	e8 94       	clt
     f22:	6f 93       	push	r22
     f24:	6e 7f       	andi	r22, 0xFE	; 254
     f26:	6e 5f       	subi	r22, 0xFE	; 254
     f28:	7f 4f       	sbci	r23, 0xFF	; 255
     f2a:	8f 4f       	sbci	r24, 0xFF	; 255
     f2c:	9f 4f       	sbci	r25, 0xFF	; 255
     f2e:	af 4f       	sbci	r26, 0xFF	; 255
     f30:	b1 e0       	ldi	r27, 0x01	; 1
     f32:	3e d0       	rcall	.+124    	; 0xfb0 <__ultoa_invert+0x9c>
     f34:	b4 e0       	ldi	r27, 0x04	; 4
     f36:	3c d0       	rcall	.+120    	; 0xfb0 <__ultoa_invert+0x9c>
     f38:	67 0f       	add	r22, r23
     f3a:	78 1f       	adc	r23, r24
     f3c:	89 1f       	adc	r24, r25
     f3e:	9a 1f       	adc	r25, r26
     f40:	a1 1d       	adc	r26, r1
     f42:	68 0f       	add	r22, r24
     f44:	79 1f       	adc	r23, r25
     f46:	8a 1f       	adc	r24, r26
     f48:	91 1d       	adc	r25, r1
     f4a:	a1 1d       	adc	r26, r1
     f4c:	6a 0f       	add	r22, r26
     f4e:	71 1d       	adc	r23, r1
     f50:	81 1d       	adc	r24, r1
     f52:	91 1d       	adc	r25, r1
     f54:	a1 1d       	adc	r26, r1
     f56:	20 d0       	rcall	.+64     	; 0xf98 <__ultoa_invert+0x84>
     f58:	09 f4       	brne	.+2      	; 0xf5c <__ultoa_invert+0x48>
     f5a:	68 94       	set
     f5c:	3f 91       	pop	r19
     f5e:	2a e0       	ldi	r18, 0x0A	; 10
     f60:	26 9f       	mul	r18, r22
     f62:	11 24       	eor	r1, r1
     f64:	30 19       	sub	r19, r0
     f66:	30 5d       	subi	r19, 0xD0	; 208
     f68:	31 93       	st	Z+, r19
     f6a:	de f6       	brtc	.-74     	; 0xf22 <__ultoa_invert+0xe>
     f6c:	cf 01       	movw	r24, r30
     f6e:	08 95       	ret
     f70:	46 2f       	mov	r20, r22
     f72:	47 70       	andi	r20, 0x07	; 7
     f74:	40 5d       	subi	r20, 0xD0	; 208
     f76:	41 93       	st	Z+, r20
     f78:	b3 e0       	ldi	r27, 0x03	; 3
     f7a:	0f d0       	rcall	.+30     	; 0xf9a <__ultoa_invert+0x86>
     f7c:	c9 f7       	brne	.-14     	; 0xf70 <__ultoa_invert+0x5c>
     f7e:	f6 cf       	rjmp	.-20     	; 0xf6c <__ultoa_invert+0x58>
     f80:	46 2f       	mov	r20, r22
     f82:	4f 70       	andi	r20, 0x0F	; 15
     f84:	40 5d       	subi	r20, 0xD0	; 208
     f86:	4a 33       	cpi	r20, 0x3A	; 58
     f88:	18 f0       	brcs	.+6      	; 0xf90 <__ultoa_invert+0x7c>
     f8a:	49 5d       	subi	r20, 0xD9	; 217
     f8c:	31 fd       	sbrc	r19, 1
     f8e:	40 52       	subi	r20, 0x20	; 32
     f90:	41 93       	st	Z+, r20
     f92:	02 d0       	rcall	.+4      	; 0xf98 <__ultoa_invert+0x84>
     f94:	a9 f7       	brne	.-22     	; 0xf80 <__ultoa_invert+0x6c>
     f96:	ea cf       	rjmp	.-44     	; 0xf6c <__ultoa_invert+0x58>
     f98:	b4 e0       	ldi	r27, 0x04	; 4
     f9a:	a6 95       	lsr	r26
     f9c:	97 95       	ror	r25
     f9e:	87 95       	ror	r24
     fa0:	77 95       	ror	r23
     fa2:	67 95       	ror	r22
     fa4:	ba 95       	dec	r27
     fa6:	c9 f7       	brne	.-14     	; 0xf9a <__ultoa_invert+0x86>
     fa8:	00 97       	sbiw	r24, 0x00	; 0
     faa:	61 05       	cpc	r22, r1
     fac:	71 05       	cpc	r23, r1
     fae:	08 95       	ret
     fb0:	9b 01       	movw	r18, r22
     fb2:	ac 01       	movw	r20, r24
     fb4:	0a 2e       	mov	r0, r26
     fb6:	06 94       	lsr	r0
     fb8:	57 95       	ror	r21
     fba:	47 95       	ror	r20
     fbc:	37 95       	ror	r19
     fbe:	27 95       	ror	r18
     fc0:	ba 95       	dec	r27
     fc2:	c9 f7       	brne	.-14     	; 0xfb6 <__ultoa_invert+0xa2>
     fc4:	62 0f       	add	r22, r18
     fc6:	73 1f       	adc	r23, r19
     fc8:	84 1f       	adc	r24, r20
     fca:	95 1f       	adc	r25, r21
     fcc:	a0 1d       	adc	r26, r0
     fce:	08 95       	ret

00000fd0 <__prologue_saves__>:
     fd0:	2f 92       	push	r2
     fd2:	3f 92       	push	r3
     fd4:	4f 92       	push	r4
     fd6:	5f 92       	push	r5
     fd8:	6f 92       	push	r6
     fda:	7f 92       	push	r7
     fdc:	8f 92       	push	r8
     fde:	9f 92       	push	r9
     fe0:	af 92       	push	r10
     fe2:	bf 92       	push	r11
     fe4:	cf 92       	push	r12
     fe6:	df 92       	push	r13
     fe8:	ef 92       	push	r14
     fea:	ff 92       	push	r15
     fec:	0f 93       	push	r16
     fee:	1f 93       	push	r17
     ff0:	cf 93       	push	r28
     ff2:	df 93       	push	r29
     ff4:	cd b7       	in	r28, 0x3d	; 61
     ff6:	de b7       	in	r29, 0x3e	; 62
     ff8:	ca 1b       	sub	r28, r26
     ffa:	db 0b       	sbc	r29, r27
     ffc:	0f b6       	in	r0, 0x3f	; 63
     ffe:	f8 94       	cli
    1000:	de bf       	out	0x3e, r29	; 62
    1002:	0f be       	out	0x3f, r0	; 63
    1004:	cd bf       	out	0x3d, r28	; 61
    1006:	09 94       	ijmp

00001008 <__epilogue_restores__>:
    1008:	2a 88       	ldd	r2, Y+18	; 0x12
    100a:	39 88       	ldd	r3, Y+17	; 0x11
    100c:	48 88       	ldd	r4, Y+16	; 0x10
    100e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1010:	6e 84       	ldd	r6, Y+14	; 0x0e
    1012:	7d 84       	ldd	r7, Y+13	; 0x0d
    1014:	8c 84       	ldd	r8, Y+12	; 0x0c
    1016:	9b 84       	ldd	r9, Y+11	; 0x0b
    1018:	aa 84       	ldd	r10, Y+10	; 0x0a
    101a:	b9 84       	ldd	r11, Y+9	; 0x09
    101c:	c8 84       	ldd	r12, Y+8	; 0x08
    101e:	df 80       	ldd	r13, Y+7	; 0x07
    1020:	ee 80       	ldd	r14, Y+6	; 0x06
    1022:	fd 80       	ldd	r15, Y+5	; 0x05
    1024:	0c 81       	ldd	r16, Y+4	; 0x04
    1026:	1b 81       	ldd	r17, Y+3	; 0x03
    1028:	aa 81       	ldd	r26, Y+2	; 0x02
    102a:	b9 81       	ldd	r27, Y+1	; 0x01
    102c:	ce 0f       	add	r28, r30
    102e:	d1 1d       	adc	r29, r1
    1030:	0f b6       	in	r0, 0x3f	; 63
    1032:	f8 94       	cli
    1034:	de bf       	out	0x3e, r29	; 62
    1036:	0f be       	out	0x3f, r0	; 63
    1038:	cd bf       	out	0x3d, r28	; 61
    103a:	ed 01       	movw	r28, r26
    103c:	08 95       	ret

0000103e <_exit>:
    103e:	f8 94       	cli

00001040 <__stop_program>:
    1040:	ff cf       	rjmp	.-2      	; 0x1040 <__stop_program>
