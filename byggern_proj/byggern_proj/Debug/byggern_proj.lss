
byggern_proj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000019c  00800100  000014e8  0000157c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014e8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  0080029c  0080029c  00001718  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001718  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001774  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000260  00000000  00000000  000017b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002de3  00000000  00000000  00001a10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d6b  00000000  00000000  000047f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000012f9  00000000  00000000  0000555e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000668  00000000  00000000  00006858  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009d8  00000000  00000000  00006ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000114b  00000000  00000000  00007898  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000238  00000000  00000000  000089e3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f6 00 	jmp	0x1ec	; 0x1ec <__ctors_end>
       4:	0c 94 1a 03 	jmp	0x634	; 0x634 <__vector_1>
       8:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
       c:	0c 94 aa 03 	jmp	0x754	; 0x754 <__vector_3>
      10:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      14:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      18:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      1c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      20:	0c 94 d4 03 	jmp	0x7a8	; 0x7a8 <__vector_8>
      24:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      28:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      2c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      30:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      34:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      38:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      3c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      40:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      44:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      48:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      4c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      50:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      54:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      58:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      5c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      60:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      64:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      68:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>
      6c:	0c 94 13 01 	jmp	0x226	; 0x226 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	00 00       	nop
      74:	00 5c       	subi	r16, 0xC0	; 192
      76:	00 00       	nop
      78:	0c 00       	.word	0x000c	; ????
      7a:	0c 00       	.word	0x000c	; ????
      7c:	7c 28       	or	r7, r12
      7e:	7c 28       	or	r7, r12
      80:	58 dc       	rcall	.-1872   	; 0xfffff932 <__eeprom_end+0xff7ef932>
      82:	68 00       	.word	0x0068	; ????
      84:	24 10       	cpse	r2, r4
      86:	48 00       	.word	0x0048	; ????
      88:	28 54       	subi	r18, 0x48	; 72
      8a:	28 40       	sbci	r18, 0x08	; 8
      8c:	00 0c       	add	r0, r0
      8e:	00 00       	nop
      90:	00 78       	andi	r16, 0x80	; 128
      92:	84 00       	.word	0x0084	; ????
      94:	84 78       	andi	r24, 0x84	; 132
      96:	00 00       	nop
      98:	54 38       	cpi	r21, 0x84	; 132
      9a:	54 00       	.word	0x0054	; ????
      9c:	10 7c       	andi	r17, 0xC0	; 192
      9e:	10 00       	.word	0x0010	; ????
      a0:	80 40       	sbci	r24, 0x00	; 0
      a2:	00 00       	nop
      a4:	10 10       	cpse	r1, r0
      a6:	10 00       	.word	0x0010	; ????
      a8:	00 40       	sbci	r16, 0x00	; 0
      aa:	00 00       	nop
      ac:	60 10       	cpse	r6, r0
      ae:	0c 00       	.word	0x000c	; ????
      b0:	38 54       	subi	r19, 0x48	; 72
      b2:	38 00       	.word	0x0038	; ????
      b4:	48 7c       	andi	r20, 0xC8	; 200
      b6:	40 00       	.word	0x0040	; ????
      b8:	48 64       	ori	r20, 0x48	; 72
      ba:	58 00       	.word	0x0058	; ????
      bc:	44 54       	subi	r20, 0x44	; 68
      be:	2c 00       	.word	0x002c	; ????
      c0:	1c 10       	cpse	r1, r12
      c2:	7c 00       	.word	0x007c	; ????
      c4:	5c 54       	subi	r21, 0x4C	; 76
      c6:	24 00       	.word	0x0024	; ????
      c8:	38 54       	subi	r19, 0x48	; 72
      ca:	24 00       	.word	0x0024	; ????
      cc:	64 14       	cp	r6, r4
      ce:	0c 00       	.word	0x000c	; ????
      d0:	68 54       	subi	r22, 0x48	; 72
      d2:	2c 00       	.word	0x002c	; ????
      d4:	48 54       	subi	r20, 0x48	; 72
      d6:	38 00       	.word	0x0038	; ????
      d8:	00 48       	sbci	r16, 0x80	; 128
      da:	00 00       	nop
      dc:	80 48       	sbci	r24, 0x80	; 128
      de:	00 00       	nop
      e0:	10 28       	or	r1, r0
      e2:	44 00       	.word	0x0044	; ????
      e4:	28 28       	or	r2, r8
      e6:	28 00       	.word	0x0028	; ????
      e8:	44 28       	or	r4, r4
      ea:	10 00       	.word	0x0010	; ????
      ec:	04 54       	subi	r16, 0x44	; 68
      ee:	08 00       	.word	0x0008	; ????
      f0:	38 44       	sbci	r19, 0x48	; 72
      f2:	5c 00       	.word	0x005c	; ????
      f4:	78 14       	cp	r7, r8
      f6:	78 00       	.word	0x0078	; ????
      f8:	7c 54       	subi	r23, 0x4C	; 76
      fa:	28 00       	.word	0x0028	; ????
      fc:	38 44       	sbci	r19, 0x48	; 72
      fe:	28 00       	.word	0x0028	; ????
     100:	7c 44       	sbci	r23, 0x4C	; 76
     102:	38 00       	.word	0x0038	; ????
     104:	7c 54       	subi	r23, 0x4C	; 76
     106:	44 00       	.word	0x0044	; ????
     108:	7c 14       	cp	r7, r12
     10a:	04 00       	.word	0x0004	; ????
     10c:	38 44       	sbci	r19, 0x48	; 72
     10e:	74 00       	.word	0x0074	; ????
     110:	7c 10       	cpse	r7, r12
     112:	7c 00       	.word	0x007c	; ????
     114:	44 7c       	andi	r20, 0xC4	; 196
     116:	44 00       	.word	0x0044	; ????
     118:	20 40       	sbci	r18, 0x00	; 0
     11a:	3c 00       	.word	0x003c	; ????
     11c:	7c 10       	cpse	r7, r12
     11e:	6c 00       	.word	0x006c	; ????
     120:	7c 40       	sbci	r23, 0x0C	; 12
     122:	40 00       	.word	0x0040	; ????
     124:	7c 18       	sub	r7, r12
     126:	7c 00       	.word	0x007c	; ????
     128:	78 10       	cpse	r7, r8
     12a:	3c 00       	.word	0x003c	; ????
     12c:	38 44       	sbci	r19, 0x48	; 72
     12e:	38 00       	.word	0x0038	; ????
     130:	7c 14       	cp	r7, r12
     132:	08 00       	.word	0x0008	; ????
     134:	38 44       	sbci	r19, 0x48	; 72
     136:	b8 00       	.word	0x00b8	; ????
     138:	7c 14       	cp	r7, r12
     13a:	68 00       	.word	0x0068	; ????
     13c:	48 54       	subi	r20, 0x48	; 72
     13e:	24 00       	.word	0x0024	; ????
     140:	04 7c       	andi	r16, 0xC4	; 196
     142:	04 00       	.word	0x0004	; ????
     144:	7c 40       	sbci	r23, 0x0C	; 12
     146:	7c 00       	.word	0x007c	; ????
     148:	3c 60       	ori	r19, 0x0C	; 12
     14a:	3c 00       	.word	0x003c	; ????
     14c:	7c 30       	cpi	r23, 0x0C	; 12
     14e:	7c 00       	.word	0x007c	; ????
     150:	6c 10       	cpse	r6, r12
     152:	6c 00       	.word	0x006c	; ????
     154:	0c 70       	andi	r16, 0x0C	; 12
     156:	0c 00       	.word	0x000c	; ????
     158:	64 54       	subi	r22, 0x44	; 68
     15a:	4c 00       	.word	0x004c	; ????
     15c:	00 7c       	andi	r16, 0xC0	; 192
     15e:	44 00       	.word	0x0044	; ????
     160:	0c 10       	cpse	r0, r12
     162:	60 00       	.word	0x0060	; ????
     164:	44 7c       	andi	r20, 0xC4	; 196
     166:	00 00       	nop
     168:	08 04       	cpc	r0, r8
     16a:	08 00       	.word	0x0008	; ????
     16c:	80 80       	ld	r8, Z
     16e:	80 00       	.word	0x0080	; ????
     170:	00 04       	cpc	r0, r0
     172:	08 00       	.word	0x0008	; ????
     174:	30 48       	sbci	r19, 0x80	; 128
     176:	78 00       	.word	0x0078	; ????
     178:	7c 48       	sbci	r23, 0x8C	; 140
     17a:	30 00       	.word	0x0030	; ????
     17c:	30 48       	sbci	r19, 0x80	; 128
     17e:	48 00       	.word	0x0048	; ????
     180:	30 48       	sbci	r19, 0x80	; 128
     182:	7c 00       	.word	0x007c	; ????
     184:	30 68       	ori	r19, 0x80	; 128
     186:	50 00       	.word	0x0050	; ????
     188:	10 78       	andi	r17, 0x80	; 128
     18a:	14 00       	.word	0x0014	; ????
     18c:	90 a8       	ldd	r9, Z+48	; 0x30
     18e:	78 00       	.word	0x0078	; ????
     190:	7c 08       	sbc	r7, r12
     192:	70 00       	.word	0x0070	; ????
     194:	50 74       	andi	r21, 0x40	; 64
     196:	40 00       	.word	0x0040	; ????
     198:	80 80       	ld	r8, Z
     19a:	74 00       	.word	0x0074	; ????
     19c:	7c 10       	cpse	r7, r12
     19e:	68 00       	.word	0x0068	; ????
     1a0:	44 7c       	andi	r20, 0xC4	; 196
     1a2:	40 00       	.word	0x0040	; ????
     1a4:	78 10       	cpse	r7, r8
     1a6:	78 00       	.word	0x0078	; ????
     1a8:	78 08       	sbc	r7, r8
     1aa:	70 00       	.word	0x0070	; ????
     1ac:	30 48       	sbci	r19, 0x80	; 128
     1ae:	30 00       	.word	0x0030	; ????
     1b0:	f8 28       	or	r15, r8
     1b2:	10 00       	.word	0x0010	; ????
     1b4:	30 48       	sbci	r19, 0x80	; 128
     1b6:	f8 00       	.word	0x00f8	; ????
     1b8:	78 10       	cpse	r7, r8
     1ba:	08 00       	.word	0x0008	; ????
     1bc:	50 58       	subi	r21, 0x80	; 128
     1be:	28 00       	.word	0x0028	; ????
     1c0:	08 3c       	cpi	r16, 0xC8	; 200
     1c2:	48 00       	.word	0x0048	; ????
     1c4:	38 40       	sbci	r19, 0x08	; 8
     1c6:	78 00       	.word	0x0078	; ????
     1c8:	38 40       	sbci	r19, 0x08	; 8
     1ca:	38 00       	.word	0x0038	; ????
     1cc:	78 20       	and	r7, r8
     1ce:	78 00       	.word	0x0078	; ????
     1d0:	48 30       	cpi	r20, 0x08	; 8
     1d2:	48 00       	.word	0x0048	; ????
     1d4:	98 a0       	ldd	r9, Y+32	; 0x20
     1d6:	78 00       	.word	0x0078	; ????
     1d8:	48 68       	ori	r20, 0x88	; 136
     1da:	58 00       	.word	0x0058	; ????
     1dc:	10 78       	andi	r17, 0x80	; 128
     1de:	84 00       	.word	0x0084	; ????
     1e0:	00 7c       	andi	r16, 0xC0	; 192
     1e2:	00 00       	nop
     1e4:	84 78       	andi	r24, 0x84	; 132
     1e6:	10 00       	.word	0x0010	; ????
     1e8:	08 04       	cpc	r0, r8
     1ea:	08 04       	cpc	r0, r8

000001ec <__ctors_end>:
     1ec:	11 24       	eor	r1, r1
     1ee:	1f be       	out	0x3f, r1	; 63
     1f0:	cf ef       	ldi	r28, 0xFF	; 255
     1f2:	d4 e0       	ldi	r29, 0x04	; 4
     1f4:	de bf       	out	0x3e, r29	; 62
     1f6:	cd bf       	out	0x3d, r28	; 61

000001f8 <__do_copy_data>:
     1f8:	12 e0       	ldi	r17, 0x02	; 2
     1fa:	a0 e0       	ldi	r26, 0x00	; 0
     1fc:	b1 e0       	ldi	r27, 0x01	; 1
     1fe:	e8 ee       	ldi	r30, 0xE8	; 232
     200:	f4 e1       	ldi	r31, 0x14	; 20
     202:	02 c0       	rjmp	.+4      	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
     204:	05 90       	lpm	r0, Z+
     206:	0d 92       	st	X+, r0
     208:	ac 39       	cpi	r26, 0x9C	; 156
     20a:	b1 07       	cpc	r27, r17
     20c:	d9 f7       	brne	.-10     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>

0000020e <__do_clear_bss>:
     20e:	22 e0       	ldi	r18, 0x02	; 2
     210:	ac e9       	ldi	r26, 0x9C	; 156
     212:	b2 e0       	ldi	r27, 0x02	; 2
     214:	01 c0       	rjmp	.+2      	; 0x218 <.do_clear_bss_start>

00000216 <.do_clear_bss_loop>:
     216:	1d 92       	st	X+, r1

00000218 <.do_clear_bss_start>:
     218:	ac 3a       	cpi	r26, 0xAC	; 172
     21a:	b2 07       	cpc	r27, r18
     21c:	e1 f7       	brne	.-8      	; 0x216 <.do_clear_bss_loop>
     21e:	0e 94 0d 04 	call	0x81a	; 0x81a <main>
     222:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <_exit>

00000226 <__bad_interrupt>:
     226:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000022a <set_ctc_mode>:
	i = TCNTn;
	/* Restore Global Interrupt Flag */
	//SREG = sreg;
	sei();
	return i;
}
     22a:	eb e8       	ldi	r30, 0x8B	; 139
     22c:	f0 e0       	ldi	r31, 0x00	; 0
     22e:	80 81       	ld	r24, Z
     230:	8e 7f       	andi	r24, 0xFE	; 254
     232:	80 83       	st	Z, r24
     234:	80 81       	ld	r24, Z
     236:	8d 7f       	andi	r24, 0xFD	; 253
     238:	80 83       	st	Z, r24
     23a:	ea e8       	ldi	r30, 0x8A	; 138
     23c:	f0 e0       	ldi	r31, 0x00	; 0
     23e:	80 81       	ld	r24, Z
     240:	88 60       	ori	r24, 0x08	; 8
     242:	80 83       	st	Z, r24
     244:	80 81       	ld	r24, Z
     246:	8f 7e       	andi	r24, 0xEF	; 239
     248:	80 83       	st	Z, r24
     24a:	08 95       	ret

0000024c <set_selected_clock>:
     24c:	ea e8       	ldi	r30, 0x8A	; 138
     24e:	f0 e0       	ldi	r31, 0x00	; 0
     250:	80 81       	ld	r24, Z
     252:	81 60       	ori	r24, 0x01	; 1
     254:	80 83       	st	Z, r24
     256:	80 81       	ld	r24, Z
     258:	8d 7f       	andi	r24, 0xFD	; 253
     25a:	80 83       	st	Z, r24
     25c:	80 81       	ld	r24, Z
     25e:	8b 7f       	andi	r24, 0xFB	; 251
     260:	80 83       	st	Z, r24
     262:	08 95       	ret

00000264 <set_compare_match_mode>:
     264:	eb e8       	ldi	r30, 0x8B	; 139
     266:	f0 e0       	ldi	r31, 0x00	; 0
     268:	80 81       	ld	r24, Z
     26a:	80 64       	ori	r24, 0x40	; 64
     26c:	80 83       	st	Z, r24
     26e:	80 81       	ld	r24, Z
     270:	8f 77       	andi	r24, 0x7F	; 127
     272:	80 83       	st	Z, r24
     274:	08 95       	ret

00000276 <init_pwm>:
     276:	81 b3       	in	r24, 0x11	; 17
     278:	80 61       	ori	r24, 0x10	; 16
     27a:	81 bb       	out	0x11, r24	; 17
     27c:	0e 94 15 01 	call	0x22a	; 0x22a <set_ctc_mode>
     280:	0e 94 26 01 	call	0x24c	; 0x24c <set_selected_clock>
     284:	0e 94 32 01 	call	0x264	; 0x264 <set_compare_match_mode>
     288:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     28c:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
     290:	08 95       	ret

00000292 <read_adc>:
     292:	e0 e0       	ldi	r30, 0x00	; 0
     294:	f4 e1       	ldi	r31, 0x14	; 20
     296:	10 82       	st	Z, r1
     298:	82 e6       	ldi	r24, 0x62	; 98
     29a:	8a 95       	dec	r24
     29c:	f1 f7       	brne	.-4      	; 0x29a <read_adc+0x8>
     29e:	00 00       	nop
     2a0:	60 81       	ld	r22, Z
     2a2:	70 91 01 14 	lds	r23, 0x1401	; 0x801401 <__bss_end+0x1155>
     2a6:	80 91 02 14 	lds	r24, 0x1402	; 0x801402 <__bss_end+0x1156>
     2aa:	90 91 03 14 	lds	r25, 0x1403	; 0x801403 <__bss_end+0x1157>
     2ae:	08 95       	ret

000002b0 <init_adc>:
     2b0:	80 e0       	ldi	r24, 0x00	; 0
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	05 c0       	rjmp	.+10     	; 0x2c0 <init_adc+0x10>
     2b6:	20 e1       	ldi	r18, 0x10	; 16
     2b8:	28 0f       	add	r18, r24
     2ba:	20 93 00 14 	sts	0x1400, r18	; 0x801400 <__bss_end+0x1154>
     2be:	01 96       	adiw	r24, 0x01	; 1
     2c0:	88 30       	cpi	r24, 0x08	; 8
     2c2:	91 05       	cpc	r25, r1
     2c4:	c4 f3       	brlt	.-16     	; 0x2b6 <init_adc+0x6>
     2c6:	08 95       	ret

000002c8 <get_slider_right_analog>:
     2c8:	0e 94 49 01 	call	0x292	; 0x292 <read_adc>
     2cc:	08 95       	ret

000002ce <draw_selected_arrow>:
     2ce:	cf 93       	push	r28
     2d0:	df 93       	push	r29
     2d2:	0e 94 87 04 	call	0x90e	; 0x90e <oled_goto_page>
     2d6:	8a e7       	ldi	r24, 0x7A	; 122
     2d8:	0e 94 92 04 	call	0x924	; 0x924 <oled_goto_col>
     2dc:	c0 e0       	ldi	r28, 0x00	; 0
     2de:	d0 e0       	ldi	r29, 0x00	; 0
     2e0:	07 c0       	rjmp	.+14     	; 0x2f0 <draw_selected_arrow+0x22>
     2e2:	fe 01       	movw	r30, r28
     2e4:	e1 58       	subi	r30, 0x81	; 129
     2e6:	fd 4f       	sbci	r31, 0xFD	; 253
     2e8:	80 81       	ld	r24, Z
     2ea:	0e 94 a8 04 	call	0x950	; 0x950 <oled_write>
     2ee:	21 96       	adiw	r28, 0x01	; 1
     2f0:	c6 30       	cpi	r28, 0x06	; 6
     2f2:	d1 05       	cpc	r29, r1
     2f4:	b4 f3       	brlt	.-20     	; 0x2e2 <draw_selected_arrow+0x14>
     2f6:	df 91       	pop	r29
     2f8:	cf 91       	pop	r28
     2fa:	08 95       	ret

000002fc <oled_menu_display>:
     2fc:	cf 93       	push	r28
     2fe:	c0 e0       	ldi	r28, 0x00	; 0
     300:	1f c0       	rjmp	.+62     	; 0x340 <oled_menu_display+0x44>
     302:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <top_item>
     306:	90 91 9f 02 	lds	r25, 0x029F	; 0x80029f <top_item+0x1>
     30a:	8c 0f       	add	r24, r28
     30c:	91 1d       	adc	r25, r1
     30e:	8a 30       	cpi	r24, 0x0A	; 10
     310:	91 05       	cpc	r25, r1
     312:	44 f4       	brge	.+16     	; 0x324 <oled_menu_display+0x28>
     314:	88 0f       	add	r24, r24
     316:	99 1f       	adc	r25, r25
     318:	fc 01       	movw	r30, r24
     31a:	e5 59       	subi	r30, 0x95	; 149
     31c:	fd 4f       	sbci	r31, 0xFD	; 253
     31e:	80 81       	ld	r24, Z
     320:	91 81       	ldd	r25, Z+1	; 0x01
     322:	02 c0       	rjmp	.+4      	; 0x328 <oled_menu_display+0x2c>
     324:	81 e2       	ldi	r24, 0x21	; 33
     326:	91 e0       	ldi	r25, 0x01	; 1
     328:	fc 01       	movw	r30, r24
     32a:	01 90       	ld	r0, Z+
     32c:	00 20       	and	r0, r0
     32e:	e9 f7       	brne	.-6      	; 0x32a <oled_menu_display+0x2e>
     330:	31 97       	sbiw	r30, 0x01	; 1
     332:	bf 01       	movw	r22, r30
     334:	68 1b       	sub	r22, r24
     336:	79 0b       	sbc	r23, r25
     338:	4c 2f       	mov	r20, r28
     33a:	0e 94 0e 05 	call	0xa1c	; 0xa1c <oled_write_string_on_line>
     33e:	cf 5f       	subi	r28, 0xFF	; 255
     340:	c8 30       	cpi	r28, 0x08	; 8
     342:	f8 f2       	brcs	.-66     	; 0x302 <oled_menu_display+0x6>
     344:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <__data_end>
     348:	0e 94 67 01 	call	0x2ce	; 0x2ce <draw_selected_arrow>
     34c:	cf 91       	pop	r28
     34e:	08 95       	ret

00000350 <SPI_MasterTransmit>:
     350:	8f b9       	out	0x0f, r24	; 15
     352:	77 9b       	sbis	0x0e, 7	; 14
     354:	fe cf       	rjmp	.-4      	; 0x352 <SPI_MasterTransmit+0x2>
     356:	08 95       	ret

00000358 <SPI_MasterTrancieve>:
     358:	8f b9       	out	0x0f, r24	; 15
     35a:	77 9b       	sbis	0x0e, 7	; 14
     35c:	fe cf       	rjmp	.-4      	; 0x35a <SPI_MasterTrancieve+0x2>
     35e:	8f b1       	in	r24, 0x0f	; 15
     360:	08 95       	ret

00000362 <SPI_set_slave_select>:
     362:	86 b3       	in	r24, 0x16	; 22
     364:	8f 7e       	andi	r24, 0xEF	; 239
     366:	88 bb       	out	0x18, r24	; 24
     368:	08 95       	ret

0000036a <SPI_clear_slave_select>:
     36a:	86 b3       	in	r24, 0x16	; 22
     36c:	80 61       	ori	r24, 0x10	; 16
     36e:	88 bb       	out	0x18, r24	; 24
     370:	08 95       	ret

00000372 <SPI_MasterInit>:
     372:	87 b3       	in	r24, 0x17	; 23
     374:	80 62       	ori	r24, 0x20	; 32
     376:	87 bb       	out	0x17, r24	; 23
     378:	87 b3       	in	r24, 0x17	; 23
     37a:	80 68       	ori	r24, 0x80	; 128
     37c:	87 bb       	out	0x17, r24	; 23
     37e:	87 b3       	in	r24, 0x17	; 23
     380:	80 61       	ori	r24, 0x10	; 16
     382:	87 bb       	out	0x17, r24	; 23
     384:	87 b3       	in	r24, 0x17	; 23
     386:	8f 7b       	andi	r24, 0xBF	; 191
     388:	87 bb       	out	0x17, r24	; 23
     38a:	0e 94 b5 01 	call	0x36a	; 0x36a <SPI_clear_slave_select>
     38e:	83 e5       	ldi	r24, 0x53	; 83
     390:	8d b9       	out	0x0d, r24	; 13
     392:	0e 94 b5 01 	call	0x36a	; 0x36a <SPI_clear_slave_select>
     396:	08 95       	ret

00000398 <mcp2515_read>:
     398:	cf 93       	push	r28
     39a:	c8 2f       	mov	r28, r24
     39c:	0e 94 b1 01 	call	0x362	; 0x362 <SPI_set_slave_select>
     3a0:	83 e0       	ldi	r24, 0x03	; 3
     3a2:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_MasterTransmit>
     3a6:	8c 2f       	mov	r24, r28
     3a8:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_MasterTransmit>
     3ac:	8f e0       	ldi	r24, 0x0F	; 15
     3ae:	0e 94 ac 01 	call	0x358	; 0x358 <SPI_MasterTrancieve>
     3b2:	c8 2f       	mov	r28, r24
     3b4:	0e 94 b5 01 	call	0x36a	; 0x36a <SPI_clear_slave_select>
     3b8:	8c 2f       	mov	r24, r28
     3ba:	cf 91       	pop	r28
     3bc:	08 95       	ret

000003be <mcp2515_write>:
     3be:	cf 93       	push	r28
     3c0:	df 93       	push	r29
     3c2:	d8 2f       	mov	r29, r24
     3c4:	c6 2f       	mov	r28, r22
     3c6:	0e 94 b1 01 	call	0x362	; 0x362 <SPI_set_slave_select>
     3ca:	82 e0       	ldi	r24, 0x02	; 2
     3cc:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_MasterTransmit>
     3d0:	8d 2f       	mov	r24, r29
     3d2:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_MasterTransmit>
     3d6:	8c 2f       	mov	r24, r28
     3d8:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_MasterTransmit>
     3dc:	0e 94 b5 01 	call	0x36a	; 0x36a <SPI_clear_slave_select>
     3e0:	df 91       	pop	r29
     3e2:	cf 91       	pop	r28
     3e4:	08 95       	ret

000003e6 <mcp2515_send_req>:
     3e6:	cf 93       	push	r28
     3e8:	c8 2f       	mov	r28, r24
     3ea:	0e 94 b1 01 	call	0x362	; 0x362 <SPI_set_slave_select>
     3ee:	c8 30       	cpi	r28, 0x08	; 8
     3f0:	30 f4       	brcc	.+12     	; 0x3fe <mcp2515_send_req+0x18>
     3f2:	80 e8       	ldi	r24, 0x80	; 128
     3f4:	8c 0f       	add	r24, r28
     3f6:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_MasterTransmit>
     3fa:	0e 94 b5 01 	call	0x36a	; 0x36a <SPI_clear_slave_select>
     3fe:	cf 91       	pop	r28
     400:	08 95       	ret

00000402 <mcp2515_bit_mod>:
     402:	1f 93       	push	r17
     404:	cf 93       	push	r28
     406:	df 93       	push	r29
     408:	18 2f       	mov	r17, r24
     40a:	d6 2f       	mov	r29, r22
     40c:	c4 2f       	mov	r28, r20
     40e:	0e 94 b1 01 	call	0x362	; 0x362 <SPI_set_slave_select>
     412:	85 e0       	ldi	r24, 0x05	; 5
     414:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_MasterTransmit>
     418:	81 2f       	mov	r24, r17
     41a:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_MasterTransmit>
     41e:	8d 2f       	mov	r24, r29
     420:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_MasterTransmit>
     424:	8c 2f       	mov	r24, r28
     426:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_MasterTransmit>
     42a:	0e 94 b5 01 	call	0x36a	; 0x36a <SPI_clear_slave_select>
     42e:	df 91       	pop	r29
     430:	cf 91       	pop	r28
     432:	1f 91       	pop	r17
     434:	08 95       	ret

00000436 <mcp2515_reset>:
     436:	0e 94 b1 01 	call	0x362	; 0x362 <SPI_set_slave_select>
     43a:	80 ec       	ldi	r24, 0xC0	; 192
     43c:	0e 94 a8 01 	call	0x350	; 0x350 <SPI_MasterTransmit>
     440:	0e 94 b5 01 	call	0x36a	; 0x36a <SPI_clear_slave_select>
     444:	08 95       	ret

00000446 <can_interrupt_enable>:
     446:	8a b7       	in	r24, 0x3a	; 58
     448:	80 64       	ori	r24, 0x40	; 64
     44a:	8a bf       	out	0x3a, r24	; 58
     44c:	8b b7       	in	r24, 0x3b	; 59
     44e:	80 64       	ori	r24, 0x40	; 64
     450:	8b bf       	out	0x3b, r24	; 59
     452:	85 b7       	in	r24, 0x35	; 53
     454:	82 60       	ori	r24, 0x02	; 2
     456:	85 bf       	out	0x35, r24	; 53
     458:	85 b7       	in	r24, 0x35	; 53
     45a:	8e 7f       	andi	r24, 0xFE	; 254
     45c:	85 bf       	out	0x35, r24	; 53
     45e:	78 94       	sei
     460:	08 95       	ret

00000462 <can_set_config_mode>:
     462:	48 2f       	mov	r20, r24
     464:	60 ee       	ldi	r22, 0xE0	; 224
     466:	8f e0       	ldi	r24, 0x0F	; 15
     468:	0e 94 01 02 	call	0x402	; 0x402 <mcp2515_bit_mod>
     46c:	08 95       	ret

0000046e <init_can>:
     46e:	0e 94 23 02 	call	0x446	; 0x446 <can_interrupt_enable>
     472:	43 e0       	ldi	r20, 0x03	; 3
     474:	6f ef       	ldi	r22, 0xFF	; 255
     476:	8a e2       	ldi	r24, 0x2A	; 42
     478:	0e 94 01 02 	call	0x402	; 0x402 <mcp2515_bit_mod>
     47c:	41 eb       	ldi	r20, 0xB1	; 177
     47e:	6f ef       	ldi	r22, 0xFF	; 255
     480:	89 e2       	ldi	r24, 0x29	; 41
     482:	0e 94 01 02 	call	0x402	; 0x402 <mcp2515_bit_mod>
     486:	45 e0       	ldi	r20, 0x05	; 5
     488:	6f ef       	ldi	r22, 0xFF	; 255
     48a:	88 e2       	ldi	r24, 0x28	; 40
     48c:	0e 94 01 02 	call	0x402	; 0x402 <mcp2515_bit_mod>
     490:	80 e0       	ldi	r24, 0x00	; 0
     492:	0e 94 31 02 	call	0x462	; 0x462 <can_set_config_mode>
     496:	43 e0       	ldi	r20, 0x03	; 3
     498:	63 e0       	ldi	r22, 0x03	; 3
     49a:	8b e2       	ldi	r24, 0x2B	; 43
     49c:	0e 94 01 02 	call	0x402	; 0x402 <mcp2515_bit_mod>
     4a0:	40 e2       	ldi	r20, 0x20	; 32
     4a2:	60 e2       	ldi	r22, 0x20	; 32
     4a4:	8b e2       	ldi	r24, 0x2B	; 43
     4a6:	0e 94 01 02 	call	0x402	; 0x402 <mcp2515_bit_mod>
     4aa:	40 e6       	ldi	r20, 0x60	; 96
     4ac:	60 e6       	ldi	r22, 0x60	; 96
     4ae:	80 e6       	ldi	r24, 0x60	; 96
     4b0:	0e 94 01 02 	call	0x402	; 0x402 <mcp2515_bit_mod>
     4b4:	48 e0       	ldi	r20, 0x08	; 8
     4b6:	68 e0       	ldi	r22, 0x08	; 8
     4b8:	81 e0       	ldi	r24, 0x01	; 1
     4ba:	0e 94 01 02 	call	0x402	; 0x402 <mcp2515_bit_mod>
     4be:	08 95       	ret

000004c0 <can_transmit_tx_buf0>:
     4c0:	ff 92       	push	r15
     4c2:	0f 93       	push	r16
     4c4:	1f 93       	push	r17
     4c6:	cf 93       	push	r28
     4c8:	df 93       	push	r29
     4ca:	c6 2f       	mov	r28, r22
     4cc:	f7 2e       	mov	r15, r23
     4ce:	08 2f       	mov	r16, r24
     4d0:	19 2f       	mov	r17, r25
     4d2:	66 95       	lsr	r22
     4d4:	66 95       	lsr	r22
     4d6:	66 95       	lsr	r22
     4d8:	81 e3       	ldi	r24, 0x31	; 49
     4da:	0e 94 df 01 	call	0x3be	; 0x3be <mcp2515_write>
     4de:	6c 2f       	mov	r22, r28
     4e0:	62 95       	swap	r22
     4e2:	66 0f       	add	r22, r22
     4e4:	60 7e       	andi	r22, 0xE0	; 224
     4e6:	68 5f       	subi	r22, 0xF8	; 248
     4e8:	82 e3       	ldi	r24, 0x32	; 50
     4ea:	0e 94 df 01 	call	0x3be	; 0x3be <mcp2515_write>
     4ee:	6f ef       	ldi	r22, 0xFF	; 255
     4f0:	84 e3       	ldi	r24, 0x34	; 52
     4f2:	0e 94 df 01 	call	0x3be	; 0x3be <mcp2515_write>
     4f6:	6f ef       	ldi	r22, 0xFF	; 255
     4f8:	83 e3       	ldi	r24, 0x33	; 51
     4fa:	0e 94 df 01 	call	0x3be	; 0x3be <mcp2515_write>
     4fe:	df 2d       	mov	r29, r15
     500:	6f 2d       	mov	r22, r15
     502:	85 e3       	ldi	r24, 0x35	; 53
     504:	0e 94 df 01 	call	0x3be	; 0x3be <mcp2515_write>
     508:	c0 e0       	ldi	r28, 0x00	; 0
     50a:	0b c0       	rjmp	.+22     	; 0x522 <__stack+0x23>
     50c:	80 2f       	mov	r24, r16
     50e:	91 2f       	mov	r25, r17
     510:	fc 01       	movw	r30, r24
     512:	ec 0f       	add	r30, r28
     514:	f1 1d       	adc	r31, r1
     516:	60 81       	ld	r22, Z
     518:	86 e3       	ldi	r24, 0x36	; 54
     51a:	8c 0f       	add	r24, r28
     51c:	0e 94 df 01 	call	0x3be	; 0x3be <mcp2515_write>
     520:	cf 5f       	subi	r28, 0xFF	; 255
     522:	cd 17       	cp	r28, r29
     524:	10 f4       	brcc	.+4      	; 0x52a <__stack+0x2b>
     526:	c8 30       	cpi	r28, 0x08	; 8
     528:	88 f3       	brcs	.-30     	; 0x50c <__stack+0xd>
     52a:	81 e0       	ldi	r24, 0x01	; 1
     52c:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <mcp2515_send_req>
     530:	df 91       	pop	r29
     532:	cf 91       	pop	r28
     534:	1f 91       	pop	r17
     536:	0f 91       	pop	r16
     538:	ff 90       	pop	r15
     53a:	08 95       	ret

0000053c <can_read_rx_buf0>:
     53c:	df 92       	push	r13
     53e:	ef 92       	push	r14
     540:	ff 92       	push	r15
     542:	0f 93       	push	r16
     544:	1f 93       	push	r17
     546:	cf 93       	push	r28
     548:	df 93       	push	r29
     54a:	81 e6       	ldi	r24, 0x61	; 97
     54c:	0e 94 cc 01 	call	0x398	; 0x398 <mcp2515_read>
     550:	d8 2e       	mov	r13, r24
     552:	dd 0c       	add	r13, r13
     554:	dd 0c       	add	r13, r13
     556:	dd 0c       	add	r13, r13
     558:	82 e6       	ldi	r24, 0x62	; 98
     55a:	0e 94 cc 01 	call	0x398	; 0x398 <mcp2515_read>
     55e:	82 95       	swap	r24
     560:	86 95       	lsr	r24
     562:	87 70       	andi	r24, 0x07	; 7
     564:	d8 0e       	add	r13, r24
     566:	85 e6       	ldi	r24, 0x65	; 101
     568:	0e 94 cc 01 	call	0x398	; 0x398 <mcp2515_read>
     56c:	d8 2f       	mov	r29, r24
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	0e 94 05 06 	call	0xc0a	; 0xc0a <malloc>
     574:	7c 01       	movw	r14, r24
     576:	c0 e0       	ldi	r28, 0x00	; 0
     578:	0a c0       	rjmp	.+20     	; 0x58e <can_read_rx_buf0+0x52>
     57a:	87 01       	movw	r16, r14
     57c:	0c 0f       	add	r16, r28
     57e:	11 1d       	adc	r17, r1
     580:	86 e6       	ldi	r24, 0x66	; 102
     582:	8c 0f       	add	r24, r28
     584:	0e 94 cc 01 	call	0x398	; 0x398 <mcp2515_read>
     588:	f8 01       	movw	r30, r16
     58a:	80 83       	st	Z, r24
     58c:	cf 5f       	subi	r28, 0xFF	; 255
     58e:	cd 17       	cp	r28, r29
     590:	10 f4       	brcc	.+4      	; 0x596 <can_read_rx_buf0+0x5a>
     592:	c8 30       	cpi	r28, 0x08	; 8
     594:	90 f3       	brcs	.-28     	; 0x57a <can_read_rx_buf0+0x3e>
     596:	6d 2d       	mov	r22, r13
     598:	7d 2f       	mov	r23, r29
     59a:	8e 2d       	mov	r24, r14
     59c:	9f 2d       	mov	r25, r15
     59e:	df 91       	pop	r29
     5a0:	cf 91       	pop	r28
     5a2:	1f 91       	pop	r17
     5a4:	0f 91       	pop	r16
     5a6:	ff 90       	pop	r15
     5a8:	ef 90       	pop	r14
     5aa:	df 90       	pop	r13
     5ac:	08 95       	ret

000005ae <display_can_frame>:
     5ae:	0f 93       	push	r16
     5b0:	1f 93       	push	r17
     5b2:	cf 93       	push	r28
     5b4:	df 93       	push	r29
     5b6:	d6 2f       	mov	r29, r22
     5b8:	c7 2f       	mov	r28, r23
     5ba:	08 2f       	mov	r16, r24
     5bc:	19 2f       	mov	r17, r25
     5be:	86 e2       	ldi	r24, 0x26	; 38
     5c0:	91 e0       	ldi	r25, 0x01	; 1
     5c2:	9f 93       	push	r25
     5c4:	8f 93       	push	r24
     5c6:	0e 94 71 07 	call	0xee2	; 0xee2 <printf>
     5ca:	1f 92       	push	r1
     5cc:	df 93       	push	r29
     5ce:	81 e3       	ldi	r24, 0x31	; 49
     5d0:	91 e0       	ldi	r25, 0x01	; 1
     5d2:	9f 93       	push	r25
     5d4:	8f 93       	push	r24
     5d6:	0e 94 71 07 	call	0xee2	; 0xee2 <printf>
     5da:	dc 2f       	mov	r29, r28
     5dc:	1f 92       	push	r1
     5de:	cf 93       	push	r28
     5e0:	8d e3       	ldi	r24, 0x3D	; 61
     5e2:	91 e0       	ldi	r25, 0x01	; 1
     5e4:	9f 93       	push	r25
     5e6:	8f 93       	push	r24
     5e8:	0e 94 71 07 	call	0xee2	; 0xee2 <printf>
     5ec:	8d b7       	in	r24, 0x3d	; 61
     5ee:	9e b7       	in	r25, 0x3e	; 62
     5f0:	0a 96       	adiw	r24, 0x0a	; 10
     5f2:	0f b6       	in	r0, 0x3f	; 63
     5f4:	f8 94       	cli
     5f6:	9e bf       	out	0x3e, r25	; 62
     5f8:	0f be       	out	0x3f, r0	; 63
     5fa:	8d bf       	out	0x3d, r24	; 61
     5fc:	c0 e0       	ldi	r28, 0x00	; 0
     5fe:	13 c0       	rjmp	.+38     	; 0x626 <display_can_frame+0x78>
     600:	80 2f       	mov	r24, r16
     602:	91 2f       	mov	r25, r17
     604:	fc 01       	movw	r30, r24
     606:	ec 0f       	add	r30, r28
     608:	f1 1d       	adc	r31, r1
     60a:	80 81       	ld	r24, Z
     60c:	1f 92       	push	r1
     60e:	8f 93       	push	r24
     610:	88 e3       	ldi	r24, 0x38	; 56
     612:	91 e0       	ldi	r25, 0x01	; 1
     614:	9f 93       	push	r25
     616:	8f 93       	push	r24
     618:	0e 94 71 07 	call	0xee2	; 0xee2 <printf>
     61c:	cf 5f       	subi	r28, 0xFF	; 255
     61e:	0f 90       	pop	r0
     620:	0f 90       	pop	r0
     622:	0f 90       	pop	r0
     624:	0f 90       	pop	r0
     626:	cd 17       	cp	r28, r29
     628:	58 f3       	brcs	.-42     	; 0x600 <display_can_frame+0x52>
     62a:	df 91       	pop	r29
     62c:	cf 91       	pop	r28
     62e:	1f 91       	pop	r17
     630:	0f 91       	pop	r16
     632:	08 95       	ret

00000634 <__vector_1>:
     634:	1f 92       	push	r1
     636:	0f 92       	push	r0
     638:	0f b6       	in	r0, 0x3f	; 63
     63a:	0f 92       	push	r0
     63c:	11 24       	eor	r1, r1
     63e:	2f 93       	push	r18
     640:	3f 93       	push	r19
     642:	4f 93       	push	r20
     644:	5f 93       	push	r21
     646:	6f 93       	push	r22
     648:	7f 93       	push	r23
     64a:	8f 93       	push	r24
     64c:	9f 93       	push	r25
     64e:	af 93       	push	r26
     650:	bf 93       	push	r27
     652:	cf 93       	push	r28
     654:	ef 93       	push	r30
     656:	ff 93       	push	r31
     658:	8e e0       	ldi	r24, 0x0E	; 14
     65a:	0e 94 cc 01 	call	0x398	; 0x398 <mcp2515_read>
     65e:	8e 70       	andi	r24, 0x0E	; 14
     660:	c8 2f       	mov	r28, r24
     662:	c6 95       	lsr	r28
     664:	1f 92       	push	r1
     666:	cf 93       	push	r28
     668:	84 e5       	ldi	r24, 0x54	; 84
     66a:	91 e0       	ldi	r25, 0x01	; 1
     66c:	9f 93       	push	r25
     66e:	8f 93       	push	r24
     670:	0e 94 71 07 	call	0xee2	; 0xee2 <printf>
     674:	0f 90       	pop	r0
     676:	0f 90       	pop	r0
     678:	0f 90       	pop	r0
     67a:	0f 90       	pop	r0
     67c:	c1 30       	cpi	r28, 0x01	; 1
     67e:	a9 f4       	brne	.+42     	; 0x6aa <__vector_1+0x76>
     680:	8d e2       	ldi	r24, 0x2D	; 45
     682:	0e 94 cc 01 	call	0x398	; 0x398 <mcp2515_read>
     686:	1f 92       	push	r1
     688:	8f 93       	push	r24
     68a:	8a e6       	ldi	r24, 0x6A	; 106
     68c:	91 e0       	ldi	r25, 0x01	; 1
     68e:	9f 93       	push	r25
     690:	8f 93       	push	r24
     692:	0e 94 71 07 	call	0xee2	; 0xee2 <printf>
     696:	40 e0       	ldi	r20, 0x00	; 0
     698:	61 e2       	ldi	r22, 0x21	; 33
     69a:	8c e2       	ldi	r24, 0x2C	; 44
     69c:	0e 94 01 02 	call	0x402	; 0x402 <mcp2515_bit_mod>
     6a0:	0f 90       	pop	r0
     6a2:	0f 90       	pop	r0
     6a4:	0f 90       	pop	r0
     6a6:	0f 90       	pop	r0
     6a8:	17 c0       	rjmp	.+46     	; 0x6d8 <__vector_1+0xa4>
     6aa:	c6 30       	cpi	r28, 0x06	; 6
     6ac:	51 f4       	brne	.+20     	; 0x6c2 <__vector_1+0x8e>
     6ae:	0e 94 9e 02 	call	0x53c	; 0x53c <can_read_rx_buf0>
     6b2:	0e 94 d7 02 	call	0x5ae	; 0x5ae <display_can_frame>
     6b6:	40 e0       	ldi	r20, 0x00	; 0
     6b8:	61 e0       	ldi	r22, 0x01	; 1
     6ba:	8c e2       	ldi	r24, 0x2C	; 44
     6bc:	0e 94 01 02 	call	0x402	; 0x402 <mcp2515_bit_mod>
     6c0:	0b c0       	rjmp	.+22     	; 0x6d8 <__vector_1+0xa4>
     6c2:	c7 30       	cpi	r28, 0x07	; 7
     6c4:	49 f4       	brne	.+18     	; 0x6d8 <__vector_1+0xa4>
     6c6:	0e 94 9e 02 	call	0x53c	; 0x53c <can_read_rx_buf0>
     6ca:	0e 94 d7 02 	call	0x5ae	; 0x5ae <display_can_frame>
     6ce:	40 e0       	ldi	r20, 0x00	; 0
     6d0:	62 e0       	ldi	r22, 0x02	; 2
     6d2:	8c e2       	ldi	r24, 0x2C	; 44
     6d4:	0e 94 01 02 	call	0x402	; 0x402 <mcp2515_bit_mod>
     6d8:	40 e0       	ldi	r20, 0x00	; 0
     6da:	64 e0       	ldi	r22, 0x04	; 4
     6dc:	8c e2       	ldi	r24, 0x2C	; 44
     6de:	0e 94 01 02 	call	0x402	; 0x402 <mcp2515_bit_mod>
     6e2:	8a b7       	in	r24, 0x3a	; 58
     6e4:	80 64       	ori	r24, 0x40	; 64
     6e6:	8a bf       	out	0x3a, r24	; 58
     6e8:	ff 91       	pop	r31
     6ea:	ef 91       	pop	r30
     6ec:	cf 91       	pop	r28
     6ee:	bf 91       	pop	r27
     6f0:	af 91       	pop	r26
     6f2:	9f 91       	pop	r25
     6f4:	8f 91       	pop	r24
     6f6:	7f 91       	pop	r23
     6f8:	6f 91       	pop	r22
     6fa:	5f 91       	pop	r21
     6fc:	4f 91       	pop	r20
     6fe:	3f 91       	pop	r19
     700:	2f 91       	pop	r18
     702:	0f 90       	pop	r0
     704:	0f be       	out	0x3f, r0	; 63
     706:	0f 90       	pop	r0
     708:	1f 90       	pop	r1
     70a:	18 95       	reti

0000070c <can_transmit>:
     70c:	ff 92       	push	r15
     70e:	0f 93       	push	r16
     710:	1f 93       	push	r17
     712:	cf 93       	push	r28
     714:	df 93       	push	r29
     716:	f8 2e       	mov	r15, r24
     718:	06 2f       	mov	r16, r22
     71a:	14 2f       	mov	r17, r20
     71c:	83 e0       	ldi	r24, 0x03	; 3
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	0e 94 05 06 	call	0xc0a	; 0xc0a <malloc>
     724:	ec 01       	movw	r28, r24
     726:	f8 82       	st	Y, r15
     728:	09 83       	std	Y+1, r16	; 0x01
     72a:	1a 83       	std	Y+2, r17	; 0x02
     72c:	61 e0       	ldi	r22, 0x01	; 1
     72e:	73 e0       	ldi	r23, 0x03	; 3
     730:	9d 2f       	mov	r25, r29
     732:	0e 94 60 02 	call	0x4c0	; 0x4c0 <can_transmit_tx_buf0>
     736:	61 e0       	ldi	r22, 0x01	; 1
     738:	73 e0       	ldi	r23, 0x03	; 3
     73a:	8c 2f       	mov	r24, r28
     73c:	9d 2f       	mov	r25, r29
     73e:	0e 94 d7 02 	call	0x5ae	; 0x5ae <display_can_frame>
     742:	ce 01       	movw	r24, r28
     744:	0e 94 9d 06 	call	0xd3a	; 0xd3a <free>
     748:	df 91       	pop	r29
     74a:	cf 91       	pop	r28
     74c:	1f 91       	pop	r17
     74e:	0f 91       	pop	r16
     750:	ff 90       	pop	r15
     752:	08 95       	ret

00000754 <__vector_3>:
     754:	1f 92       	push	r1
     756:	0f 92       	push	r0
     758:	0f b6       	in	r0, 0x3f	; 63
     75a:	0f 92       	push	r0
     75c:	11 24       	eor	r1, r1
     75e:	2f 93       	push	r18
     760:	3f 93       	push	r19
     762:	4f 93       	push	r20
     764:	5f 93       	push	r21
     766:	6f 93       	push	r22
     768:	7f 93       	push	r23
     76a:	8f 93       	push	r24
     76c:	9f 93       	push	r25
     76e:	af 93       	push	r26
     770:	bf 93       	push	r27
     772:	ef 93       	push	r30
     774:	ff 93       	push	r31
     776:	85 e8       	ldi	r24, 0x85	; 133
     778:	91 e0       	ldi	r25, 0x01	; 1
     77a:	9f 93       	push	r25
     77c:	8f 93       	push	r24
     77e:	0e 94 71 07 	call	0xee2	; 0xee2 <printf>
     782:	0f 90       	pop	r0
     784:	0f 90       	pop	r0
     786:	ff 91       	pop	r31
     788:	ef 91       	pop	r30
     78a:	bf 91       	pop	r27
     78c:	af 91       	pop	r26
     78e:	9f 91       	pop	r25
     790:	8f 91       	pop	r24
     792:	7f 91       	pop	r23
     794:	6f 91       	pop	r22
     796:	5f 91       	pop	r21
     798:	4f 91       	pop	r20
     79a:	3f 91       	pop	r19
     79c:	2f 91       	pop	r18
     79e:	0f 90       	pop	r0
     7a0:	0f be       	out	0x3f, r0	; 63
     7a2:	0f 90       	pop	r0
     7a4:	1f 90       	pop	r1
     7a6:	18 95       	reti

000007a8 <__vector_8>:
     7a8:	1f 92       	push	r1
     7aa:	0f 92       	push	r0
     7ac:	0f b6       	in	r0, 0x3f	; 63
     7ae:	0f 92       	push	r0
     7b0:	11 24       	eor	r1, r1
     7b2:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
     7b6:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
     7ba:	0f 90       	pop	r0
     7bc:	0f be       	out	0x3f, r0	; 63
     7be:	0f 90       	pop	r0
     7c0:	1f 90       	pop	r1
     7c2:	18 95       	reti

000007c4 <config_timer>:
     7c4:	80 e2       	ldi	r24, 0x20	; 32
     7c6:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7fc08b>
     7ca:	85 e0       	ldi	r24, 0x05	; 5
     7cc:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7fc08a>
     7d0:	88 ee       	ldi	r24, 0xE8	; 232
     7d2:	91 e0       	ldi	r25, 0x01	; 1
     7d4:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     7d8:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     7dc:	08 95       	ret

000007de <init_timer>:
     7de:	0e 94 e2 03 	call	0x7c4	; 0x7c4 <config_timer>
     7e2:	88 e0       	ldi	r24, 0x08	; 8
     7e4:	80 93 7d 00 	sts	0x007D, r24	; 0x80007d <__TEXT_REGION_LENGTH__+0x7fc07d>
     7e8:	78 94       	sei
     7ea:	08 95       	ret

000007ec <init_pin_directions>:
#include "timer_driver.h"

void init_pin_directions()
{
	// set PORTB PIN0 direction as output
	set_bit(DDRB, DDB0);
     7ec:	87 b3       	in	r24, 0x17	; 23
     7ee:	81 60       	ori	r24, 0x01	; 1
     7f0:	87 bb       	out	0x17, r24	; 23
	// mcp transistor
	set_bit(DDRB, DDB1);
     7f2:	87 b3       	in	r24, 0x17	; 23
     7f4:	82 60       	ori	r24, 0x02	; 2
     7f6:	87 bb       	out	0x17, r24	; 23
	char reg = PINB;
     7f8:	86 b3       	in	r24, 0x16	; 22
	set_bit(reg, DDB1);
     7fa:	82 60       	ori	r24, 0x02	; 2
	PORTB = reg;
     7fc:	88 bb       	out	0x18, r24	; 24
     7fe:	08 95       	ret

00000800 <init_ext_mem>:
}

void init_ext_mem()
{
	// enable XMEM
	set_bit(MCUCR, SRE);
     800:	85 b7       	in	r24, 0x35	; 53
     802:	80 68       	ori	r24, 0x80	; 128
     804:	85 bf       	out	0x35, r24	; 53
	// release 4 msb to jtag
	set_bit(SFIOR, XMM2);
     806:	80 b7       	in	r24, 0x30	; 48
     808:	80 62       	ori	r24, 0x20	; 32
     80a:	80 bf       	out	0x30, r24	; 48
	clear_bit(SFIOR, XMM1);
     80c:	80 b7       	in	r24, 0x30	; 48
     80e:	8f 7e       	andi	r24, 0xEF	; 239
     810:	80 bf       	out	0x30, r24	; 48
	clear_bit(SFIOR, XMM0);
     812:	80 b7       	in	r24, 0x30	; 48
     814:	87 7f       	andi	r24, 0xF7	; 247
     816:	80 bf       	out	0x30, r24	; 48
     818:	08 95       	ret

0000081a <main>:

void test_static_address();

int main(void)
{
    init_pin_directions();
     81a:	0e 94 f6 03 	call	0x7ec	; 0x7ec <init_pin_directions>
	init_ext_mem();
     81e:	0e 94 00 04 	call	0x800	; 0x800 <init_ext_mem>
	init_pwm();
     822:	0e 94 3b 01 	call	0x276	; 0x276 <init_pwm>
	USART_Init(MYUBRR);
     826:	8f e1       	ldi	r24, 0x1F	; 31
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <USART_Init>
	init_adc();
     82e:	0e 94 58 01 	call	0x2b0	; 0x2b0 <init_adc>
	init_oled();
     832:	0e 94 65 04 	call	0x8ca	; 0x8ca <init_oled>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     836:	23 e0       	ldi	r18, 0x03	; 3
     838:	2a 95       	dec	r18
     83a:	f1 f7       	brne	.-4      	; 0x838 <main+0x1e>
     83c:	00 00       	nop
	//init_can();
	//init_interrupt();
	
	
	_delay_us(2); // the MCP takes a maximum of 2 us to be ready for a reset
	SPI_MasterInit();
     83e:	0e 94 b9 01 	call	0x372	; 0x372 <SPI_MasterInit>
	mcp2515_reset();
     842:	0e 94 1b 02 	call	0x436	; 0x436 <mcp2515_reset>
	
	// todo: change transmit and receive to int return, error handling?
	fdevopen(USART_Transmit, USART_Receive);
     846:	60 e0       	ldi	r22, 0x00	; 0
     848:	76 e0       	ldi	r23, 0x06	; 6
     84a:	8a ef       	ldi	r24, 0xFA	; 250
     84c:	95 e0       	ldi	r25, 0x05	; 5
     84e:	0e 94 26 07 	call	0xe4c	; 0xe4c <fdevopen>
	
	// test functions
	//test_static_address();
	//SRAM_test();
	
	oled_fill_entire(0x0F);
     852:	8f e0       	ldi	r24, 0x0F	; 15
     854:	0e 94 b7 04 	call	0x96e	; 0x96e <oled_fill_entire>
	// oled_goto_page(0);
	//printf("\n\r arrow = ");
	//oled_draw_arrow();
	
	//_delay_ms(10000);
	toggle_pin('B', 1);
     858:	61 e0       	ldi	r22, 0x01	; 1
     85a:	82 e4       	ldi	r24, 0x42	; 66
     85c:	0e 94 67 05 	call	0xace	; 0xace <toggle_pin>
	//_delay_ms(2000);
	//toggle_pin('B', 1);
	
	oled_write_string_on_line("string test", strlen("string test"), 0);
     860:	40 e0       	ldi	r20, 0x00	; 0
     862:	6b e0       	ldi	r22, 0x0B	; 11
     864:	8b e8       	ldi	r24, 0x8B	; 139
     866:	91 e0       	ldi	r25, 0x01	; 1
     868:	0e 94 0e 05 	call	0xa1c	; 0xa1c <oled_write_string_on_line>
	
	//mcp2515_reset();
	//_delay_ms(1000);
	
	
	init_can();
     86c:	0e 94 37 02 	call	0x46e	; 0x46e <init_can>
	init_timer();
     870:	0e 94 ef 03 	call	0x7de	; 0x7de <init_timer>
	//can_set_config_mode(MODE_LOOPBACK);
	
	uint8_t slider_value = get_slider_right_analog();
     874:	0e 94 64 01 	call	0x2c8	; 0x2c8 <get_slider_right_analog>
     878:	c8 2f       	mov	r28, r24
		//oled_write_char((unsigned char)'a', 8);
		//oled_fill_entire();
		// display_adc_info(); // using printf
		
		/* OLED MENU */
		oled_menu_display();
     87a:	0e 94 7e 01 	call	0x2fc	; 0x2fc <oled_menu_display>
			default:
				break;
		}
		
		/* RIGHT SLIDER TX */
		uint8_t n_slider_value = get_slider_right_analog();
     87e:	0e 94 64 01 	call	0x2c8	; 0x2c8 <get_slider_right_analog>
     882:	d8 2f       	mov	r29, r24
		if (abs(slider_value - n_slider_value) > 5){
     884:	8c 2f       	mov	r24, r28
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	8d 1b       	sub	r24, r29
     88a:	91 09       	sbc	r25, r1
     88c:	9c 01       	movw	r18, r24
     88e:	22 f4       	brpl	.+8      	; 0x898 <main+0x7e>
     890:	22 27       	eor	r18, r18
     892:	33 27       	eor	r19, r19
     894:	28 1b       	sub	r18, r24
     896:	39 0b       	sbc	r19, r25
     898:	26 30       	cpi	r18, 0x06	; 6
     89a:	31 05       	cpc	r19, r1
     89c:	2c f0       	brlt	.+10     	; 0x8a8 <main+0x8e>
			can_transmit(0x00, n_slider_value, 0x00);
     89e:	40 e0       	ldi	r20, 0x00	; 0
     8a0:	6d 2f       	mov	r22, r29
     8a2:	80 e0       	ldi	r24, 0x00	; 0
     8a4:	0e 94 86 03 	call	0x70c	; 0x70c <can_transmit>
			can_transmit(0x3f, l_slider_val);
		}
		slider_value = n_slider_value;
		*/
		/* OLED RENDER */
		oled_render();
     8a8:	0e 94 3f 05 	call	0xa7e	; 0xa7e <oled_render>
		// read rx buffer
		//struct can_msg_t msg = can_read_rx_buf0();
		//display_can_frame(msg);
		
		/* LOOP PERIOD AND LED */
		toggle_pin('B', 0);
     8ac:	60 e0       	ldi	r22, 0x00	; 0
     8ae:	82 e4       	ldi	r24, 0x42	; 66
     8b0:	0e 94 67 05 	call	0xace	; 0xace <toggle_pin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8b4:	8f ef       	ldi	r24, 0xFF	; 255
     8b6:	9f e7       	ldi	r25, 0x7F	; 127
     8b8:	21 e0       	ldi	r18, 0x01	; 1
     8ba:	81 50       	subi	r24, 0x01	; 1
     8bc:	90 40       	sbci	r25, 0x00	; 0
     8be:	20 40       	sbci	r18, 0x00	; 0
     8c0:	e1 f7       	brne	.-8      	; 0x8ba <main+0xa0>
     8c2:	00 c0       	rjmp	.+0      	; 0x8c4 <main+0xaa>
     8c4:	00 c0       	rjmp	.+0      	; 0x8c6 <main+0xac>
		/* RIGHT SLIDER TX */
		uint8_t n_slider_value = get_slider_right_analog();
		if (abs(slider_value - n_slider_value) > 5){
			can_transmit(0x00, n_slider_value, 0x00);
		}
		slider_value = n_slider_value;
     8c6:	cd 2f       	mov	r28, r29
     8c8:	d8 cf       	rjmp	.-80     	; 0x87a <main+0x60>

000008ca <init_oled>:

static unsigned char init_data[22] = {0xae, 0xa1, 0xda, 0x12, 0xc8, 0xa8, 0x3f, 0xd5, 0x80, 0x81, 0x50, 0xd9, 0x21, 0x20, 0x02, 0xdb, 0x30, 0xad, 0x00, 0xa4, 0xa6, 0xaf};

void init_oled()
{
	for(int i = 0; i < 22; i++) {
     8ca:	80 e0       	ldi	r24, 0x00	; 0
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	07 c0       	rjmp	.+14     	; 0x8de <init_oled+0x14>
		oled_c_base[0] = init_data[i];
     8d0:	fc 01       	movw	r30, r24
     8d2:	eb 57       	subi	r30, 0x7B	; 123
     8d4:	fd 4f       	sbci	r31, 0xFD	; 253
     8d6:	20 81       	ld	r18, Z
     8d8:	20 93 00 10 	sts	0x1000, r18	; 0x801000 <__bss_end+0xd54>

static unsigned char init_data[22] = {0xae, 0xa1, 0xda, 0x12, 0xc8, 0xa8, 0x3f, 0xd5, 0x80, 0x81, 0x50, 0xd9, 0x21, 0x20, 0x02, 0xdb, 0x30, 0xad, 0x00, 0xa4, 0xa6, 0xaf};

void init_oled()
{
	for(int i = 0; i < 22; i++) {
     8dc:	01 96       	adiw	r24, 0x01	; 1
     8de:	86 31       	cpi	r24, 0x16	; 22
     8e0:	91 05       	cpc	r25, r1
     8e2:	b4 f3       	brlt	.-20     	; 0x8d0 <init_oled+0x6>
		oled_c_base[0] = init_data[i];
		//printf("\n\r%x", init_data[i]);
	}
	*oled_c_base = 0x20;
     8e4:	e0 e0       	ldi	r30, 0x00	; 0
     8e6:	f0 e1       	ldi	r31, 0x10	; 16
     8e8:	80 e2       	ldi	r24, 0x20	; 32
     8ea:	80 83       	st	Z, r24
	*oled_c_base = 0x02;
     8ec:	82 e0       	ldi	r24, 0x02	; 2
     8ee:	80 83       	st	Z, r24
     8f0:	08 95       	ret

000008f2 <oled_goto_page_direct>:
}

void oled_goto_page_direct(uint8_t p)
{
	if (p > 7) {
     8f2:	88 30       	cpi	r24, 0x08	; 8
     8f4:	18 f4       	brcc	.+6      	; 0x8fc <oled_goto_page_direct+0xa>
		return;
	}
	*oled_c_base = 0xb0 + p;
     8f6:	80 55       	subi	r24, 0x50	; 80
     8f8:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xd54>
     8fc:	08 95       	ret

000008fe <oled_goto_col_direct>:
}

void oled_goto_col_direct(uint8_t col)
{
	*oled_c_base = 0x21;
     8fe:	e0 e0       	ldi	r30, 0x00	; 0
     900:	f0 e1       	ldi	r31, 0x10	; 16
     902:	91 e2       	ldi	r25, 0x21	; 33
     904:	90 83       	st	Z, r25
	*oled_c_base = 0x00 + col;
     906:	80 83       	st	Z, r24
	*oled_c_base = 0xFF;
     908:	8f ef       	ldi	r24, 0xFF	; 255
     90a:	80 83       	st	Z, r24
     90c:	08 95       	ret

0000090e <oled_goto_page>:
}

void oled_goto_page(uint8_t p)
{
	if (p > 7) {
     90e:	88 30       	cpi	r24, 0x08	; 8
     910:	40 f4       	brcc	.+16     	; 0x922 <oled_goto_page+0x14>
		return;
	}
	current_adr = 128 * p;
     912:	20 e8       	ldi	r18, 0x80	; 128
     914:	82 9f       	mul	r24, r18
     916:	c0 01       	movw	r24, r0
     918:	11 24       	eor	r1, r1
     91a:	90 93 a1 02 	sts	0x02A1, r25	; 0x8002a1 <current_adr+0x1>
     91e:	80 93 a0 02 	sts	0x02A0, r24	; 0x8002a0 <current_adr>
     922:	08 95       	ret

00000924 <oled_goto_col>:
}

void oled_goto_col(uint8_t col)
{
	uint8_t page = current_adr / 128;
     924:	20 91 a0 02 	lds	r18, 0x02A0	; 0x8002a0 <current_adr>
     928:	30 91 a1 02 	lds	r19, 0x02A1	; 0x8002a1 <current_adr+0x1>
     92c:	22 0f       	add	r18, r18
     92e:	23 2f       	mov	r18, r19
     930:	22 1f       	adc	r18, r18
     932:	33 0b       	sbc	r19, r19
     934:	31 95       	neg	r19
	current_adr = page * 128 + col;
     936:	33 27       	eor	r19, r19
     938:	36 95       	lsr	r19
     93a:	32 2f       	mov	r19, r18
     93c:	22 27       	eor	r18, r18
     93e:	37 95       	ror	r19
     940:	27 95       	ror	r18
     942:	28 0f       	add	r18, r24
     944:	31 1d       	adc	r19, r1
     946:	30 93 a1 02 	sts	0x02A1, r19	; 0x8002a1 <current_adr+0x1>
     94a:	20 93 a0 02 	sts	0x02A0, r18	; 0x8002a0 <current_adr>
     94e:	08 95       	ret

00000950 <oled_write>:
}


void oled_write(unsigned char c){
	oled_sram_base[current_adr] = c;
     950:	20 91 a0 02 	lds	r18, 0x02A0	; 0x8002a0 <current_adr>
     954:	30 91 a1 02 	lds	r19, 0x02A1	; 0x8002a1 <current_adr+0x1>
     958:	f9 01       	movw	r30, r18
     95a:	f4 5e       	subi	r31, 0xE4	; 228
     95c:	80 83       	st	Z, r24
	current_adr++;
     95e:	2f 5f       	subi	r18, 0xFF	; 255
     960:	3f 4f       	sbci	r19, 0xFF	; 255
	current_adr %= 1024;
     962:	33 70       	andi	r19, 0x03	; 3
     964:	30 93 a1 02 	sts	0x02A1, r19	; 0x8002a1 <current_adr+0x1>
     968:	20 93 a0 02 	sts	0x02A0, r18	; 0x8002a0 <current_adr>
     96c:	08 95       	ret

0000096e <oled_fill_entire>:
}

void oled_fill_entire(unsigned char c)
{	
	for(int i = 0; i < 1024; i++) {
     96e:	20 e0       	ldi	r18, 0x00	; 0
     970:	30 e0       	ldi	r19, 0x00	; 0
     972:	05 c0       	rjmp	.+10     	; 0x97e <oled_fill_entire+0x10>
		//if (i % 128 == 0) *oled_c_base = 0xb0 + i / 128;
		oled_sram_base[i] = c;
     974:	f9 01       	movw	r30, r18
     976:	f4 5e       	subi	r31, 0xE4	; 228
     978:	80 83       	st	Z, r24
	current_adr %= 1024;
}

void oled_fill_entire(unsigned char c)
{	
	for(int i = 0; i < 1024; i++) {
     97a:	2f 5f       	subi	r18, 0xFF	; 255
     97c:	3f 4f       	sbci	r19, 0xFF	; 255
     97e:	21 15       	cp	r18, r1
     980:	94 e0       	ldi	r25, 0x04	; 4
     982:	39 07       	cpc	r19, r25
     984:	bc f3       	brlt	.-18     	; 0x974 <oled_fill_entire+0x6>
		//if (i % 128 == 0) *oled_c_base = 0xb0 + i / 128;
		oled_sram_base[i] = c;
	}
	current_adr = 0;
     986:	10 92 a1 02 	sts	0x02A1, r1	; 0x8002a1 <current_adr+0x1>
     98a:	10 92 a0 02 	sts	0x02A0, r1	; 0x8002a0 <current_adr>
     98e:	08 95       	ret

00000990 <oled_write_char>:
}

int oled_write_char(char c, FILE* file)
{
	if (c == '\n'){
     990:	8a 30       	cpi	r24, 0x0A	; 10
     992:	69 f4       	brne	.+26     	; 0x9ae <oled_write_char+0x1e>
		//current_page++;
		//current_page %= 8;
		//*oled_c_base = 0xb0 + current_page;
		current_adr += 128;
     994:	80 91 a0 02 	lds	r24, 0x02A0	; 0x8002a0 <current_adr>
     998:	90 91 a1 02 	lds	r25, 0x02A1	; 0x8002a1 <current_adr+0x1>
     99c:	80 58       	subi	r24, 0x80	; 128
     99e:	9f 4f       	sbci	r25, 0xFF	; 255
     9a0:	90 93 a1 02 	sts	0x02A1, r25	; 0x8002a1 <current_adr+0x1>
     9a4:	80 93 a0 02 	sts	0x02A0, r24	; 0x8002a0 <current_adr>
		return 0;
     9a8:	80 e0       	ldi	r24, 0x00	; 0
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	08 95       	ret
	} else if (c == '\r') {
     9ae:	8d 30       	cpi	r24, 0x0D	; 13
     9b0:	49 f4       	brne	.+18     	; 0x9c4 <oled_write_char+0x34>
		//*oled_c_base = 0x21;
		//*oled_c_base = 0x00;
		//*oled_c_base = 0xFF;
		current_adr = current_adr - (current_adr % 128);
     9b2:	20 91 a0 02 	lds	r18, 0x02A0	; 0x8002a0 <current_adr>
     9b6:	30 91 a1 02 	lds	r19, 0x02A1	; 0x8002a1 <current_adr+0x1>
     9ba:	20 78       	andi	r18, 0x80	; 128
     9bc:	30 93 a1 02 	sts	0x02A1, r19	; 0x8002a1 <current_adr+0x1>
     9c0:	20 93 a0 02 	sts	0x02A0, r18	; 0x8002a0 <current_adr>
	}
	int size = 4;
	if (c < 32 || c > 127) return 1;
     9c4:	90 ee       	ldi	r25, 0xE0	; 224
     9c6:	98 0f       	add	r25, r24
     9c8:	90 36       	cpi	r25, 0x60	; 96
     9ca:	28 f5       	brcc	.+74     	; 0xa16 <oled_write_char+0x86>
     9cc:	40 e0       	ldi	r20, 0x00	; 0
     9ce:	50 e0       	ldi	r21, 0x00	; 0
     9d0:	1c c0       	rjmp	.+56     	; 0xa0a <oled_write_char+0x7a>
	switch(size){
		case 4:
			for(int i = 0; i < size; i++){
				oled_sram_base[current_adr] = pgm_read_byte(&(font4[c - 32][i]));
     9d2:	20 91 a0 02 	lds	r18, 0x02A0	; 0x8002a0 <current_adr>
     9d6:	30 91 a1 02 	lds	r19, 0x02A1	; 0x8002a1 <current_adr+0x1>
     9da:	d9 01       	movw	r26, r18
     9dc:	b4 5e       	subi	r27, 0xE4	; 228
     9de:	e8 2f       	mov	r30, r24
     9e0:	f0 e0       	ldi	r31, 0x00	; 0
     9e2:	b0 97       	sbiw	r30, 0x20	; 32
     9e4:	ee 0f       	add	r30, r30
     9e6:	ff 1f       	adc	r31, r31
     9e8:	ee 0f       	add	r30, r30
     9ea:	ff 1f       	adc	r31, r31
     9ec:	e4 0f       	add	r30, r20
     9ee:	f5 1f       	adc	r31, r21
     9f0:	e0 59       	subi	r30, 0x90	; 144
     9f2:	ff 4f       	sbci	r31, 0xFF	; 255
     9f4:	e4 91       	lpm	r30, Z
     9f6:	ec 93       	st	X, r30
				current_adr++;
     9f8:	2f 5f       	subi	r18, 0xFF	; 255
     9fa:	3f 4f       	sbci	r19, 0xFF	; 255
				current_adr %= 1024;
     9fc:	33 70       	andi	r19, 0x03	; 3
     9fe:	30 93 a1 02 	sts	0x02A1, r19	; 0x8002a1 <current_adr+0x1>
     a02:	20 93 a0 02 	sts	0x02A0, r18	; 0x8002a0 <current_adr>
	}
	int size = 4;
	if (c < 32 || c > 127) return 1;
	switch(size){
		case 4:
			for(int i = 0; i < size; i++){
     a06:	4f 5f       	subi	r20, 0xFF	; 255
     a08:	5f 4f       	sbci	r21, 0xFF	; 255
     a0a:	44 30       	cpi	r20, 0x04	; 4
     a0c:	51 05       	cpc	r21, r1
     a0e:	0c f3       	brlt	.-62     	; 0x9d2 <oled_write_char+0x42>
			}
			break;
		default: 
			return 1;
	}
	return 0;
     a10:	80 e0       	ldi	r24, 0x00	; 0
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	08 95       	ret
		//*oled_c_base = 0x00;
		//*oled_c_base = 0xFF;
		current_adr = current_adr - (current_adr % 128);
	}
	int size = 4;
	if (c < 32 || c > 127) return 1;
     a16:	81 e0       	ldi	r24, 0x01	; 1
     a18:	90 e0       	ldi	r25, 0x00	; 0
			break;
		default: 
			return 1;
	}
	return 0;
}
     a1a:	08 95       	ret

00000a1c <oled_write_string_on_line>:

void oled_write_string_on_line(char* s, uint8_t len, uint8_t line)
{
     a1c:	ef 92       	push	r14
     a1e:	ff 92       	push	r15
     a20:	1f 93       	push	r17
     a22:	cf 93       	push	r28
     a24:	df 93       	push	r29
	if (line > 7) return;
     a26:	48 30       	cpi	r20, 0x08	; 8
     a28:	20 f5       	brcc	.+72     	; 0xa72 <oled_write_string_on_line+0x56>
     a2a:	16 2f       	mov	r17, r22
     a2c:	7c 01       	movw	r14, r24
	current_adr = 128 * line;
     a2e:	20 e8       	ldi	r18, 0x80	; 128
     a30:	42 9f       	mul	r20, r18
     a32:	c0 01       	movw	r24, r0
     a34:	11 24       	eor	r1, r1
     a36:	90 93 a1 02 	sts	0x02A1, r25	; 0x8002a1 <current_adr+0x1>
     a3a:	80 93 a0 02 	sts	0x02A0, r24	; 0x8002a0 <current_adr>
	for (int i = 0; i < 128 / 4; i++)
     a3e:	c0 e0       	ldi	r28, 0x00	; 0
     a40:	d0 e0       	ldi	r29, 0x00	; 0
     a42:	14 c0       	rjmp	.+40     	; 0xa6c <oled_write_string_on_line+0x50>
	{
		if(i < len) oled_write_char(s[i], NULL);
     a44:	21 2f       	mov	r18, r17
     a46:	30 e0       	ldi	r19, 0x00	; 0
     a48:	c2 17       	cp	r28, r18
     a4a:	d3 07       	cpc	r29, r19
     a4c:	4c f4       	brge	.+18     	; 0xa60 <oled_write_string_on_line+0x44>
     a4e:	60 e0       	ldi	r22, 0x00	; 0
     a50:	70 e0       	ldi	r23, 0x00	; 0
     a52:	f7 01       	movw	r30, r14
     a54:	ec 0f       	add	r30, r28
     a56:	fd 1f       	adc	r31, r29
     a58:	80 81       	ld	r24, Z
     a5a:	0e 94 c8 04 	call	0x990	; 0x990 <oled_write_char>
     a5e:	05 c0       	rjmp	.+10     	; 0xa6a <oled_write_string_on_line+0x4e>
		else		oled_write_char(' ', NULL);
     a60:	60 e0       	ldi	r22, 0x00	; 0
     a62:	70 e0       	ldi	r23, 0x00	; 0
     a64:	80 e2       	ldi	r24, 0x20	; 32
     a66:	0e 94 c8 04 	call	0x990	; 0x990 <oled_write_char>

void oled_write_string_on_line(char* s, uint8_t len, uint8_t line)
{
	if (line > 7) return;
	current_adr = 128 * line;
	for (int i = 0; i < 128 / 4; i++)
     a6a:	21 96       	adiw	r28, 0x01	; 1
     a6c:	c0 32       	cpi	r28, 0x20	; 32
     a6e:	d1 05       	cpc	r29, r1
     a70:	4c f3       	brlt	.-46     	; 0xa44 <oled_write_string_on_line+0x28>
	{
		if(i < len) oled_write_char(s[i], NULL);
		else		oled_write_char(' ', NULL);
	}
}
     a72:	df 91       	pop	r29
     a74:	cf 91       	pop	r28
     a76:	1f 91       	pop	r17
     a78:	ff 90       	pop	r15
     a7a:	ef 90       	pop	r14
     a7c:	08 95       	ret

00000a7e <oled_render>:

void oled_render()
{
     a7e:	cf 93       	push	r28
     a80:	df 93       	push	r29
	/*
	SRAM 0x1800 - 0x1FFF
	*/
	//oled_fill_entire(0xff);
	// current_adr = 0;
	oled_goto_page_direct(0);
     a82:	80 e0       	ldi	r24, 0x00	; 0
     a84:	0e 94 79 04 	call	0x8f2	; 0x8f2 <oled_goto_page_direct>
	oled_goto_col_direct(0);
     a88:	80 e0       	ldi	r24, 0x00	; 0
     a8a:	0e 94 7f 04 	call	0x8fe	; 0x8fe <oled_goto_col_direct>
	for(int i = 0; i < 1024; i++){
     a8e:	c0 e0       	ldi	r28, 0x00	; 0
     a90:	d0 e0       	ldi	r29, 0x00	; 0
     a92:	16 c0       	rjmp	.+44     	; 0xac0 <oled_render+0x42>
		*oled_d_base = oled_sram_base[i];
     a94:	fe 01       	movw	r30, r28
     a96:	f4 5e       	subi	r31, 0xE4	; 228
     a98:	80 81       	ld	r24, Z
     a9a:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xf54>
		if (i % 128 == 0) oled_goto_page_direct(i / 128);
     a9e:	ce 01       	movw	r24, r28
     aa0:	8f 77       	andi	r24, 0x7F	; 127
     aa2:	99 27       	eor	r25, r25
     aa4:	89 2b       	or	r24, r25
     aa6:	59 f4       	brne	.+22     	; 0xabe <oled_render+0x40>
     aa8:	ce 01       	movw	r24, r28
     aaa:	dd 23       	and	r29, r29
     aac:	14 f4       	brge	.+4      	; 0xab2 <oled_render+0x34>
     aae:	81 58       	subi	r24, 0x81	; 129
     ab0:	9f 4f       	sbci	r25, 0xFF	; 255
     ab2:	88 0f       	add	r24, r24
     ab4:	89 2f       	mov	r24, r25
     ab6:	88 1f       	adc	r24, r24
     ab8:	99 0b       	sbc	r25, r25
     aba:	0e 94 79 04 	call	0x8f2	; 0x8f2 <oled_goto_page_direct>
	*/
	//oled_fill_entire(0xff);
	// current_adr = 0;
	oled_goto_page_direct(0);
	oled_goto_col_direct(0);
	for(int i = 0; i < 1024; i++){
     abe:	21 96       	adiw	r28, 0x01	; 1
     ac0:	c1 15       	cp	r28, r1
     ac2:	84 e0       	ldi	r24, 0x04	; 4
     ac4:	d8 07       	cpc	r29, r24
     ac6:	34 f3       	brlt	.-52     	; 0xa94 <oled_render+0x16>
		*oled_d_base = oled_sram_base[i];
		if (i % 128 == 0) oled_goto_page_direct(i / 128);
	}
     ac8:	df 91       	pop	r29
     aca:	cf 91       	pop	r28
     acc:	08 95       	ret

00000ace <toggle_pin>:

#include "pin_util.h"

void toggle_pin(char port, uint8_t pin)
{
	if(pin > 7){
     ace:	68 30       	cpi	r22, 0x08	; 8
     ad0:	08 f0       	brcs	.+2      	; 0xad4 <toggle_pin+0x6>
     ad2:	88 c0       	rjmp	.+272    	; 0xbe4 <toggle_pin+0x116>
		// too high pin number
		return;
	}
	
	switch (port)
     ad4:	82 34       	cpi	r24, 0x42	; 66
     ad6:	51 f1       	breq	.+84     	; 0xb2c <toggle_pin+0x5e>
     ad8:	18 f4       	brcc	.+6      	; 0xae0 <toggle_pin+0x12>
     ada:	81 34       	cpi	r24, 0x41	; 65
     adc:	41 f0       	breq	.+16     	; 0xaee <toggle_pin+0x20>
     ade:	08 95       	ret
     ae0:	83 34       	cpi	r24, 0x43	; 67
     ae2:	09 f4       	brne	.+2      	; 0xae6 <toggle_pin+0x18>
     ae4:	42 c0       	rjmp	.+132    	; 0xb6a <toggle_pin+0x9c>
     ae6:	84 34       	cpi	r24, 0x44	; 68
     ae8:	09 f4       	brne	.+2      	; 0xaec <toggle_pin+0x1e>
     aea:	5e c0       	rjmp	.+188    	; 0xba8 <toggle_pin+0xda>
     aec:	08 95       	ret
	{
		unsigned char reg;
		uint8_t pin_value;
		case 'A':
			reg = PINA;
     aee:	89 b3       	in	r24, 0x19	; 25
			// 0000x000
			// 0000000x & 00000001
			pin_value = (reg>>pin)&1;
     af0:	28 2f       	mov	r18, r24
     af2:	30 e0       	ldi	r19, 0x00	; 0
     af4:	06 2e       	mov	r0, r22
     af6:	02 c0       	rjmp	.+4      	; 0xafc <toggle_pin+0x2e>
     af8:	35 95       	asr	r19
     afa:	27 95       	ror	r18
     afc:	0a 94       	dec	r0
     afe:	e2 f7       	brpl	.-8      	; 0xaf8 <toggle_pin+0x2a>
			// reg = xxxxxxxx
			// set_bit(reg, 2)
			// reg = xxxxx1xx
			if (pin_value){
     b00:	20 ff       	sbrs	r18, 0
     b02:	0a c0       	rjmp	.+20     	; 0xb18 <toggle_pin+0x4a>
				clear_bit(reg, pin);
     b04:	21 e0       	ldi	r18, 0x01	; 1
     b06:	30 e0       	ldi	r19, 0x00	; 0
     b08:	02 c0       	rjmp	.+4      	; 0xb0e <toggle_pin+0x40>
     b0a:	22 0f       	add	r18, r18
     b0c:	33 1f       	adc	r19, r19
     b0e:	6a 95       	dec	r22
     b10:	e2 f7       	brpl	.-8      	; 0xb0a <toggle_pin+0x3c>
     b12:	20 95       	com	r18
     b14:	82 23       	and	r24, r18
     b16:	08 c0       	rjmp	.+16     	; 0xb28 <toggle_pin+0x5a>
			} else {
				set_bit(reg, pin);
     b18:	21 e0       	ldi	r18, 0x01	; 1
     b1a:	30 e0       	ldi	r19, 0x00	; 0
     b1c:	02 c0       	rjmp	.+4      	; 0xb22 <toggle_pin+0x54>
     b1e:	22 0f       	add	r18, r18
     b20:	33 1f       	adc	r19, r19
     b22:	6a 95       	dec	r22
     b24:	e2 f7       	brpl	.-8      	; 0xb1e <toggle_pin+0x50>
     b26:	82 2b       	or	r24, r18
			}
			PORTA = reg;
     b28:	8b bb       	out	0x1b, r24	; 27
			break;
     b2a:	08 95       	ret
		case 'B':
			reg = PINB;
     b2c:	86 b3       	in	r24, 0x16	; 22
			pin_value = (reg>>pin)&1;
     b2e:	28 2f       	mov	r18, r24
     b30:	30 e0       	ldi	r19, 0x00	; 0
     b32:	06 2e       	mov	r0, r22
     b34:	02 c0       	rjmp	.+4      	; 0xb3a <toggle_pin+0x6c>
     b36:	35 95       	asr	r19
     b38:	27 95       	ror	r18
     b3a:	0a 94       	dec	r0
     b3c:	e2 f7       	brpl	.-8      	; 0xb36 <toggle_pin+0x68>
			if (pin_value){
     b3e:	20 ff       	sbrs	r18, 0
     b40:	0a c0       	rjmp	.+20     	; 0xb56 <toggle_pin+0x88>
				clear_bit(reg, pin);
     b42:	21 e0       	ldi	r18, 0x01	; 1
     b44:	30 e0       	ldi	r19, 0x00	; 0
     b46:	02 c0       	rjmp	.+4      	; 0xb4c <toggle_pin+0x7e>
     b48:	22 0f       	add	r18, r18
     b4a:	33 1f       	adc	r19, r19
     b4c:	6a 95       	dec	r22
     b4e:	e2 f7       	brpl	.-8      	; 0xb48 <toggle_pin+0x7a>
     b50:	20 95       	com	r18
     b52:	82 23       	and	r24, r18
     b54:	08 c0       	rjmp	.+16     	; 0xb66 <toggle_pin+0x98>
			} else {
				set_bit(reg, pin);
     b56:	21 e0       	ldi	r18, 0x01	; 1
     b58:	30 e0       	ldi	r19, 0x00	; 0
     b5a:	02 c0       	rjmp	.+4      	; 0xb60 <toggle_pin+0x92>
     b5c:	22 0f       	add	r18, r18
     b5e:	33 1f       	adc	r19, r19
     b60:	6a 95       	dec	r22
     b62:	e2 f7       	brpl	.-8      	; 0xb5c <toggle_pin+0x8e>
     b64:	82 2b       	or	r24, r18
			}
			PORTB = reg;
     b66:	88 bb       	out	0x18, r24	; 24
			break;
     b68:	08 95       	ret
		case 'C':
			reg = PINC;
     b6a:	83 b3       	in	r24, 0x13	; 19
			pin_value = (reg>>pin)&1;
     b6c:	28 2f       	mov	r18, r24
     b6e:	30 e0       	ldi	r19, 0x00	; 0
     b70:	06 2e       	mov	r0, r22
     b72:	02 c0       	rjmp	.+4      	; 0xb78 <toggle_pin+0xaa>
     b74:	35 95       	asr	r19
     b76:	27 95       	ror	r18
     b78:	0a 94       	dec	r0
     b7a:	e2 f7       	brpl	.-8      	; 0xb74 <toggle_pin+0xa6>
			if (pin_value){
     b7c:	20 ff       	sbrs	r18, 0
     b7e:	0a c0       	rjmp	.+20     	; 0xb94 <toggle_pin+0xc6>
				clear_bit(reg, pin);
     b80:	21 e0       	ldi	r18, 0x01	; 1
     b82:	30 e0       	ldi	r19, 0x00	; 0
     b84:	02 c0       	rjmp	.+4      	; 0xb8a <toggle_pin+0xbc>
     b86:	22 0f       	add	r18, r18
     b88:	33 1f       	adc	r19, r19
     b8a:	6a 95       	dec	r22
     b8c:	e2 f7       	brpl	.-8      	; 0xb86 <toggle_pin+0xb8>
     b8e:	20 95       	com	r18
     b90:	82 23       	and	r24, r18
     b92:	08 c0       	rjmp	.+16     	; 0xba4 <toggle_pin+0xd6>
			} else {
				set_bit(reg, pin);
     b94:	21 e0       	ldi	r18, 0x01	; 1
     b96:	30 e0       	ldi	r19, 0x00	; 0
     b98:	02 c0       	rjmp	.+4      	; 0xb9e <toggle_pin+0xd0>
     b9a:	22 0f       	add	r18, r18
     b9c:	33 1f       	adc	r19, r19
     b9e:	6a 95       	dec	r22
     ba0:	e2 f7       	brpl	.-8      	; 0xb9a <toggle_pin+0xcc>
     ba2:	82 2b       	or	r24, r18
			}
			PORTC = reg;
     ba4:	85 bb       	out	0x15, r24	; 21
			break;
     ba6:	08 95       	ret
		case 'D':
			reg = PIND;
     ba8:	80 b3       	in	r24, 0x10	; 16
			pin_value = (reg>>pin)&1;
     baa:	28 2f       	mov	r18, r24
     bac:	30 e0       	ldi	r19, 0x00	; 0
     bae:	06 2e       	mov	r0, r22
     bb0:	02 c0       	rjmp	.+4      	; 0xbb6 <toggle_pin+0xe8>
     bb2:	35 95       	asr	r19
     bb4:	27 95       	ror	r18
     bb6:	0a 94       	dec	r0
     bb8:	e2 f7       	brpl	.-8      	; 0xbb2 <toggle_pin+0xe4>
			if (pin_value){
     bba:	20 ff       	sbrs	r18, 0
     bbc:	0a c0       	rjmp	.+20     	; 0xbd2 <toggle_pin+0x104>
				clear_bit(reg, pin);
     bbe:	21 e0       	ldi	r18, 0x01	; 1
     bc0:	30 e0       	ldi	r19, 0x00	; 0
     bc2:	02 c0       	rjmp	.+4      	; 0xbc8 <toggle_pin+0xfa>
     bc4:	22 0f       	add	r18, r18
     bc6:	33 1f       	adc	r19, r19
     bc8:	6a 95       	dec	r22
     bca:	e2 f7       	brpl	.-8      	; 0xbc4 <toggle_pin+0xf6>
     bcc:	20 95       	com	r18
     bce:	82 23       	and	r24, r18
     bd0:	08 c0       	rjmp	.+16     	; 0xbe2 <toggle_pin+0x114>
			} else {
				set_bit(reg, pin);
     bd2:	21 e0       	ldi	r18, 0x01	; 1
     bd4:	30 e0       	ldi	r19, 0x00	; 0
     bd6:	02 c0       	rjmp	.+4      	; 0xbdc <toggle_pin+0x10e>
     bd8:	22 0f       	add	r18, r18
     bda:	33 1f       	adc	r19, r19
     bdc:	6a 95       	dec	r22
     bde:	e2 f7       	brpl	.-8      	; 0xbd8 <toggle_pin+0x10a>
     be0:	82 2b       	or	r24, r18
			}
			PORTD = reg;
     be2:	82 bb       	out	0x12, r24	; 18
     be4:	08 95       	ret

00000be6 <USART_Init>:
// Following functions are taken from "Atmel AVR ATmega162 datasheet"

void USART_Init(unsigned int ubrr)
{
	/* set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     be6:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
     be8:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
     bea:	88 e1       	ldi	r24, 0x18	; 24
     bec:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0) | (1<<USBS0) | (3<<UCSZ00);
     bee:	8e e8       	ldi	r24, 0x8E	; 142
     bf0:	80 bd       	out	0x20, r24	; 32
     bf2:	08 95       	ret

00000bf4 <USART_Transmit>:
}

int USART_Transmit (char data, FILE* file)
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0) ));
     bf4:	5d 9b       	sbis	0x0b, 5	; 11
     bf6:	fe cf       	rjmp	.-4      	; 0xbf4 <USART_Transmit>
	
	/* Put data into buffer, sends the data */
	UDR0 = data;
     bf8:	8c b9       	out	0x0c, r24	; 12
	return 0;
}
     bfa:	80 e0       	ldi	r24, 0x00	; 0
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	08 95       	ret

00000c00 <USART_Receive>:

int USART_Receive ( FILE* file )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) );
     c00:	5f 9b       	sbis	0x0b, 7	; 11
     c02:	fe cf       	rjmp	.-4      	; 0xc00 <USART_Receive>
	
	/* Get and return received data from buffer */
	return UDR0;
     c04:	8c b1       	in	r24, 0x0c	; 12
}
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	08 95       	ret

00000c0a <malloc>:
     c0a:	0f 93       	push	r16
     c0c:	1f 93       	push	r17
     c0e:	cf 93       	push	r28
     c10:	df 93       	push	r29
     c12:	82 30       	cpi	r24, 0x02	; 2
     c14:	91 05       	cpc	r25, r1
     c16:	10 f4       	brcc	.+4      	; 0xc1c <malloc+0x12>
     c18:	82 e0       	ldi	r24, 0x02	; 2
     c1a:	90 e0       	ldi	r25, 0x00	; 0
     c1c:	e0 91 a4 02 	lds	r30, 0x02A4	; 0x8002a4 <__flp>
     c20:	f0 91 a5 02 	lds	r31, 0x02A5	; 0x8002a5 <__flp+0x1>
     c24:	20 e0       	ldi	r18, 0x00	; 0
     c26:	30 e0       	ldi	r19, 0x00	; 0
     c28:	a0 e0       	ldi	r26, 0x00	; 0
     c2a:	b0 e0       	ldi	r27, 0x00	; 0
     c2c:	30 97       	sbiw	r30, 0x00	; 0
     c2e:	19 f1       	breq	.+70     	; 0xc76 <malloc+0x6c>
     c30:	40 81       	ld	r20, Z
     c32:	51 81       	ldd	r21, Z+1	; 0x01
     c34:	02 81       	ldd	r16, Z+2	; 0x02
     c36:	13 81       	ldd	r17, Z+3	; 0x03
     c38:	48 17       	cp	r20, r24
     c3a:	59 07       	cpc	r21, r25
     c3c:	c8 f0       	brcs	.+50     	; 0xc70 <malloc+0x66>
     c3e:	84 17       	cp	r24, r20
     c40:	95 07       	cpc	r25, r21
     c42:	69 f4       	brne	.+26     	; 0xc5e <malloc+0x54>
     c44:	10 97       	sbiw	r26, 0x00	; 0
     c46:	31 f0       	breq	.+12     	; 0xc54 <malloc+0x4a>
     c48:	12 96       	adiw	r26, 0x02	; 2
     c4a:	0c 93       	st	X, r16
     c4c:	12 97       	sbiw	r26, 0x02	; 2
     c4e:	13 96       	adiw	r26, 0x03	; 3
     c50:	1c 93       	st	X, r17
     c52:	27 c0       	rjmp	.+78     	; 0xca2 <malloc+0x98>
     c54:	00 93 a4 02 	sts	0x02A4, r16	; 0x8002a4 <__flp>
     c58:	10 93 a5 02 	sts	0x02A5, r17	; 0x8002a5 <__flp+0x1>
     c5c:	22 c0       	rjmp	.+68     	; 0xca2 <malloc+0x98>
     c5e:	21 15       	cp	r18, r1
     c60:	31 05       	cpc	r19, r1
     c62:	19 f0       	breq	.+6      	; 0xc6a <malloc+0x60>
     c64:	42 17       	cp	r20, r18
     c66:	53 07       	cpc	r21, r19
     c68:	18 f4       	brcc	.+6      	; 0xc70 <malloc+0x66>
     c6a:	9a 01       	movw	r18, r20
     c6c:	bd 01       	movw	r22, r26
     c6e:	ef 01       	movw	r28, r30
     c70:	df 01       	movw	r26, r30
     c72:	f8 01       	movw	r30, r16
     c74:	db cf       	rjmp	.-74     	; 0xc2c <malloc+0x22>
     c76:	21 15       	cp	r18, r1
     c78:	31 05       	cpc	r19, r1
     c7a:	f9 f0       	breq	.+62     	; 0xcba <malloc+0xb0>
     c7c:	28 1b       	sub	r18, r24
     c7e:	39 0b       	sbc	r19, r25
     c80:	24 30       	cpi	r18, 0x04	; 4
     c82:	31 05       	cpc	r19, r1
     c84:	80 f4       	brcc	.+32     	; 0xca6 <malloc+0x9c>
     c86:	8a 81       	ldd	r24, Y+2	; 0x02
     c88:	9b 81       	ldd	r25, Y+3	; 0x03
     c8a:	61 15       	cp	r22, r1
     c8c:	71 05       	cpc	r23, r1
     c8e:	21 f0       	breq	.+8      	; 0xc98 <malloc+0x8e>
     c90:	fb 01       	movw	r30, r22
     c92:	93 83       	std	Z+3, r25	; 0x03
     c94:	82 83       	std	Z+2, r24	; 0x02
     c96:	04 c0       	rjmp	.+8      	; 0xca0 <malloc+0x96>
     c98:	90 93 a5 02 	sts	0x02A5, r25	; 0x8002a5 <__flp+0x1>
     c9c:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <__flp>
     ca0:	fe 01       	movw	r30, r28
     ca2:	32 96       	adiw	r30, 0x02	; 2
     ca4:	44 c0       	rjmp	.+136    	; 0xd2e <malloc+0x124>
     ca6:	fe 01       	movw	r30, r28
     ca8:	e2 0f       	add	r30, r18
     caa:	f3 1f       	adc	r31, r19
     cac:	81 93       	st	Z+, r24
     cae:	91 93       	st	Z+, r25
     cb0:	22 50       	subi	r18, 0x02	; 2
     cb2:	31 09       	sbc	r19, r1
     cb4:	39 83       	std	Y+1, r19	; 0x01
     cb6:	28 83       	st	Y, r18
     cb8:	3a c0       	rjmp	.+116    	; 0xd2e <malloc+0x124>
     cba:	20 91 a2 02 	lds	r18, 0x02A2	; 0x8002a2 <__brkval>
     cbe:	30 91 a3 02 	lds	r19, 0x02A3	; 0x8002a3 <__brkval+0x1>
     cc2:	23 2b       	or	r18, r19
     cc4:	41 f4       	brne	.+16     	; 0xcd6 <malloc+0xcc>
     cc6:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     cca:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     cce:	30 93 a3 02 	sts	0x02A3, r19	; 0x8002a3 <__brkval+0x1>
     cd2:	20 93 a2 02 	sts	0x02A2, r18	; 0x8002a2 <__brkval>
     cd6:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     cda:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     cde:	21 15       	cp	r18, r1
     ce0:	31 05       	cpc	r19, r1
     ce2:	41 f4       	brne	.+16     	; 0xcf4 <malloc+0xea>
     ce4:	2d b7       	in	r18, 0x3d	; 61
     ce6:	3e b7       	in	r19, 0x3e	; 62
     ce8:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     cec:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     cf0:	24 1b       	sub	r18, r20
     cf2:	35 0b       	sbc	r19, r21
     cf4:	e0 91 a2 02 	lds	r30, 0x02A2	; 0x8002a2 <__brkval>
     cf8:	f0 91 a3 02 	lds	r31, 0x02A3	; 0x8002a3 <__brkval+0x1>
     cfc:	e2 17       	cp	r30, r18
     cfe:	f3 07       	cpc	r31, r19
     d00:	a0 f4       	brcc	.+40     	; 0xd2a <malloc+0x120>
     d02:	2e 1b       	sub	r18, r30
     d04:	3f 0b       	sbc	r19, r31
     d06:	28 17       	cp	r18, r24
     d08:	39 07       	cpc	r19, r25
     d0a:	78 f0       	brcs	.+30     	; 0xd2a <malloc+0x120>
     d0c:	ac 01       	movw	r20, r24
     d0e:	4e 5f       	subi	r20, 0xFE	; 254
     d10:	5f 4f       	sbci	r21, 0xFF	; 255
     d12:	24 17       	cp	r18, r20
     d14:	35 07       	cpc	r19, r21
     d16:	48 f0       	brcs	.+18     	; 0xd2a <malloc+0x120>
     d18:	4e 0f       	add	r20, r30
     d1a:	5f 1f       	adc	r21, r31
     d1c:	50 93 a3 02 	sts	0x02A3, r21	; 0x8002a3 <__brkval+0x1>
     d20:	40 93 a2 02 	sts	0x02A2, r20	; 0x8002a2 <__brkval>
     d24:	81 93       	st	Z+, r24
     d26:	91 93       	st	Z+, r25
     d28:	02 c0       	rjmp	.+4      	; 0xd2e <malloc+0x124>
     d2a:	e0 e0       	ldi	r30, 0x00	; 0
     d2c:	f0 e0       	ldi	r31, 0x00	; 0
     d2e:	cf 01       	movw	r24, r30
     d30:	df 91       	pop	r29
     d32:	cf 91       	pop	r28
     d34:	1f 91       	pop	r17
     d36:	0f 91       	pop	r16
     d38:	08 95       	ret

00000d3a <free>:
     d3a:	cf 93       	push	r28
     d3c:	df 93       	push	r29
     d3e:	00 97       	sbiw	r24, 0x00	; 0
     d40:	09 f4       	brne	.+2      	; 0xd44 <free+0xa>
     d42:	81 c0       	rjmp	.+258    	; 0xe46 <free+0x10c>
     d44:	fc 01       	movw	r30, r24
     d46:	32 97       	sbiw	r30, 0x02	; 2
     d48:	13 82       	std	Z+3, r1	; 0x03
     d4a:	12 82       	std	Z+2, r1	; 0x02
     d4c:	a0 91 a4 02 	lds	r26, 0x02A4	; 0x8002a4 <__flp>
     d50:	b0 91 a5 02 	lds	r27, 0x02A5	; 0x8002a5 <__flp+0x1>
     d54:	10 97       	sbiw	r26, 0x00	; 0
     d56:	81 f4       	brne	.+32     	; 0xd78 <free+0x3e>
     d58:	20 81       	ld	r18, Z
     d5a:	31 81       	ldd	r19, Z+1	; 0x01
     d5c:	82 0f       	add	r24, r18
     d5e:	93 1f       	adc	r25, r19
     d60:	20 91 a2 02 	lds	r18, 0x02A2	; 0x8002a2 <__brkval>
     d64:	30 91 a3 02 	lds	r19, 0x02A3	; 0x8002a3 <__brkval+0x1>
     d68:	28 17       	cp	r18, r24
     d6a:	39 07       	cpc	r19, r25
     d6c:	51 f5       	brne	.+84     	; 0xdc2 <free+0x88>
     d6e:	f0 93 a3 02 	sts	0x02A3, r31	; 0x8002a3 <__brkval+0x1>
     d72:	e0 93 a2 02 	sts	0x02A2, r30	; 0x8002a2 <__brkval>
     d76:	67 c0       	rjmp	.+206    	; 0xe46 <free+0x10c>
     d78:	ed 01       	movw	r28, r26
     d7a:	20 e0       	ldi	r18, 0x00	; 0
     d7c:	30 e0       	ldi	r19, 0x00	; 0
     d7e:	ce 17       	cp	r28, r30
     d80:	df 07       	cpc	r29, r31
     d82:	40 f4       	brcc	.+16     	; 0xd94 <free+0x5a>
     d84:	4a 81       	ldd	r20, Y+2	; 0x02
     d86:	5b 81       	ldd	r21, Y+3	; 0x03
     d88:	9e 01       	movw	r18, r28
     d8a:	41 15       	cp	r20, r1
     d8c:	51 05       	cpc	r21, r1
     d8e:	f1 f0       	breq	.+60     	; 0xdcc <free+0x92>
     d90:	ea 01       	movw	r28, r20
     d92:	f5 cf       	rjmp	.-22     	; 0xd7e <free+0x44>
     d94:	d3 83       	std	Z+3, r29	; 0x03
     d96:	c2 83       	std	Z+2, r28	; 0x02
     d98:	40 81       	ld	r20, Z
     d9a:	51 81       	ldd	r21, Z+1	; 0x01
     d9c:	84 0f       	add	r24, r20
     d9e:	95 1f       	adc	r25, r21
     da0:	c8 17       	cp	r28, r24
     da2:	d9 07       	cpc	r29, r25
     da4:	59 f4       	brne	.+22     	; 0xdbc <free+0x82>
     da6:	88 81       	ld	r24, Y
     da8:	99 81       	ldd	r25, Y+1	; 0x01
     daa:	84 0f       	add	r24, r20
     dac:	95 1f       	adc	r25, r21
     dae:	02 96       	adiw	r24, 0x02	; 2
     db0:	91 83       	std	Z+1, r25	; 0x01
     db2:	80 83       	st	Z, r24
     db4:	8a 81       	ldd	r24, Y+2	; 0x02
     db6:	9b 81       	ldd	r25, Y+3	; 0x03
     db8:	93 83       	std	Z+3, r25	; 0x03
     dba:	82 83       	std	Z+2, r24	; 0x02
     dbc:	21 15       	cp	r18, r1
     dbe:	31 05       	cpc	r19, r1
     dc0:	29 f4       	brne	.+10     	; 0xdcc <free+0x92>
     dc2:	f0 93 a5 02 	sts	0x02A5, r31	; 0x8002a5 <__flp+0x1>
     dc6:	e0 93 a4 02 	sts	0x02A4, r30	; 0x8002a4 <__flp>
     dca:	3d c0       	rjmp	.+122    	; 0xe46 <free+0x10c>
     dcc:	e9 01       	movw	r28, r18
     dce:	fb 83       	std	Y+3, r31	; 0x03
     dd0:	ea 83       	std	Y+2, r30	; 0x02
     dd2:	49 91       	ld	r20, Y+
     dd4:	59 91       	ld	r21, Y+
     dd6:	c4 0f       	add	r28, r20
     dd8:	d5 1f       	adc	r29, r21
     dda:	ec 17       	cp	r30, r28
     ddc:	fd 07       	cpc	r31, r29
     dde:	61 f4       	brne	.+24     	; 0xdf8 <free+0xbe>
     de0:	80 81       	ld	r24, Z
     de2:	91 81       	ldd	r25, Z+1	; 0x01
     de4:	84 0f       	add	r24, r20
     de6:	95 1f       	adc	r25, r21
     de8:	02 96       	adiw	r24, 0x02	; 2
     dea:	e9 01       	movw	r28, r18
     dec:	99 83       	std	Y+1, r25	; 0x01
     dee:	88 83       	st	Y, r24
     df0:	82 81       	ldd	r24, Z+2	; 0x02
     df2:	93 81       	ldd	r25, Z+3	; 0x03
     df4:	9b 83       	std	Y+3, r25	; 0x03
     df6:	8a 83       	std	Y+2, r24	; 0x02
     df8:	e0 e0       	ldi	r30, 0x00	; 0
     dfa:	f0 e0       	ldi	r31, 0x00	; 0
     dfc:	12 96       	adiw	r26, 0x02	; 2
     dfe:	8d 91       	ld	r24, X+
     e00:	9c 91       	ld	r25, X
     e02:	13 97       	sbiw	r26, 0x03	; 3
     e04:	00 97       	sbiw	r24, 0x00	; 0
     e06:	19 f0       	breq	.+6      	; 0xe0e <free+0xd4>
     e08:	fd 01       	movw	r30, r26
     e0a:	dc 01       	movw	r26, r24
     e0c:	f7 cf       	rjmp	.-18     	; 0xdfc <free+0xc2>
     e0e:	8d 91       	ld	r24, X+
     e10:	9c 91       	ld	r25, X
     e12:	11 97       	sbiw	r26, 0x01	; 1
     e14:	9d 01       	movw	r18, r26
     e16:	2e 5f       	subi	r18, 0xFE	; 254
     e18:	3f 4f       	sbci	r19, 0xFF	; 255
     e1a:	82 0f       	add	r24, r18
     e1c:	93 1f       	adc	r25, r19
     e1e:	20 91 a2 02 	lds	r18, 0x02A2	; 0x8002a2 <__brkval>
     e22:	30 91 a3 02 	lds	r19, 0x02A3	; 0x8002a3 <__brkval+0x1>
     e26:	28 17       	cp	r18, r24
     e28:	39 07       	cpc	r19, r25
     e2a:	69 f4       	brne	.+26     	; 0xe46 <free+0x10c>
     e2c:	30 97       	sbiw	r30, 0x00	; 0
     e2e:	29 f4       	brne	.+10     	; 0xe3a <free+0x100>
     e30:	10 92 a5 02 	sts	0x02A5, r1	; 0x8002a5 <__flp+0x1>
     e34:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <__flp>
     e38:	02 c0       	rjmp	.+4      	; 0xe3e <free+0x104>
     e3a:	13 82       	std	Z+3, r1	; 0x03
     e3c:	12 82       	std	Z+2, r1	; 0x02
     e3e:	b0 93 a3 02 	sts	0x02A3, r27	; 0x8002a3 <__brkval+0x1>
     e42:	a0 93 a2 02 	sts	0x02A2, r26	; 0x8002a2 <__brkval>
     e46:	df 91       	pop	r29
     e48:	cf 91       	pop	r28
     e4a:	08 95       	ret

00000e4c <fdevopen>:
     e4c:	0f 93       	push	r16
     e4e:	1f 93       	push	r17
     e50:	cf 93       	push	r28
     e52:	df 93       	push	r29
     e54:	00 97       	sbiw	r24, 0x00	; 0
     e56:	31 f4       	brne	.+12     	; 0xe64 <fdevopen+0x18>
     e58:	61 15       	cp	r22, r1
     e5a:	71 05       	cpc	r23, r1
     e5c:	19 f4       	brne	.+6      	; 0xe64 <fdevopen+0x18>
     e5e:	80 e0       	ldi	r24, 0x00	; 0
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	3a c0       	rjmp	.+116    	; 0xed8 <fdevopen+0x8c>
     e64:	8b 01       	movw	r16, r22
     e66:	ec 01       	movw	r28, r24
     e68:	6e e0       	ldi	r22, 0x0E	; 14
     e6a:	70 e0       	ldi	r23, 0x00	; 0
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	0e 94 68 09 	call	0x12d0	; 0x12d0 <calloc>
     e74:	fc 01       	movw	r30, r24
     e76:	89 2b       	or	r24, r25
     e78:	91 f3       	breq	.-28     	; 0xe5e <fdevopen+0x12>
     e7a:	80 e8       	ldi	r24, 0x80	; 128
     e7c:	83 83       	std	Z+3, r24	; 0x03
     e7e:	01 15       	cp	r16, r1
     e80:	11 05       	cpc	r17, r1
     e82:	71 f0       	breq	.+28     	; 0xea0 <fdevopen+0x54>
     e84:	13 87       	std	Z+11, r17	; 0x0b
     e86:	02 87       	std	Z+10, r16	; 0x0a
     e88:	81 e8       	ldi	r24, 0x81	; 129
     e8a:	83 83       	std	Z+3, r24	; 0x03
     e8c:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <__iob>
     e90:	90 91 a7 02 	lds	r25, 0x02A7	; 0x8002a7 <__iob+0x1>
     e94:	89 2b       	or	r24, r25
     e96:	21 f4       	brne	.+8      	; 0xea0 <fdevopen+0x54>
     e98:	f0 93 a7 02 	sts	0x02A7, r31	; 0x8002a7 <__iob+0x1>
     e9c:	e0 93 a6 02 	sts	0x02A6, r30	; 0x8002a6 <__iob>
     ea0:	20 97       	sbiw	r28, 0x00	; 0
     ea2:	c9 f0       	breq	.+50     	; 0xed6 <fdevopen+0x8a>
     ea4:	d1 87       	std	Z+9, r29	; 0x09
     ea6:	c0 87       	std	Z+8, r28	; 0x08
     ea8:	83 81       	ldd	r24, Z+3	; 0x03
     eaa:	82 60       	ori	r24, 0x02	; 2
     eac:	83 83       	std	Z+3, r24	; 0x03
     eae:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <__iob+0x2>
     eb2:	90 91 a9 02 	lds	r25, 0x02A9	; 0x8002a9 <__iob+0x3>
     eb6:	89 2b       	or	r24, r25
     eb8:	71 f4       	brne	.+28     	; 0xed6 <fdevopen+0x8a>
     eba:	f0 93 a9 02 	sts	0x02A9, r31	; 0x8002a9 <__iob+0x3>
     ebe:	e0 93 a8 02 	sts	0x02A8, r30	; 0x8002a8 <__iob+0x2>
     ec2:	80 91 aa 02 	lds	r24, 0x02AA	; 0x8002aa <__iob+0x4>
     ec6:	90 91 ab 02 	lds	r25, 0x02AB	; 0x8002ab <__iob+0x5>
     eca:	89 2b       	or	r24, r25
     ecc:	21 f4       	brne	.+8      	; 0xed6 <fdevopen+0x8a>
     ece:	f0 93 ab 02 	sts	0x02AB, r31	; 0x8002ab <__iob+0x5>
     ed2:	e0 93 aa 02 	sts	0x02AA, r30	; 0x8002aa <__iob+0x4>
     ed6:	cf 01       	movw	r24, r30
     ed8:	df 91       	pop	r29
     eda:	cf 91       	pop	r28
     edc:	1f 91       	pop	r17
     ede:	0f 91       	pop	r16
     ee0:	08 95       	ret

00000ee2 <printf>:
     ee2:	a0 e0       	ldi	r26, 0x00	; 0
     ee4:	b0 e0       	ldi	r27, 0x00	; 0
     ee6:	e7 e7       	ldi	r30, 0x77	; 119
     ee8:	f7 e0       	ldi	r31, 0x07	; 7
     eea:	0c 94 4b 0a 	jmp	0x1496	; 0x1496 <__prologue_saves__+0x20>
     eee:	ae 01       	movw	r20, r28
     ef0:	4b 5f       	subi	r20, 0xFB	; 251
     ef2:	5f 4f       	sbci	r21, 0xFF	; 255
     ef4:	fa 01       	movw	r30, r20
     ef6:	61 91       	ld	r22, Z+
     ef8:	71 91       	ld	r23, Z+
     efa:	af 01       	movw	r20, r30
     efc:	80 91 a8 02 	lds	r24, 0x02A8	; 0x8002a8 <__iob+0x2>
     f00:	90 91 a9 02 	lds	r25, 0x02A9	; 0x8002a9 <__iob+0x3>
     f04:	0e 94 87 07 	call	0xf0e	; 0xf0e <vfprintf>
     f08:	e2 e0       	ldi	r30, 0x02	; 2
     f0a:	0c 94 67 0a 	jmp	0x14ce	; 0x14ce <__epilogue_restores__+0x20>

00000f0e <vfprintf>:
     f0e:	ab e0       	ldi	r26, 0x0B	; 11
     f10:	b0 e0       	ldi	r27, 0x00	; 0
     f12:	ed e8       	ldi	r30, 0x8D	; 141
     f14:	f7 e0       	ldi	r31, 0x07	; 7
     f16:	0c 94 3b 0a 	jmp	0x1476	; 0x1476 <__prologue_saves__>
     f1a:	6c 01       	movw	r12, r24
     f1c:	7b 01       	movw	r14, r22
     f1e:	8a 01       	movw	r16, r20
     f20:	fc 01       	movw	r30, r24
     f22:	17 82       	std	Z+7, r1	; 0x07
     f24:	16 82       	std	Z+6, r1	; 0x06
     f26:	83 81       	ldd	r24, Z+3	; 0x03
     f28:	81 ff       	sbrs	r24, 1
     f2a:	cc c1       	rjmp	.+920    	; 0x12c4 <vfprintf+0x3b6>
     f2c:	ce 01       	movw	r24, r28
     f2e:	01 96       	adiw	r24, 0x01	; 1
     f30:	3c 01       	movw	r6, r24
     f32:	f6 01       	movw	r30, r12
     f34:	93 81       	ldd	r25, Z+3	; 0x03
     f36:	f7 01       	movw	r30, r14
     f38:	93 fd       	sbrc	r25, 3
     f3a:	85 91       	lpm	r24, Z+
     f3c:	93 ff       	sbrs	r25, 3
     f3e:	81 91       	ld	r24, Z+
     f40:	7f 01       	movw	r14, r30
     f42:	88 23       	and	r24, r24
     f44:	09 f4       	brne	.+2      	; 0xf48 <vfprintf+0x3a>
     f46:	ba c1       	rjmp	.+884    	; 0x12bc <vfprintf+0x3ae>
     f48:	85 32       	cpi	r24, 0x25	; 37
     f4a:	39 f4       	brne	.+14     	; 0xf5a <vfprintf+0x4c>
     f4c:	93 fd       	sbrc	r25, 3
     f4e:	85 91       	lpm	r24, Z+
     f50:	93 ff       	sbrs	r25, 3
     f52:	81 91       	ld	r24, Z+
     f54:	7f 01       	movw	r14, r30
     f56:	85 32       	cpi	r24, 0x25	; 37
     f58:	29 f4       	brne	.+10     	; 0xf64 <vfprintf+0x56>
     f5a:	b6 01       	movw	r22, r12
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	0e 94 a1 09 	call	0x1342	; 0x1342 <fputc>
     f62:	e7 cf       	rjmp	.-50     	; 0xf32 <vfprintf+0x24>
     f64:	91 2c       	mov	r9, r1
     f66:	21 2c       	mov	r2, r1
     f68:	31 2c       	mov	r3, r1
     f6a:	ff e1       	ldi	r31, 0x1F	; 31
     f6c:	f3 15       	cp	r31, r3
     f6e:	d8 f0       	brcs	.+54     	; 0xfa6 <vfprintf+0x98>
     f70:	8b 32       	cpi	r24, 0x2B	; 43
     f72:	79 f0       	breq	.+30     	; 0xf92 <vfprintf+0x84>
     f74:	38 f4       	brcc	.+14     	; 0xf84 <vfprintf+0x76>
     f76:	80 32       	cpi	r24, 0x20	; 32
     f78:	79 f0       	breq	.+30     	; 0xf98 <vfprintf+0x8a>
     f7a:	83 32       	cpi	r24, 0x23	; 35
     f7c:	a1 f4       	brne	.+40     	; 0xfa6 <vfprintf+0x98>
     f7e:	23 2d       	mov	r18, r3
     f80:	20 61       	ori	r18, 0x10	; 16
     f82:	1d c0       	rjmp	.+58     	; 0xfbe <vfprintf+0xb0>
     f84:	8d 32       	cpi	r24, 0x2D	; 45
     f86:	61 f0       	breq	.+24     	; 0xfa0 <vfprintf+0x92>
     f88:	80 33       	cpi	r24, 0x30	; 48
     f8a:	69 f4       	brne	.+26     	; 0xfa6 <vfprintf+0x98>
     f8c:	23 2d       	mov	r18, r3
     f8e:	21 60       	ori	r18, 0x01	; 1
     f90:	16 c0       	rjmp	.+44     	; 0xfbe <vfprintf+0xb0>
     f92:	83 2d       	mov	r24, r3
     f94:	82 60       	ori	r24, 0x02	; 2
     f96:	38 2e       	mov	r3, r24
     f98:	e3 2d       	mov	r30, r3
     f9a:	e4 60       	ori	r30, 0x04	; 4
     f9c:	3e 2e       	mov	r3, r30
     f9e:	2a c0       	rjmp	.+84     	; 0xff4 <vfprintf+0xe6>
     fa0:	f3 2d       	mov	r31, r3
     fa2:	f8 60       	ori	r31, 0x08	; 8
     fa4:	1d c0       	rjmp	.+58     	; 0xfe0 <vfprintf+0xd2>
     fa6:	37 fc       	sbrc	r3, 7
     fa8:	2d c0       	rjmp	.+90     	; 0x1004 <vfprintf+0xf6>
     faa:	20 ed       	ldi	r18, 0xD0	; 208
     fac:	28 0f       	add	r18, r24
     fae:	2a 30       	cpi	r18, 0x0A	; 10
     fb0:	40 f0       	brcs	.+16     	; 0xfc2 <vfprintf+0xb4>
     fb2:	8e 32       	cpi	r24, 0x2E	; 46
     fb4:	b9 f4       	brne	.+46     	; 0xfe4 <vfprintf+0xd6>
     fb6:	36 fc       	sbrc	r3, 6
     fb8:	81 c1       	rjmp	.+770    	; 0x12bc <vfprintf+0x3ae>
     fba:	23 2d       	mov	r18, r3
     fbc:	20 64       	ori	r18, 0x40	; 64
     fbe:	32 2e       	mov	r3, r18
     fc0:	19 c0       	rjmp	.+50     	; 0xff4 <vfprintf+0xe6>
     fc2:	36 fe       	sbrs	r3, 6
     fc4:	06 c0       	rjmp	.+12     	; 0xfd2 <vfprintf+0xc4>
     fc6:	8a e0       	ldi	r24, 0x0A	; 10
     fc8:	98 9e       	mul	r9, r24
     fca:	20 0d       	add	r18, r0
     fcc:	11 24       	eor	r1, r1
     fce:	92 2e       	mov	r9, r18
     fd0:	11 c0       	rjmp	.+34     	; 0xff4 <vfprintf+0xe6>
     fd2:	ea e0       	ldi	r30, 0x0A	; 10
     fd4:	2e 9e       	mul	r2, r30
     fd6:	20 0d       	add	r18, r0
     fd8:	11 24       	eor	r1, r1
     fda:	22 2e       	mov	r2, r18
     fdc:	f3 2d       	mov	r31, r3
     fde:	f0 62       	ori	r31, 0x20	; 32
     fe0:	3f 2e       	mov	r3, r31
     fe2:	08 c0       	rjmp	.+16     	; 0xff4 <vfprintf+0xe6>
     fe4:	8c 36       	cpi	r24, 0x6C	; 108
     fe6:	21 f4       	brne	.+8      	; 0xff0 <vfprintf+0xe2>
     fe8:	83 2d       	mov	r24, r3
     fea:	80 68       	ori	r24, 0x80	; 128
     fec:	38 2e       	mov	r3, r24
     fee:	02 c0       	rjmp	.+4      	; 0xff4 <vfprintf+0xe6>
     ff0:	88 36       	cpi	r24, 0x68	; 104
     ff2:	41 f4       	brne	.+16     	; 0x1004 <vfprintf+0xf6>
     ff4:	f7 01       	movw	r30, r14
     ff6:	93 fd       	sbrc	r25, 3
     ff8:	85 91       	lpm	r24, Z+
     ffa:	93 ff       	sbrs	r25, 3
     ffc:	81 91       	ld	r24, Z+
     ffe:	7f 01       	movw	r14, r30
    1000:	81 11       	cpse	r24, r1
    1002:	b3 cf       	rjmp	.-154    	; 0xf6a <vfprintf+0x5c>
    1004:	98 2f       	mov	r25, r24
    1006:	9f 7d       	andi	r25, 0xDF	; 223
    1008:	95 54       	subi	r25, 0x45	; 69
    100a:	93 30       	cpi	r25, 0x03	; 3
    100c:	28 f4       	brcc	.+10     	; 0x1018 <vfprintf+0x10a>
    100e:	0c 5f       	subi	r16, 0xFC	; 252
    1010:	1f 4f       	sbci	r17, 0xFF	; 255
    1012:	9f e3       	ldi	r25, 0x3F	; 63
    1014:	99 83       	std	Y+1, r25	; 0x01
    1016:	0d c0       	rjmp	.+26     	; 0x1032 <vfprintf+0x124>
    1018:	83 36       	cpi	r24, 0x63	; 99
    101a:	31 f0       	breq	.+12     	; 0x1028 <vfprintf+0x11a>
    101c:	83 37       	cpi	r24, 0x73	; 115
    101e:	71 f0       	breq	.+28     	; 0x103c <vfprintf+0x12e>
    1020:	83 35       	cpi	r24, 0x53	; 83
    1022:	09 f0       	breq	.+2      	; 0x1026 <vfprintf+0x118>
    1024:	59 c0       	rjmp	.+178    	; 0x10d8 <vfprintf+0x1ca>
    1026:	21 c0       	rjmp	.+66     	; 0x106a <vfprintf+0x15c>
    1028:	f8 01       	movw	r30, r16
    102a:	80 81       	ld	r24, Z
    102c:	89 83       	std	Y+1, r24	; 0x01
    102e:	0e 5f       	subi	r16, 0xFE	; 254
    1030:	1f 4f       	sbci	r17, 0xFF	; 255
    1032:	88 24       	eor	r8, r8
    1034:	83 94       	inc	r8
    1036:	91 2c       	mov	r9, r1
    1038:	53 01       	movw	r10, r6
    103a:	13 c0       	rjmp	.+38     	; 0x1062 <vfprintf+0x154>
    103c:	28 01       	movw	r4, r16
    103e:	f2 e0       	ldi	r31, 0x02	; 2
    1040:	4f 0e       	add	r4, r31
    1042:	51 1c       	adc	r5, r1
    1044:	f8 01       	movw	r30, r16
    1046:	a0 80       	ld	r10, Z
    1048:	b1 80       	ldd	r11, Z+1	; 0x01
    104a:	36 fe       	sbrs	r3, 6
    104c:	03 c0       	rjmp	.+6      	; 0x1054 <vfprintf+0x146>
    104e:	69 2d       	mov	r22, r9
    1050:	70 e0       	ldi	r23, 0x00	; 0
    1052:	02 c0       	rjmp	.+4      	; 0x1058 <vfprintf+0x14a>
    1054:	6f ef       	ldi	r22, 0xFF	; 255
    1056:	7f ef       	ldi	r23, 0xFF	; 255
    1058:	c5 01       	movw	r24, r10
    105a:	0e 94 96 09 	call	0x132c	; 0x132c <strnlen>
    105e:	4c 01       	movw	r8, r24
    1060:	82 01       	movw	r16, r4
    1062:	f3 2d       	mov	r31, r3
    1064:	ff 77       	andi	r31, 0x7F	; 127
    1066:	3f 2e       	mov	r3, r31
    1068:	16 c0       	rjmp	.+44     	; 0x1096 <vfprintf+0x188>
    106a:	28 01       	movw	r4, r16
    106c:	22 e0       	ldi	r18, 0x02	; 2
    106e:	42 0e       	add	r4, r18
    1070:	51 1c       	adc	r5, r1
    1072:	f8 01       	movw	r30, r16
    1074:	a0 80       	ld	r10, Z
    1076:	b1 80       	ldd	r11, Z+1	; 0x01
    1078:	36 fe       	sbrs	r3, 6
    107a:	03 c0       	rjmp	.+6      	; 0x1082 <vfprintf+0x174>
    107c:	69 2d       	mov	r22, r9
    107e:	70 e0       	ldi	r23, 0x00	; 0
    1080:	02 c0       	rjmp	.+4      	; 0x1086 <vfprintf+0x178>
    1082:	6f ef       	ldi	r22, 0xFF	; 255
    1084:	7f ef       	ldi	r23, 0xFF	; 255
    1086:	c5 01       	movw	r24, r10
    1088:	0e 94 84 09 	call	0x1308	; 0x1308 <strnlen_P>
    108c:	4c 01       	movw	r8, r24
    108e:	f3 2d       	mov	r31, r3
    1090:	f0 68       	ori	r31, 0x80	; 128
    1092:	3f 2e       	mov	r3, r31
    1094:	82 01       	movw	r16, r4
    1096:	33 fc       	sbrc	r3, 3
    1098:	1b c0       	rjmp	.+54     	; 0x10d0 <vfprintf+0x1c2>
    109a:	82 2d       	mov	r24, r2
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	88 16       	cp	r8, r24
    10a0:	99 06       	cpc	r9, r25
    10a2:	b0 f4       	brcc	.+44     	; 0x10d0 <vfprintf+0x1c2>
    10a4:	b6 01       	movw	r22, r12
    10a6:	80 e2       	ldi	r24, 0x20	; 32
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	0e 94 a1 09 	call	0x1342	; 0x1342 <fputc>
    10ae:	2a 94       	dec	r2
    10b0:	f4 cf       	rjmp	.-24     	; 0x109a <vfprintf+0x18c>
    10b2:	f5 01       	movw	r30, r10
    10b4:	37 fc       	sbrc	r3, 7
    10b6:	85 91       	lpm	r24, Z+
    10b8:	37 fe       	sbrs	r3, 7
    10ba:	81 91       	ld	r24, Z+
    10bc:	5f 01       	movw	r10, r30
    10be:	b6 01       	movw	r22, r12
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	0e 94 a1 09 	call	0x1342	; 0x1342 <fputc>
    10c6:	21 10       	cpse	r2, r1
    10c8:	2a 94       	dec	r2
    10ca:	21 e0       	ldi	r18, 0x01	; 1
    10cc:	82 1a       	sub	r8, r18
    10ce:	91 08       	sbc	r9, r1
    10d0:	81 14       	cp	r8, r1
    10d2:	91 04       	cpc	r9, r1
    10d4:	71 f7       	brne	.-36     	; 0x10b2 <vfprintf+0x1a4>
    10d6:	e8 c0       	rjmp	.+464    	; 0x12a8 <vfprintf+0x39a>
    10d8:	84 36       	cpi	r24, 0x64	; 100
    10da:	11 f0       	breq	.+4      	; 0x10e0 <vfprintf+0x1d2>
    10dc:	89 36       	cpi	r24, 0x69	; 105
    10de:	41 f5       	brne	.+80     	; 0x1130 <vfprintf+0x222>
    10e0:	f8 01       	movw	r30, r16
    10e2:	37 fe       	sbrs	r3, 7
    10e4:	07 c0       	rjmp	.+14     	; 0x10f4 <vfprintf+0x1e6>
    10e6:	60 81       	ld	r22, Z
    10e8:	71 81       	ldd	r23, Z+1	; 0x01
    10ea:	82 81       	ldd	r24, Z+2	; 0x02
    10ec:	93 81       	ldd	r25, Z+3	; 0x03
    10ee:	0c 5f       	subi	r16, 0xFC	; 252
    10f0:	1f 4f       	sbci	r17, 0xFF	; 255
    10f2:	08 c0       	rjmp	.+16     	; 0x1104 <vfprintf+0x1f6>
    10f4:	60 81       	ld	r22, Z
    10f6:	71 81       	ldd	r23, Z+1	; 0x01
    10f8:	07 2e       	mov	r0, r23
    10fa:	00 0c       	add	r0, r0
    10fc:	88 0b       	sbc	r24, r24
    10fe:	99 0b       	sbc	r25, r25
    1100:	0e 5f       	subi	r16, 0xFE	; 254
    1102:	1f 4f       	sbci	r17, 0xFF	; 255
    1104:	f3 2d       	mov	r31, r3
    1106:	ff 76       	andi	r31, 0x6F	; 111
    1108:	3f 2e       	mov	r3, r31
    110a:	97 ff       	sbrs	r25, 7
    110c:	09 c0       	rjmp	.+18     	; 0x1120 <vfprintf+0x212>
    110e:	90 95       	com	r25
    1110:	80 95       	com	r24
    1112:	70 95       	com	r23
    1114:	61 95       	neg	r22
    1116:	7f 4f       	sbci	r23, 0xFF	; 255
    1118:	8f 4f       	sbci	r24, 0xFF	; 255
    111a:	9f 4f       	sbci	r25, 0xFF	; 255
    111c:	f0 68       	ori	r31, 0x80	; 128
    111e:	3f 2e       	mov	r3, r31
    1120:	2a e0       	ldi	r18, 0x0A	; 10
    1122:	30 e0       	ldi	r19, 0x00	; 0
    1124:	a3 01       	movw	r20, r6
    1126:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__ultoa_invert>
    112a:	88 2e       	mov	r8, r24
    112c:	86 18       	sub	r8, r6
    112e:	45 c0       	rjmp	.+138    	; 0x11ba <vfprintf+0x2ac>
    1130:	85 37       	cpi	r24, 0x75	; 117
    1132:	31 f4       	brne	.+12     	; 0x1140 <vfprintf+0x232>
    1134:	23 2d       	mov	r18, r3
    1136:	2f 7e       	andi	r18, 0xEF	; 239
    1138:	b2 2e       	mov	r11, r18
    113a:	2a e0       	ldi	r18, 0x0A	; 10
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	25 c0       	rjmp	.+74     	; 0x118a <vfprintf+0x27c>
    1140:	93 2d       	mov	r25, r3
    1142:	99 7f       	andi	r25, 0xF9	; 249
    1144:	b9 2e       	mov	r11, r25
    1146:	8f 36       	cpi	r24, 0x6F	; 111
    1148:	c1 f0       	breq	.+48     	; 0x117a <vfprintf+0x26c>
    114a:	18 f4       	brcc	.+6      	; 0x1152 <vfprintf+0x244>
    114c:	88 35       	cpi	r24, 0x58	; 88
    114e:	79 f0       	breq	.+30     	; 0x116e <vfprintf+0x260>
    1150:	b5 c0       	rjmp	.+362    	; 0x12bc <vfprintf+0x3ae>
    1152:	80 37       	cpi	r24, 0x70	; 112
    1154:	19 f0       	breq	.+6      	; 0x115c <vfprintf+0x24e>
    1156:	88 37       	cpi	r24, 0x78	; 120
    1158:	21 f0       	breq	.+8      	; 0x1162 <vfprintf+0x254>
    115a:	b0 c0       	rjmp	.+352    	; 0x12bc <vfprintf+0x3ae>
    115c:	e9 2f       	mov	r30, r25
    115e:	e0 61       	ori	r30, 0x10	; 16
    1160:	be 2e       	mov	r11, r30
    1162:	b4 fe       	sbrs	r11, 4
    1164:	0d c0       	rjmp	.+26     	; 0x1180 <vfprintf+0x272>
    1166:	fb 2d       	mov	r31, r11
    1168:	f4 60       	ori	r31, 0x04	; 4
    116a:	bf 2e       	mov	r11, r31
    116c:	09 c0       	rjmp	.+18     	; 0x1180 <vfprintf+0x272>
    116e:	34 fe       	sbrs	r3, 4
    1170:	0a c0       	rjmp	.+20     	; 0x1186 <vfprintf+0x278>
    1172:	29 2f       	mov	r18, r25
    1174:	26 60       	ori	r18, 0x06	; 6
    1176:	b2 2e       	mov	r11, r18
    1178:	06 c0       	rjmp	.+12     	; 0x1186 <vfprintf+0x278>
    117a:	28 e0       	ldi	r18, 0x08	; 8
    117c:	30 e0       	ldi	r19, 0x00	; 0
    117e:	05 c0       	rjmp	.+10     	; 0x118a <vfprintf+0x27c>
    1180:	20 e1       	ldi	r18, 0x10	; 16
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	02 c0       	rjmp	.+4      	; 0x118a <vfprintf+0x27c>
    1186:	20 e1       	ldi	r18, 0x10	; 16
    1188:	32 e0       	ldi	r19, 0x02	; 2
    118a:	f8 01       	movw	r30, r16
    118c:	b7 fe       	sbrs	r11, 7
    118e:	07 c0       	rjmp	.+14     	; 0x119e <vfprintf+0x290>
    1190:	60 81       	ld	r22, Z
    1192:	71 81       	ldd	r23, Z+1	; 0x01
    1194:	82 81       	ldd	r24, Z+2	; 0x02
    1196:	93 81       	ldd	r25, Z+3	; 0x03
    1198:	0c 5f       	subi	r16, 0xFC	; 252
    119a:	1f 4f       	sbci	r17, 0xFF	; 255
    119c:	06 c0       	rjmp	.+12     	; 0x11aa <vfprintf+0x29c>
    119e:	60 81       	ld	r22, Z
    11a0:	71 81       	ldd	r23, Z+1	; 0x01
    11a2:	80 e0       	ldi	r24, 0x00	; 0
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	0e 5f       	subi	r16, 0xFE	; 254
    11a8:	1f 4f       	sbci	r17, 0xFF	; 255
    11aa:	a3 01       	movw	r20, r6
    11ac:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__ultoa_invert>
    11b0:	88 2e       	mov	r8, r24
    11b2:	86 18       	sub	r8, r6
    11b4:	fb 2d       	mov	r31, r11
    11b6:	ff 77       	andi	r31, 0x7F	; 127
    11b8:	3f 2e       	mov	r3, r31
    11ba:	36 fe       	sbrs	r3, 6
    11bc:	0d c0       	rjmp	.+26     	; 0x11d8 <vfprintf+0x2ca>
    11be:	23 2d       	mov	r18, r3
    11c0:	2e 7f       	andi	r18, 0xFE	; 254
    11c2:	a2 2e       	mov	r10, r18
    11c4:	89 14       	cp	r8, r9
    11c6:	58 f4       	brcc	.+22     	; 0x11de <vfprintf+0x2d0>
    11c8:	34 fe       	sbrs	r3, 4
    11ca:	0b c0       	rjmp	.+22     	; 0x11e2 <vfprintf+0x2d4>
    11cc:	32 fc       	sbrc	r3, 2
    11ce:	09 c0       	rjmp	.+18     	; 0x11e2 <vfprintf+0x2d4>
    11d0:	83 2d       	mov	r24, r3
    11d2:	8e 7e       	andi	r24, 0xEE	; 238
    11d4:	a8 2e       	mov	r10, r24
    11d6:	05 c0       	rjmp	.+10     	; 0x11e2 <vfprintf+0x2d4>
    11d8:	b8 2c       	mov	r11, r8
    11da:	a3 2c       	mov	r10, r3
    11dc:	03 c0       	rjmp	.+6      	; 0x11e4 <vfprintf+0x2d6>
    11de:	b8 2c       	mov	r11, r8
    11e0:	01 c0       	rjmp	.+2      	; 0x11e4 <vfprintf+0x2d6>
    11e2:	b9 2c       	mov	r11, r9
    11e4:	a4 fe       	sbrs	r10, 4
    11e6:	0f c0       	rjmp	.+30     	; 0x1206 <vfprintf+0x2f8>
    11e8:	fe 01       	movw	r30, r28
    11ea:	e8 0d       	add	r30, r8
    11ec:	f1 1d       	adc	r31, r1
    11ee:	80 81       	ld	r24, Z
    11f0:	80 33       	cpi	r24, 0x30	; 48
    11f2:	21 f4       	brne	.+8      	; 0x11fc <vfprintf+0x2ee>
    11f4:	9a 2d       	mov	r25, r10
    11f6:	99 7e       	andi	r25, 0xE9	; 233
    11f8:	a9 2e       	mov	r10, r25
    11fa:	09 c0       	rjmp	.+18     	; 0x120e <vfprintf+0x300>
    11fc:	a2 fe       	sbrs	r10, 2
    11fe:	06 c0       	rjmp	.+12     	; 0x120c <vfprintf+0x2fe>
    1200:	b3 94       	inc	r11
    1202:	b3 94       	inc	r11
    1204:	04 c0       	rjmp	.+8      	; 0x120e <vfprintf+0x300>
    1206:	8a 2d       	mov	r24, r10
    1208:	86 78       	andi	r24, 0x86	; 134
    120a:	09 f0       	breq	.+2      	; 0x120e <vfprintf+0x300>
    120c:	b3 94       	inc	r11
    120e:	a3 fc       	sbrc	r10, 3
    1210:	11 c0       	rjmp	.+34     	; 0x1234 <vfprintf+0x326>
    1212:	a0 fe       	sbrs	r10, 0
    1214:	06 c0       	rjmp	.+12     	; 0x1222 <vfprintf+0x314>
    1216:	b2 14       	cp	r11, r2
    1218:	88 f4       	brcc	.+34     	; 0x123c <vfprintf+0x32e>
    121a:	28 0c       	add	r2, r8
    121c:	92 2c       	mov	r9, r2
    121e:	9b 18       	sub	r9, r11
    1220:	0e c0       	rjmp	.+28     	; 0x123e <vfprintf+0x330>
    1222:	b2 14       	cp	r11, r2
    1224:	60 f4       	brcc	.+24     	; 0x123e <vfprintf+0x330>
    1226:	b6 01       	movw	r22, r12
    1228:	80 e2       	ldi	r24, 0x20	; 32
    122a:	90 e0       	ldi	r25, 0x00	; 0
    122c:	0e 94 a1 09 	call	0x1342	; 0x1342 <fputc>
    1230:	b3 94       	inc	r11
    1232:	f7 cf       	rjmp	.-18     	; 0x1222 <vfprintf+0x314>
    1234:	b2 14       	cp	r11, r2
    1236:	18 f4       	brcc	.+6      	; 0x123e <vfprintf+0x330>
    1238:	2b 18       	sub	r2, r11
    123a:	02 c0       	rjmp	.+4      	; 0x1240 <vfprintf+0x332>
    123c:	98 2c       	mov	r9, r8
    123e:	21 2c       	mov	r2, r1
    1240:	a4 fe       	sbrs	r10, 4
    1242:	10 c0       	rjmp	.+32     	; 0x1264 <vfprintf+0x356>
    1244:	b6 01       	movw	r22, r12
    1246:	80 e3       	ldi	r24, 0x30	; 48
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	0e 94 a1 09 	call	0x1342	; 0x1342 <fputc>
    124e:	a2 fe       	sbrs	r10, 2
    1250:	17 c0       	rjmp	.+46     	; 0x1280 <vfprintf+0x372>
    1252:	a1 fc       	sbrc	r10, 1
    1254:	03 c0       	rjmp	.+6      	; 0x125c <vfprintf+0x34e>
    1256:	88 e7       	ldi	r24, 0x78	; 120
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	02 c0       	rjmp	.+4      	; 0x1260 <vfprintf+0x352>
    125c:	88 e5       	ldi	r24, 0x58	; 88
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	b6 01       	movw	r22, r12
    1262:	0c c0       	rjmp	.+24     	; 0x127c <vfprintf+0x36e>
    1264:	8a 2d       	mov	r24, r10
    1266:	86 78       	andi	r24, 0x86	; 134
    1268:	59 f0       	breq	.+22     	; 0x1280 <vfprintf+0x372>
    126a:	a1 fe       	sbrs	r10, 1
    126c:	02 c0       	rjmp	.+4      	; 0x1272 <vfprintf+0x364>
    126e:	8b e2       	ldi	r24, 0x2B	; 43
    1270:	01 c0       	rjmp	.+2      	; 0x1274 <vfprintf+0x366>
    1272:	80 e2       	ldi	r24, 0x20	; 32
    1274:	a7 fc       	sbrc	r10, 7
    1276:	8d e2       	ldi	r24, 0x2D	; 45
    1278:	b6 01       	movw	r22, r12
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	0e 94 a1 09 	call	0x1342	; 0x1342 <fputc>
    1280:	89 14       	cp	r8, r9
    1282:	38 f4       	brcc	.+14     	; 0x1292 <vfprintf+0x384>
    1284:	b6 01       	movw	r22, r12
    1286:	80 e3       	ldi	r24, 0x30	; 48
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	0e 94 a1 09 	call	0x1342	; 0x1342 <fputc>
    128e:	9a 94       	dec	r9
    1290:	f7 cf       	rjmp	.-18     	; 0x1280 <vfprintf+0x372>
    1292:	8a 94       	dec	r8
    1294:	f3 01       	movw	r30, r6
    1296:	e8 0d       	add	r30, r8
    1298:	f1 1d       	adc	r31, r1
    129a:	80 81       	ld	r24, Z
    129c:	b6 01       	movw	r22, r12
    129e:	90 e0       	ldi	r25, 0x00	; 0
    12a0:	0e 94 a1 09 	call	0x1342	; 0x1342 <fputc>
    12a4:	81 10       	cpse	r8, r1
    12a6:	f5 cf       	rjmp	.-22     	; 0x1292 <vfprintf+0x384>
    12a8:	22 20       	and	r2, r2
    12aa:	09 f4       	brne	.+2      	; 0x12ae <vfprintf+0x3a0>
    12ac:	42 ce       	rjmp	.-892    	; 0xf32 <vfprintf+0x24>
    12ae:	b6 01       	movw	r22, r12
    12b0:	80 e2       	ldi	r24, 0x20	; 32
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	0e 94 a1 09 	call	0x1342	; 0x1342 <fputc>
    12b8:	2a 94       	dec	r2
    12ba:	f6 cf       	rjmp	.-20     	; 0x12a8 <vfprintf+0x39a>
    12bc:	f6 01       	movw	r30, r12
    12be:	86 81       	ldd	r24, Z+6	; 0x06
    12c0:	97 81       	ldd	r25, Z+7	; 0x07
    12c2:	02 c0       	rjmp	.+4      	; 0x12c8 <vfprintf+0x3ba>
    12c4:	8f ef       	ldi	r24, 0xFF	; 255
    12c6:	9f ef       	ldi	r25, 0xFF	; 255
    12c8:	2b 96       	adiw	r28, 0x0b	; 11
    12ca:	e2 e1       	ldi	r30, 0x12	; 18
    12cc:	0c 94 57 0a 	jmp	0x14ae	; 0x14ae <__epilogue_restores__>

000012d0 <calloc>:
    12d0:	0f 93       	push	r16
    12d2:	1f 93       	push	r17
    12d4:	cf 93       	push	r28
    12d6:	df 93       	push	r29
    12d8:	86 9f       	mul	r24, r22
    12da:	80 01       	movw	r16, r0
    12dc:	87 9f       	mul	r24, r23
    12de:	10 0d       	add	r17, r0
    12e0:	96 9f       	mul	r25, r22
    12e2:	10 0d       	add	r17, r0
    12e4:	11 24       	eor	r1, r1
    12e6:	c8 01       	movw	r24, r16
    12e8:	0e 94 05 06 	call	0xc0a	; 0xc0a <malloc>
    12ec:	ec 01       	movw	r28, r24
    12ee:	00 97       	sbiw	r24, 0x00	; 0
    12f0:	29 f0       	breq	.+10     	; 0x12fc <calloc+0x2c>
    12f2:	a8 01       	movw	r20, r16
    12f4:	60 e0       	ldi	r22, 0x00	; 0
    12f6:	70 e0       	ldi	r23, 0x00	; 0
    12f8:	0e 94 8f 09 	call	0x131e	; 0x131e <memset>
    12fc:	ce 01       	movw	r24, r28
    12fe:	df 91       	pop	r29
    1300:	cf 91       	pop	r28
    1302:	1f 91       	pop	r17
    1304:	0f 91       	pop	r16
    1306:	08 95       	ret

00001308 <strnlen_P>:
    1308:	fc 01       	movw	r30, r24
    130a:	05 90       	lpm	r0, Z+
    130c:	61 50       	subi	r22, 0x01	; 1
    130e:	70 40       	sbci	r23, 0x00	; 0
    1310:	01 10       	cpse	r0, r1
    1312:	d8 f7       	brcc	.-10     	; 0x130a <strnlen_P+0x2>
    1314:	80 95       	com	r24
    1316:	90 95       	com	r25
    1318:	8e 0f       	add	r24, r30
    131a:	9f 1f       	adc	r25, r31
    131c:	08 95       	ret

0000131e <memset>:
    131e:	dc 01       	movw	r26, r24
    1320:	01 c0       	rjmp	.+2      	; 0x1324 <memset+0x6>
    1322:	6d 93       	st	X+, r22
    1324:	41 50       	subi	r20, 0x01	; 1
    1326:	50 40       	sbci	r21, 0x00	; 0
    1328:	e0 f7       	brcc	.-8      	; 0x1322 <memset+0x4>
    132a:	08 95       	ret

0000132c <strnlen>:
    132c:	fc 01       	movw	r30, r24
    132e:	61 50       	subi	r22, 0x01	; 1
    1330:	70 40       	sbci	r23, 0x00	; 0
    1332:	01 90       	ld	r0, Z+
    1334:	01 10       	cpse	r0, r1
    1336:	d8 f7       	brcc	.-10     	; 0x132e <strnlen+0x2>
    1338:	80 95       	com	r24
    133a:	90 95       	com	r25
    133c:	8e 0f       	add	r24, r30
    133e:	9f 1f       	adc	r25, r31
    1340:	08 95       	ret

00001342 <fputc>:
    1342:	0f 93       	push	r16
    1344:	1f 93       	push	r17
    1346:	cf 93       	push	r28
    1348:	df 93       	push	r29
    134a:	fb 01       	movw	r30, r22
    134c:	23 81       	ldd	r18, Z+3	; 0x03
    134e:	21 fd       	sbrc	r18, 1
    1350:	03 c0       	rjmp	.+6      	; 0x1358 <fputc+0x16>
    1352:	8f ef       	ldi	r24, 0xFF	; 255
    1354:	9f ef       	ldi	r25, 0xFF	; 255
    1356:	2c c0       	rjmp	.+88     	; 0x13b0 <fputc+0x6e>
    1358:	22 ff       	sbrs	r18, 2
    135a:	16 c0       	rjmp	.+44     	; 0x1388 <fputc+0x46>
    135c:	46 81       	ldd	r20, Z+6	; 0x06
    135e:	57 81       	ldd	r21, Z+7	; 0x07
    1360:	24 81       	ldd	r18, Z+4	; 0x04
    1362:	35 81       	ldd	r19, Z+5	; 0x05
    1364:	42 17       	cp	r20, r18
    1366:	53 07       	cpc	r21, r19
    1368:	44 f4       	brge	.+16     	; 0x137a <fputc+0x38>
    136a:	a0 81       	ld	r26, Z
    136c:	b1 81       	ldd	r27, Z+1	; 0x01
    136e:	9d 01       	movw	r18, r26
    1370:	2f 5f       	subi	r18, 0xFF	; 255
    1372:	3f 4f       	sbci	r19, 0xFF	; 255
    1374:	31 83       	std	Z+1, r19	; 0x01
    1376:	20 83       	st	Z, r18
    1378:	8c 93       	st	X, r24
    137a:	26 81       	ldd	r18, Z+6	; 0x06
    137c:	37 81       	ldd	r19, Z+7	; 0x07
    137e:	2f 5f       	subi	r18, 0xFF	; 255
    1380:	3f 4f       	sbci	r19, 0xFF	; 255
    1382:	37 83       	std	Z+7, r19	; 0x07
    1384:	26 83       	std	Z+6, r18	; 0x06
    1386:	14 c0       	rjmp	.+40     	; 0x13b0 <fputc+0x6e>
    1388:	8b 01       	movw	r16, r22
    138a:	ec 01       	movw	r28, r24
    138c:	fb 01       	movw	r30, r22
    138e:	00 84       	ldd	r0, Z+8	; 0x08
    1390:	f1 85       	ldd	r31, Z+9	; 0x09
    1392:	e0 2d       	mov	r30, r0
    1394:	09 95       	icall
    1396:	89 2b       	or	r24, r25
    1398:	e1 f6       	brne	.-72     	; 0x1352 <fputc+0x10>
    139a:	d8 01       	movw	r26, r16
    139c:	16 96       	adiw	r26, 0x06	; 6
    139e:	8d 91       	ld	r24, X+
    13a0:	9c 91       	ld	r25, X
    13a2:	17 97       	sbiw	r26, 0x07	; 7
    13a4:	01 96       	adiw	r24, 0x01	; 1
    13a6:	17 96       	adiw	r26, 0x07	; 7
    13a8:	9c 93       	st	X, r25
    13aa:	8e 93       	st	-X, r24
    13ac:	16 97       	sbiw	r26, 0x06	; 6
    13ae:	ce 01       	movw	r24, r28
    13b0:	df 91       	pop	r29
    13b2:	cf 91       	pop	r28
    13b4:	1f 91       	pop	r17
    13b6:	0f 91       	pop	r16
    13b8:	08 95       	ret

000013ba <__ultoa_invert>:
    13ba:	fa 01       	movw	r30, r20
    13bc:	aa 27       	eor	r26, r26
    13be:	28 30       	cpi	r18, 0x08	; 8
    13c0:	51 f1       	breq	.+84     	; 0x1416 <__ultoa_invert+0x5c>
    13c2:	20 31       	cpi	r18, 0x10	; 16
    13c4:	81 f1       	breq	.+96     	; 0x1426 <__ultoa_invert+0x6c>
    13c6:	e8 94       	clt
    13c8:	6f 93       	push	r22
    13ca:	6e 7f       	andi	r22, 0xFE	; 254
    13cc:	6e 5f       	subi	r22, 0xFE	; 254
    13ce:	7f 4f       	sbci	r23, 0xFF	; 255
    13d0:	8f 4f       	sbci	r24, 0xFF	; 255
    13d2:	9f 4f       	sbci	r25, 0xFF	; 255
    13d4:	af 4f       	sbci	r26, 0xFF	; 255
    13d6:	b1 e0       	ldi	r27, 0x01	; 1
    13d8:	3e d0       	rcall	.+124    	; 0x1456 <__ultoa_invert+0x9c>
    13da:	b4 e0       	ldi	r27, 0x04	; 4
    13dc:	3c d0       	rcall	.+120    	; 0x1456 <__ultoa_invert+0x9c>
    13de:	67 0f       	add	r22, r23
    13e0:	78 1f       	adc	r23, r24
    13e2:	89 1f       	adc	r24, r25
    13e4:	9a 1f       	adc	r25, r26
    13e6:	a1 1d       	adc	r26, r1
    13e8:	68 0f       	add	r22, r24
    13ea:	79 1f       	adc	r23, r25
    13ec:	8a 1f       	adc	r24, r26
    13ee:	91 1d       	adc	r25, r1
    13f0:	a1 1d       	adc	r26, r1
    13f2:	6a 0f       	add	r22, r26
    13f4:	71 1d       	adc	r23, r1
    13f6:	81 1d       	adc	r24, r1
    13f8:	91 1d       	adc	r25, r1
    13fa:	a1 1d       	adc	r26, r1
    13fc:	20 d0       	rcall	.+64     	; 0x143e <__ultoa_invert+0x84>
    13fe:	09 f4       	brne	.+2      	; 0x1402 <__ultoa_invert+0x48>
    1400:	68 94       	set
    1402:	3f 91       	pop	r19
    1404:	2a e0       	ldi	r18, 0x0A	; 10
    1406:	26 9f       	mul	r18, r22
    1408:	11 24       	eor	r1, r1
    140a:	30 19       	sub	r19, r0
    140c:	30 5d       	subi	r19, 0xD0	; 208
    140e:	31 93       	st	Z+, r19
    1410:	de f6       	brtc	.-74     	; 0x13c8 <__ultoa_invert+0xe>
    1412:	cf 01       	movw	r24, r30
    1414:	08 95       	ret
    1416:	46 2f       	mov	r20, r22
    1418:	47 70       	andi	r20, 0x07	; 7
    141a:	40 5d       	subi	r20, 0xD0	; 208
    141c:	41 93       	st	Z+, r20
    141e:	b3 e0       	ldi	r27, 0x03	; 3
    1420:	0f d0       	rcall	.+30     	; 0x1440 <__ultoa_invert+0x86>
    1422:	c9 f7       	brne	.-14     	; 0x1416 <__ultoa_invert+0x5c>
    1424:	f6 cf       	rjmp	.-20     	; 0x1412 <__ultoa_invert+0x58>
    1426:	46 2f       	mov	r20, r22
    1428:	4f 70       	andi	r20, 0x0F	; 15
    142a:	40 5d       	subi	r20, 0xD0	; 208
    142c:	4a 33       	cpi	r20, 0x3A	; 58
    142e:	18 f0       	brcs	.+6      	; 0x1436 <__ultoa_invert+0x7c>
    1430:	49 5d       	subi	r20, 0xD9	; 217
    1432:	31 fd       	sbrc	r19, 1
    1434:	40 52       	subi	r20, 0x20	; 32
    1436:	41 93       	st	Z+, r20
    1438:	02 d0       	rcall	.+4      	; 0x143e <__ultoa_invert+0x84>
    143a:	a9 f7       	brne	.-22     	; 0x1426 <__ultoa_invert+0x6c>
    143c:	ea cf       	rjmp	.-44     	; 0x1412 <__ultoa_invert+0x58>
    143e:	b4 e0       	ldi	r27, 0x04	; 4
    1440:	a6 95       	lsr	r26
    1442:	97 95       	ror	r25
    1444:	87 95       	ror	r24
    1446:	77 95       	ror	r23
    1448:	67 95       	ror	r22
    144a:	ba 95       	dec	r27
    144c:	c9 f7       	brne	.-14     	; 0x1440 <__ultoa_invert+0x86>
    144e:	00 97       	sbiw	r24, 0x00	; 0
    1450:	61 05       	cpc	r22, r1
    1452:	71 05       	cpc	r23, r1
    1454:	08 95       	ret
    1456:	9b 01       	movw	r18, r22
    1458:	ac 01       	movw	r20, r24
    145a:	0a 2e       	mov	r0, r26
    145c:	06 94       	lsr	r0
    145e:	57 95       	ror	r21
    1460:	47 95       	ror	r20
    1462:	37 95       	ror	r19
    1464:	27 95       	ror	r18
    1466:	ba 95       	dec	r27
    1468:	c9 f7       	brne	.-14     	; 0x145c <__ultoa_invert+0xa2>
    146a:	62 0f       	add	r22, r18
    146c:	73 1f       	adc	r23, r19
    146e:	84 1f       	adc	r24, r20
    1470:	95 1f       	adc	r25, r21
    1472:	a0 1d       	adc	r26, r0
    1474:	08 95       	ret

00001476 <__prologue_saves__>:
    1476:	2f 92       	push	r2
    1478:	3f 92       	push	r3
    147a:	4f 92       	push	r4
    147c:	5f 92       	push	r5
    147e:	6f 92       	push	r6
    1480:	7f 92       	push	r7
    1482:	8f 92       	push	r8
    1484:	9f 92       	push	r9
    1486:	af 92       	push	r10
    1488:	bf 92       	push	r11
    148a:	cf 92       	push	r12
    148c:	df 92       	push	r13
    148e:	ef 92       	push	r14
    1490:	ff 92       	push	r15
    1492:	0f 93       	push	r16
    1494:	1f 93       	push	r17
    1496:	cf 93       	push	r28
    1498:	df 93       	push	r29
    149a:	cd b7       	in	r28, 0x3d	; 61
    149c:	de b7       	in	r29, 0x3e	; 62
    149e:	ca 1b       	sub	r28, r26
    14a0:	db 0b       	sbc	r29, r27
    14a2:	0f b6       	in	r0, 0x3f	; 63
    14a4:	f8 94       	cli
    14a6:	de bf       	out	0x3e, r29	; 62
    14a8:	0f be       	out	0x3f, r0	; 63
    14aa:	cd bf       	out	0x3d, r28	; 61
    14ac:	09 94       	ijmp

000014ae <__epilogue_restores__>:
    14ae:	2a 88       	ldd	r2, Y+18	; 0x12
    14b0:	39 88       	ldd	r3, Y+17	; 0x11
    14b2:	48 88       	ldd	r4, Y+16	; 0x10
    14b4:	5f 84       	ldd	r5, Y+15	; 0x0f
    14b6:	6e 84       	ldd	r6, Y+14	; 0x0e
    14b8:	7d 84       	ldd	r7, Y+13	; 0x0d
    14ba:	8c 84       	ldd	r8, Y+12	; 0x0c
    14bc:	9b 84       	ldd	r9, Y+11	; 0x0b
    14be:	aa 84       	ldd	r10, Y+10	; 0x0a
    14c0:	b9 84       	ldd	r11, Y+9	; 0x09
    14c2:	c8 84       	ldd	r12, Y+8	; 0x08
    14c4:	df 80       	ldd	r13, Y+7	; 0x07
    14c6:	ee 80       	ldd	r14, Y+6	; 0x06
    14c8:	fd 80       	ldd	r15, Y+5	; 0x05
    14ca:	0c 81       	ldd	r16, Y+4	; 0x04
    14cc:	1b 81       	ldd	r17, Y+3	; 0x03
    14ce:	aa 81       	ldd	r26, Y+2	; 0x02
    14d0:	b9 81       	ldd	r27, Y+1	; 0x01
    14d2:	ce 0f       	add	r28, r30
    14d4:	d1 1d       	adc	r29, r1
    14d6:	0f b6       	in	r0, 0x3f	; 63
    14d8:	f8 94       	cli
    14da:	de bf       	out	0x3e, r29	; 62
    14dc:	0f be       	out	0x3f, r0	; 63
    14de:	cd bf       	out	0x3d, r28	; 61
    14e0:	ed 01       	movw	r28, r26
    14e2:	08 95       	ret

000014e4 <_exit>:
    14e4:	f8 94       	cli

000014e6 <__stop_program>:
    14e6:	ff cf       	rjmp	.-2      	; 0x14e6 <__stop_program>
